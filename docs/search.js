window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "aton", "modulename": "aton", "kind": "module", "doc": "<p align=\"center\"><img width=\"40.0%\" src=\"pics/aton.png\"></p>\n\n<h1 id=\"welcome-to-aton\">Welcome to ATON</h1>\n\n<p>The <strong>A</strong>b-ini<strong>T</strong>i<strong>O</strong> &amp; <strong>N</strong>eutron research toolbox,\nor <strong>ATON</strong>,\nprovides powerful and comprehensive tools\nfor cutting-edge materials research,\nfocused on (but not limited to) neutron science.\nDesigned to bridge the gap between theoretical modeling and experimental validation,\nATON allows researchers to streamline and simplify workflows in the study of advanced materials.</p>\n\n<p>Just like its <a href=\"https://en.wikipedia.org/wiki/Aten\">ancient Egyptian deity</a> counterpart,\nthis all-in-one Python package comprises a range of utility tools\nfrom INS spectra analysis to <em>ab-initio</em> interfaces\nfor <a href=\"https://www.quantum-espresso.org/\">Quantum ESPRESSO</a>,\n<a href=\"https://phonopy.github.io/phonopy/\">Phonopy</a> and\n<a href=\"https://castep-docs.github.io/castep-docs/\">CASTEP</a>.\nConversion factors and universal constants from the <a href=\"https://doi.org/10.48550/arXiv.2409.03787\">2022 CODATA</a>\nRecommended Values of the Fundamental Physical Constants are also included.  </p>\n\n<p>The source code is available on <a href=\"https://github.com/pablogila/aton/\">GitHub</a>.   </p>\n\n<hr />\n\n<h1 id=\"installation\">Installation</h1>\n\n<p>As always, it is recommended to install your packages in a virtual environment:  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>python3<span class=\"w\"> </span>-m<span class=\"w\"> </span>venv<span class=\"w\"> </span>.venv\n<span class=\"nb\">source</span><span class=\"w\"> </span>.venv/bin/activate\n</code></pre>\n</div>\n\n<h2 id=\"with-pip\">With pip</h2>\n\n<p>Install ATON with  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>aton\n</code></pre>\n</div>\n\n<p>Or upgrade to a new version as</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>aton<span class=\"w\"> </span>-U\n</code></pre>\n</div>\n\n<h2 id=\"from-source\">From source</h2>\n\n<p>Optionally, you can install ATON from the <a href=\"https://github.com/pablogila/aton/\">GitHub repo</a>.\nClone the repository or download the <a href=\"https://github.com/pablogila/aton/tags\">latest stable release</a>\nas a ZIP, unzip it, and run inside the <code>ATON/</code> directory:  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>.\n</code></pre>\n</div>\n\n<hr />\n\n<h1 id=\"documentation\">Documentation</h1>\n\n<p>The full ATON documentation is available <a href=\"https://pablogila.github.io/aton/\">online</a>.<br />\nAn offline version is found at <code>docs/aton.html</code>.<br />\nCode examples are included in the <a href=\"https://github.com/pablogila/aton/tree/main/examples\"><code>examples/</code></a> folder.    </p>\n\n<h2 id=\"interfaces-for-ab-initio-codes\">Interfaces for <em>ab-initio</em> codes</h2>\n\n<p>The <strong>api</strong> module contains Python interfaces for several <em>ab-initio</em> codes and related.\nThese are powered by the <a href=\"#general-text-edition\">aton.txt</a> module and can be easily extended.</p>\n\n<h3 id=\"atonapi\"><code>aton.api</code></h3>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.api.qe</code></td>\n  <td>Interface for <a href=\"https://www.quantum-espresso.org/\">Quantum ESPRESSO</a>'s <a href=\"https://www.quantum-espresso.org/Doc/INPUT_PW.html\">pw.x</a> module</td>\n</tr>\n<tr>\n  <td><code>aton.api.phonopy</code></td>\n  <td>Interface for <a href=\"https://phonopy.github.io/phonopy/\">Phonopy</a> calculations</td>\n</tr>\n<tr>\n  <td><code>aton.api.castep</code></td>\n  <td>Interface for <a href=\"https://castep-docs.github.io/castep-docs/\">CASTEP</a> calculations</td>\n</tr>\n<tr>\n  <td><code>aton.api.slurm</code></td>\n  <td>Batch jobs via <a href=\"https://slurm.schedmd.com/\">Slurm</a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=\"physico-chemical-constants\">Physico-chemical constants</h2>\n\n<p>The <strong>phys</strong> module contains physical constants and conversion factors,\nas well as chemical information from all known elements.\nValues are accessed directly as <code>phys.value</code> or <code>phys.function()</code>.</p>\n\n<h3 id=\"atonphys\"><code>aton.phys</code></h3>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.phys.units</code></td>\n  <td>Physical constants and conversion factors</td>\n</tr>\n<tr>\n  <td><code>aton.phys.atoms</code></td>\n  <td>Megadictionary with data for all chemical elements</td>\n</tr>\n<tr>\n  <td><code>aton.phys.functions</code></td>\n  <td>Functions to sort and analyse element data</td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=\"quantum-rotations\">Quantum rotations</h2>\n\n<p>The <strong>QRotor</strong> module is used to study energy excitations and tunnel splittings\nfrom molecular rotations, such as those of methyl and amine groups.</p>\n\n<h3 id=\"atonqrotor\"><code>aton.qrotor</code></h3>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.qrotor.system</code></td>\n  <td>Definition of the quantum <code>System</code> object</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.systems</code></td>\n  <td>Functions to manage several System objects</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.rotate</code></td>\n  <td>Rotate specific atoms from structural files</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.constants</code></td>\n  <td>Common bond lengths and inertias</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.potential</code></td>\n  <td>Potential definitions and loading functions</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.solve</code></td>\n  <td>Solve rotation eigenvalues and eigenvectors</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.plot</code></td>\n  <td>Plotting functions</td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=\"spectra-analysis\">Spectra analysis</h2>\n\n<p>The <strong>spx</strong> module includes tools for spectral analysis from\nInelastic Neutron Scattering, Raman, Infrared, etc.</p>\n\n<h3 id=\"atonspx\"><code>aton.spx</code></h3>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.spx.classes</code></td>\n  <td>Class definitions for the spectra module</td>\n</tr>\n<tr>\n  <td><code>aton.spx.fit</code></td>\n  <td>Spectra fitting functions</td>\n</tr>\n<tr>\n  <td><code>aton.spx.normalize</code></td>\n  <td>Spectra normalization</td>\n</tr>\n<tr>\n  <td><code>aton.spx.plot</code></td>\n  <td>Plotting</td>\n</tr>\n<tr>\n  <td><code>aton.spx.deuterium</code></td>\n  <td>Deuteration estimations via INS</td>\n</tr>\n<tr>\n  <td><code>aton.spx.samples</code></td>\n  <td>Sample materials for testing</td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=\"general-text-edition\">General text edition</h2>\n\n<p>The <strong>txt</strong> module handles text files.\nIt powers more complex subpackages,\nsuch as <a href=\"#interfaces-for-ab-initio-codes\">aton.api</a>.</p>\n\n<h3 id=\"atontxt\"><code>aton.txt</code></h3>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.txt.find</code></td>\n  <td>Search for specific content in text files</td>\n</tr>\n<tr>\n  <td><code>aton.txt.edit</code></td>\n  <td>Manipulate text files</td>\n</tr>\n<tr>\n  <td><code>aton.txt.extract</code></td>\n  <td>Extract data from raw text strings</td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=\"system-tools\">System tools</h2>\n\n<p>Additional utility tools are available for common system tasks across subpackages.</p>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.file</code></td>\n  <td>File manipulation</td>\n</tr>\n<tr>\n  <td><code>aton.alias</code></td>\n  <td>Useful dictionaries for user input correction</td>\n</tr>\n<tr>\n  <td><code>aton.call</code></td>\n  <td>Run bash scripts and related</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n\n<h1 id=\"contributing\">Contributing</h1>\n\n<p>If you are interested in opening an issue or a pull request, please feel free to do so on <a href=\"https://github.com/pablogila/aton/\">GitHub</a>.<br />\nFor major changes, please get in touch first to discuss the details.  </p>\n\n<h2 id=\"code-style\">Code style</h2>\n\n<p>Please try to follow some general guidelines:  </p>\n\n<ul>\n<li>Use a code style consistent with the rest of the project.  </li>\n<li>Include docstrings to document new additions.  </li>\n<li>Include automated tests for new features or modifications, see <a href=\"#automated-testing\">automated testing</a>.  </li>\n<li>Arrange function arguments by order of relevance. Most implemented functions follow something similar to <code>function(file, key/s, value/s, optional)</code>.  </li>\n</ul>\n\n<h2 id=\"automated-testing\">Automated testing</h2>\n\n<p>If you are modifying the source code, you should run the automated tests of the <a href=\"https://github.com/pablogila/aton/tree/main/tests\"><code>ATON/tests/</code></a> folder to check that everything works as intended.\nTo do so, first install PyTest in your environment,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>pytest\n</code></pre>\n</div>\n\n<p>And then run PyTest inside the <code>ATON/</code> directory,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pytest<span class=\"w\"> </span>-vv\n</code></pre>\n</div>\n\n<h2 id=\"compiling-the-documentation\">Compiling the documentation</h2>\n\n<p>The documentation can be compiled automatically to <code>docs/aton.html</code> with <a href=\"https://pdoc.dev/\">Pdoc</a> and ATON itself, by running:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>python3<span class=\"w\"> </span>makedocs.py\n</code></pre>\n</div>\n\n<p>This runs Pdoc, updating links and pictures, and using the custom theme CSS template from the <code>css/</code> folder.</p>\n\n<hr />\n\n<h1 id=\"citation\">Citation</h1>\n\n<p>ATON development started for the following paper, please cite if you use ATON in your work:<br />\n<a href=\"https://doi.org/10.1021/acs.cgd.3c01112\"><em>Cryst. Growth Des.</em> 2024, 24, 391\u2212404</a>  </p>\n\n<h1 id=\"license\">License</h1>\n\n<p>Copyright (C) 2025 Pablo Gila-Herranz<br />\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the <strong>GNU Affero General Public License</strong> as published\nby the Free Software Foundation, either version <strong>3</strong> of the License, or\n(at your option) any later version.<br />\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br />\nSee the attached GNU Affero General Public License for more details.  </p>\n"}, {"fullname": "aton.alias", "modulename": "aton.alias", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains common dictionaries to normalise and correct user inputs.\nAll values can be found in lowercase, to allow comparison with the <code>string.lower()</code> method.\nInverse of an unit X, as in 1/X or X$^{-1}$, is expressed as <code>X1</code>.\nSee all available options with <code>dict.keys()</code>.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<p><code>units</code><br />\n<code>spatial</code><br />\n<code>experiments</code><br />\n<code>files</code><br />\n<code>boolean</code><br />\n<code>math</code>  </p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">unit</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Electronvolts&#39;</span>\n<span class=\"k\">if</span> <span class=\"n\">unit</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">[</span><span class=\"s1\">&#39;eV&#39;</span><span class=\"p\">]:</span>\n    <span class=\"o\">...</span> <span class=\"n\">do</span> <span class=\"n\">stuff</span> <span class=\"o\">...</span>\n</code></pre>\n</div>\n\n<hr />\n"}, {"fullname": "aton.alias.units", "modulename": "aton.alias", "qualname": "units", "kind": "variable", "doc": "<p>Dict with unit names.</p>\n", "annotation": ": dict", "default_value": "{&#x27;mol&#x27;: [&#x27;mol&#x27;, &#x27;mols&#x27;, &#x27;mole&#x27;, &#x27;moles&#x27;], &#x27;g&#x27;: [&#x27;g&#x27;, &#x27;gram&#x27;, &#x27;grams&#x27;], &#x27;kg&#x27;: [&#x27;kg&#x27;, &#x27;kilogram&#x27;, &#x27;kilograms&#x27;], &#x27;amu&#x27;: [&#x27;amu&#x27;, &#x27;atomicmassunit&#x27;, &#x27;atomicmassunits&#x27;], &#x27;eV&#x27;: [&#x27;eV&#x27;, &#x27;ev&#x27;, &#x27;electronvolt&#x27;, &#x27;electronvolts&#x27;], &#x27;meV&#x27;: [&#x27;meV&#x27;, &#x27;mev&#x27;, &#x27;millielectronvolt&#x27;, &#x27;millielectronvolts&#x27;], &#x27;ueV&#x27;: [&#x27;ueV&#x27;, &#x27;uev&#x27;, &#x27;microelectronvolts&#x27;, &#x27;mueV&#x27;, &#x27;muev&#x27;], &#x27;J&#x27;: [&#x27;J&#x27;, &#x27;j&#x27;, &#x27;joule&#x27;, &#x27;joules&#x27;], &#x27;cal&#x27;: [&#x27;cal&#x27;, &#x27;calorie&#x27;, &#x27;calories&#x27;], &#x27;kcal&#x27;: [&#x27;kcal&#x27;, &#x27;kilocalorie&#x27;, &#x27;kilocalories&#x27;], &#x27;Ry&#x27;: [&#x27;Ry&#x27;, &#x27;ry&#x27;, &#x27;rydberg&#x27;, &#x27;rydbergs&#x27;], &#x27;cm&#x27;: [&#x27;cm&#x27;, &#x27;centimeter&#x27;, &#x27;centimeters&#x27;], &#x27;cm1&#x27;: [&#x27;cm^{-1}&#x27;, &#x27;cm1&#x27;, &#x27;cm-1&#x27;, &#x27;cm^-1&#x27;], &#x27;AA&#x27;: [&#x27;A&#x27;, &#x27;AA&#x27;, &#x27;a&#x27;, &#x27;aa&#x27;, &#x27;angstrom&#x27;, &#x27;angstroms&#x27;, &#x27;armstrong&#x27;, &#x27;armstrongs&#x27;], &#x27;AA1&#x27;: [&#x27;AA1&#x27;, &#x27;A1&#x27;, &#x27;AA-1&#x27;, &#x27;A-1&#x27;, &#x27;aa1&#x27;, &#x27;a1&#x27;, &#x27;aa-1&#x27;, &#x27;a-1&#x27;], &#x27;bohr&#x27;: [&#x27;bohr&#x27;, &#x27;bohrs&#x27;, &#x27;bohrradii&#x27;], &#x27;m&#x27;: [&#x27;m&#x27;, &#x27;meter&#x27;, &#x27;meters&#x27;], &#x27;deg&#x27;: [&#x27;deg&#x27;, &#x27;degree&#x27;, &#x27;degrees&#x27;], &#x27;rad&#x27;: [&#x27;rad&#x27;, &#x27;radian&#x27;, &#x27;radians&#x27;], &#x27;bar&#x27;: [&#x27;bar&#x27;, &#x27;bars&#x27;], &#x27;kbar&#x27;: [&#x27;kbar&#x27;, &#x27;kilobar&#x27;, &#x27;kilobars&#x27;], &#x27;Pa&#x27;: [&#x27;Pa&#x27;, &#x27;pa&#x27;, &#x27;pascal&#x27;, &#x27;pascals&#x27;], &#x27;GPa&#x27;: [&#x27;GPa&#x27;, &#x27;gpa&#x27;, &#x27;gigapascal&#x27;, &#x27;gigapascals&#x27;], &#x27;s&#x27;: [&#x27;s&#x27;, &#x27;second&#x27;, &#x27;seconds&#x27;], &#x27;H&#x27;: [&#x27;H&#x27;, &#x27;h&#x27;, &#x27;hour&#x27;, &#x27;hours&#x27;]}"}, {"fullname": "aton.alias.spatial", "modulename": "aton.alias", "qualname": "spatial", "kind": "variable", "doc": "<p>Dict with different spatial parameters. Values must be compared to <code>string.lower()</code>.</p>\n", "annotation": ": dict", "default_value": "{&#x27;height&#x27;: [&#x27;height&#x27;, &#x27;h&#x27;], &#x27;area&#x27;: [&#x27;area&#x27;, &#x27;a&#x27;], &#x27;volume&#x27;: [&#x27;volume&#x27;, &#x27;vol&#x27;], &#x27;x&#x27;: [&#x27;x&#x27;, &#x27;horizontal&#x27;, &#x27;h&#x27;], &#x27;y&#x27;: [&#x27;y&#x27;, &#x27;vertical&#x27;, &#x27;v&#x27;], &#x27;z&#x27;: [&#x27;z&#x27;]}"}, {"fullname": "aton.alias.chemical", "modulename": "aton.alias", "qualname": "chemical", "kind": "variable", "doc": "<p>Dict with chemical groups.</p>\n", "annotation": ": dict", "default_value": "{&#x27;CH3&#x27;: [&#x27;ch&#x27;, &#x27;CH&#x27;, &#x27;ch3&#x27;, &#x27;CH3&#x27;, &#x27;methyl&#x27;], &#x27;NH3&#x27;: [&#x27;nh&#x27;, &#x27;NH&#x27;, &#x27;nh3&#x27;, &#x27;NH3&#x27;, &#x27;amine&#x27;], &#x27;CD3&#x27;: [&#x27;cd&#x27;, &#x27;CD&#x27;, &#x27;cd3&#x27;, &#x27;CD3&#x27;, &#x27;deuterated methyl&#x27;], &#x27;ND3&#x27;: [&#x27;nd&#x27;, &#x27;ND&#x27;, &#x27;nd3&#x27;, &#x27;ND3&#x27;, &#x27;deuterated amine&#x27;]}"}, {"fullname": "aton.alias.experiments", "modulename": "aton.alias", "qualname": "experiments", "kind": "variable", "doc": "<p>Dictionary with the available experiment types. Values must be compared to <code>string.lower()</code>.</p>\n", "annotation": ": dict", "default_value": "{&#x27;ins&#x27;: [&#x27;ins&#x27;, &#x27;inelasticneutronscattering&#x27;, &#x27;inelastic neutron scattering&#x27;], &#x27;atr&#x27;: [&#x27;atr&#x27;, &#x27;ftir&#x27;, &#x27;attenuatedtotalreflection&#x27;, &#x27;attenuated total reflection&#x27;], &#x27;raman&#x27;: [&#x27;raman&#x27;], &#x27;qens&#x27;: [&#x27;qens&#x27;, &#x27;quasielasticneutronscattering&#x27;, &#x27;quasielastic neutron scattering&#x27;, &#x27;quasi elastic neutron scattering&#x27;]}"}, {"fullname": "aton.alias.files", "modulename": "aton.alias", "qualname": "files", "kind": "variable", "doc": "<p>Strings related to files. Values must be compared to <code>string.lower()</code>.</p>\n", "annotation": ": dict", "default_value": "{&#x27;file&#x27;: [&#x27;file&#x27;, &#x27;files&#x27;, &#x27;f&#x27;, &#x27;filepath&#x27;, &#x27;file path&#x27;, &#x27;filename&#x27;, &#x27;file name&#x27;], &#x27;dir&#x27;: [&#x27;dir&#x27;, &#x27;directory&#x27;, &#x27;d&#x27;, &#x27;folder&#x27;], &#x27;error&#x27;: [&#x27;error&#x27;, &#x27;errors&#x27;, &#x27;e&#x27;, &#x27;err&#x27;]}"}, {"fullname": "aton.alias.boolean", "modulename": "aton.alias", "qualname": "boolean", "kind": "variable", "doc": "<p>Strings with booleans such as 'yes' / 'no'.</p>\n", "annotation": ": dict", "default_value": "{True: [&#x27;yes&#x27;, &#x27;YES&#x27;, &#x27;Yes&#x27;, &#x27;Y&#x27;, &#x27;y&#x27;, &#x27;T&#x27;, &#x27;True&#x27;, &#x27;TRUE&#x27;, &#x27;t&#x27;, &#x27;true&#x27;, &#x27;Si&#x27;, &#x27;SI&#x27;, &#x27;si&#x27;, &#x27;S&#x27;, &#x27;s&#x27;], False: [&#x27;no&#x27;, &#x27;NO&#x27;, &#x27;No&#x27;, &#x27;N&#x27;, &#x27;n&#x27;, &#x27;F&#x27;, &#x27;False&#x27;, &#x27;FALSE&#x27;, &#x27;f&#x27;, &#x27;false&#x27;]}"}, {"fullname": "aton.alias.math", "modulename": "aton.alias", "qualname": "math", "kind": "variable", "doc": "<p>Math-related strings.</p>\n", "annotation": ": dict", "default_value": "{&#x27;sin&#x27;: [&#x27;sin&#x27;, &#x27;sen&#x27;, &#x27;sine&#x27;, &#x27;seno&#x27;], &#x27;cos&#x27;: [&#x27;cos&#x27;, &#x27;cosine&#x27;, &#x27;coseno&#x27;], &#x27;tg&#x27;: [&#x27;tg&#x27;, &#x27;tangent&#x27;, &#x27;tangente&#x27;], &#x27;0&#x27;: [&#x27;zero&#x27;, &#x27;cero&#x27;, &#x27;0&#x27;]}"}, {"fullname": "aton.api", "modulename": "aton.api", "kind": "module", "doc": "<h1 id=\"ab-initio-api-interfaces\"><em>Ab-initio</em> API interfaces</h1>\n\n<p>This module contains interfaces for several <em>ab-initio</em> calculation softwares.\nThese interfaces can be easily expanded with the <code>aton.txt</code> module.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.api.qe</code></td>\n  <td>Interface for <a href=\"https://www.quantum-espresso.org/\">Quantum ESPRESSO</a>'s <a href=\"https://www.quantum-espresso.org/Doc/INPUT_PW.html\">pw.x</a> module</td>\n</tr>\n<tr>\n  <td><code>aton.api.phonopy</code></td>\n  <td>Interface for <a href=\"https://phonopy.github.io/phonopy/\">Phonopy</a> calculations</td>\n</tr>\n<tr>\n  <td><code>aton.api.castep</code></td>\n  <td>Interface for <a href=\"https://castep-docs.github.io/castep-docs/\">CASTEP</a> calculations</td>\n</tr>\n<tr>\n  <td><code>aton.api.slurm</code></td>\n  <td>Batch jobs via <a href=\"https://slurm.schedmd.com/\">Slurm</a></td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<h2 id=\"quantum-espresso\">Quantum ESPRESSO</h2>\n\n<p>To read the output from a Quantum ESPRESSO pw.x calculation,  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton.api</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">qe</span>\n<span class=\"c1\"># Read to a dictionary</span>\n<span class=\"n\">calculation</span> <span class=\"o\">=</span> <span class=\"n\">qe</span><span class=\"o\">.</span><span class=\"n\">read_out</span><span class=\"p\">(</span><span class=\"s1\">&#39;relax.out&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">calculation</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>  <span class=\"c1\"># See the available values</span>\n<span class=\"c1\"># Final energy from the calculation</span>\n<span class=\"n\">energy</span> <span class=\"o\">=</span> <span class=\"n\">calculation</span><span class=\"p\">[</span><span class=\"s1\">&#39;Energy&#39;</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<p>To modify values from an input file,  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton.api</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">qe</span>\n<span class=\"c1\"># Add a hydrogen atom to a specific position</span>\n<span class=\"n\">qe</span><span class=\"o\">.</span><span class=\"n\">add_atom</span><span class=\"p\">(</span><span class=\"s1\">&#39;relax.in&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H  0.10  0.20  0.30&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Set the input ecutwfc value</span>\n<span class=\"n\">qe</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"s1\">&#39;relax.in&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ecutwfc&#39;</span><span class=\"p\">,</span> <span class=\"mf\">60.0</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Check the full <code>aton.api.qe</code> API reference for more details.</p>\n\n<h2 id=\"phonopy\">Phonopy</h2>\n\n<p>To perform a phonon calculation from a relaxed structure via Quantum ESPRESSO,  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">api</span>\n<span class=\"c1\"># Create the supercell inputs</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">phonopy</span><span class=\"o\">.</span><span class=\"n\">make_supercells</span><span class=\"p\">(</span><span class=\"n\">dimension</span><span class=\"o\">=</span><span class=\"s1\">&#39;2 2 2&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Sbatch to a cluster</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">slurm</span><span class=\"o\">.</span><span class=\"n\">sbatch</span><span class=\"p\">(</span><span class=\"s1\">&#39;supercell-&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;template.slurm&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Check the full <code>aton.api.phonopy</code> API reference for more details.</p>\n\n<h2 id=\"castep\">CASTEP</h2>\n\n<p>To read output values from a CASTEP calculation,  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton.api</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">castep</span>\n<span class=\"c1\"># Read the output</span>\n<span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">castep</span><span class=\"o\">.</span><span class=\"n\">read_castep</span><span class=\"p\">(</span><span class=\"s1\">&#39;calculation.castep&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get the final energy</span>\n<span class=\"n\">energy</span> <span class=\"o\">=</span> <span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s1\">&#39;Energy&#39;</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<p>Check the full <code>aton.api.castep</code> API reference for more details.</p>\n"}, {"fullname": "aton.api.castep", "modulename": "aton.api.castep", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Functions to work with <a href=\"https://castep-docs.github.io/castep-docs/\">CASTEP</a> calculation files.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>read_castep()</code></td>\n  <td>Output reading</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.api.castep.read_castep", "modulename": "aton.api.castep", "qualname": "read_castep", "kind": "function", "doc": "<p>Reads a CASTEP output file, specified in <code>filename</code>.\nReturns a dictionary with the following keys:\n<code>'Enthalpy'</code> (LBFGS: Final Enthalpy, in kJ/mol),\n<code>'Energy'</code> (Total energy corrected for finite basis set, in eV),\n<code>'Space group'</code>, <code>'Volume'</code> (Angstrom^3), <code>'Density'</code> (amu/Angstrom^3), <code>'Density_g'</code> (g/cm^3),\n<code>'A'</code>, <code>'B'</code>, <code>'C'</code> (Angstroms), <code>'Alpha'</code>, <code>'Beta'</code>, <code>'Gamma'</code> (Degrees).</p>\n\n<p>Note that these output keys start with a <strong>C</strong>apital letter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.phonopy", "modulename": "aton.api.phonopy", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Functions to work with <a href=\"https://phonopy.github.io/phonopy/\">Phonopy</a> calculations,\nalong with <a href=\"https://www.quantum-espresso.org/\">Quantum ESPRESSO</a>.  </p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>make_supercells()</code></td>\n  <td>Build supercell SCF inputs for phonon calculations</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>To create the 2x2x2 supercells and run the phonon calculations\nfrom a folder with <code>relax.in</code> and <code>relax.out</code> files,\nusing a <code>template.slurm</code> file,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">api</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">phonopy</span><span class=\"o\">.</span><span class=\"n\">make_supercells</span><span class=\"p\">()</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">slurm</span><span class=\"o\">.</span><span class=\"n\">sbatch</span><span class=\"p\">(</span><span class=\"s1\">&#39;supercell-&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;template.slurm&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<hr />\n"}, {"fullname": "aton.api.phonopy.make_supercells", "modulename": "aton.api.phonopy", "qualname": "make_supercells", "kind": "function", "doc": "<p>Creates the supercell inputs of a given <code>dimension</code> ('2 2 2' by default),\nfrom the <code>relax_in</code> and <code>relax_out</code> files in the <code>folder</code>\n('relax.in', 'relax.out' and CWD by default, respectively),\nneeded for the Phonopy calculations with Quantum ESPRESSO.</p>\n\n<p>By default, at the end of the execution it will check\nthat an <code>slurm_template</code> ('template.slurm') is present and valid;\nthis is, containing the keywords <code>JOBNAME</code>, <code>INPUT</code> and <code>OUTPUT</code>.\nIf not, an example with instructions will be provided.\nThis check can be skipped with <code>slurm_template=''</code>.\nThe template will allow to easily run the Phonopy calculations with the one-line command\n<code>aton.api.slurm.sbatch('supercell-', 'template.slurm')</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dimension</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;2 2 2&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">relax_in</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;relax.in&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">relax_out</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;relax.out&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">slurm_template</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;template.slurm&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe", "modulename": "aton.api.qe", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Tools to work with the <a href=\"https://www.quantum-espresso.org/Doc/INPUT_PW.html\">pw.x</a> module from <a href=\"https://www.quantum-espresso.org/\">Quantum ESPRESSO</a>.  </p>\n\n<h1 id=\"index\">Index</h1>\n\n<p>Input and output reading<br />\n<code>read_in()</code><br />\n<code>read_out()</code><br />\n<code>read_dir()</code><br />\n<code>read_dirs()</code>  </p>\n\n<p>Input file manipulation<br />\n<code>set_value()</code><br />\n<code>add_atom()</code><br />\n<code>resume()</code><br />\n<code>scf_from_relax()</code>  </p>\n\n<p>Data analysis<br />\n<code>get_atom()</code><br />\n<code>count_elements()</code><br />\n<code>normalize_card()</code><br />\n<code>to_cartesian()</code><br />\n<code>from_cartesian()</code>  </p>\n\n<p>Dicts with input file description<br />\n<code>pw_namelists</code><br />\n<code>pw_cards</code>  </p>\n\n<hr />\n"}, {"fullname": "aton.api.qe.read_in", "modulename": "aton.api.qe", "qualname": "read_in", "kind": "function", "doc": "<p>Reads a Quantum ESPRESSO input <code>filepath</code> and returns the values as a dict.</p>\n\n<p>Dict keys are named after the corresponding variable.\nCARDS are returned as lists, and contain the\ntitle card + parameters in the first item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.read_out", "modulename": "aton.api.qe", "qualname": "read_out", "kind": "function", "doc": "<p>Reads a Quantum ESPRESSO output <code>filepath</code>, returns a dict with the output keys.</p>\n\n<p>The output keys are:\n<code>'Energy'</code> (Ry), <code>'Total force'</code> (float), <code>'Total SCF correction'</code> (float),\n<code>'Runtime'</code> (str), <code>'JOB DONE'</code> (bool), <code>'BFGS converged'</code> (bool), <code>'BFGS failed'</code> (bool),\n<code>'Maxiter reached'</code> (bool), <code>'Error'</code> (str), <code>'Success'</code> (bool), <code>'CELL_PARAMETERS out'</code> (list of str), <code>'ATOMIC_POSITIONS out'</code> (list of str), <code>'Alat'</code> (bohr), <code>'Volume'</code> (a.u.^3), <code>'Density'</code> (g/cm^3).</p>\n\n<p>Note that these output keys start with a <strong>C</strong>apital letter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.read_dir", "modulename": "aton.api.qe", "qualname": "read_dir", "kind": "function", "doc": "<p>Takes a <code>folder</code> from a QE calculation, returns a dict with input and output values.</p>\n\n<p>Input and output files are determined automatically,\nbut must be specified with <code>in_str</code> and <code>out_str</code>\nif more than one file ends with <code>.in</code> or <code>.out</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">in_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.in&#39;</span>, </span><span class=\"param\"><span class=\"n\">out_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.out&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.read_dirs", "modulename": "aton.api.qe", "qualname": "read_dirs", "kind": "function", "doc": "<p>Reads recursively QE calculations from all the subfolders inside the given <code>directory</code>.</p>\n\n<p>Results are saved to CSV files inside the current directory.\nInput and output files are determined automatically, but must be specified with\n<code>in_str</code> and <code>out_str</code> if more than one file ends with <code>.in</code> or <code>.out</code>.</p>\n\n<p>To properly group the calculations per type, saving separated CSVs for each calculation type,\nyou can modify <code>calc_splitter</code> ('_' by default), <code>calc_type_index</code> (0) and <code>calc_id_index</code> (1).\nWith these default values, a subfolder named './CalculationType_CalculationID_AdditionalText/'\nwill be interpreted as follows:</p>\n\n<ul>\n<li>Calculation type: 'CalculationType' (The output CSV will be named after this)</li>\n<li>CalculationID: 'CalculationID' (Stored in the 'ID' column of the resulting dataframe)</li>\n</ul>\n\n<p>If everything fails, the subfolder name will be used for the CSV file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">directory</span>,</span><span class=\"param\">\t<span class=\"n\">in_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.in&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">out_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.out&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">calc_splitter</span><span class=\"o\">=</span><span class=\"s1\">&#39;_&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">calc_type_index</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">calc_id_index</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.set_value", "modulename": "aton.api.qe", "qualname": "set_value", "kind": "function", "doc": "<p>Replace the <code>value</code> of a <code>key</code> parameter in an input <code>filepath</code>.</p>\n\n<p>Delete parameters with <code>value=''</code>.\nRemember to include the single quotes <code>'</code> on values that use them.</p>\n\n<p>Updating 'ATOMIC_POSITIONS' updates 'nat' automatically,\nand updating 'ATOMIC_SPECIES' updates 'ntyp'.</p>\n\n<p>Optionally change indentation with <code>indent</code>, 2 spaces by default.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;  &#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.add_atom", "modulename": "aton.api.qe", "qualname": "add_atom", "kind": "function", "doc": "<p>Adds an atom in a given input <code>filepath</code> at a specified <code>position</code>.</p>\n\n<p>Position must be a string or a list, as follows:\n<code>\"specie:str float float float\"</code> or <code>[specie:str, float, float, float]</code>.</p>\n\n<p>This method updates automatically other related values,\nsuch as 'ntyp' when updating ATOMIC_SPECIES, etc.</p>\n\n<p>Optionally change indentation with <code>indent</code>, 2 spaces by default.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">position</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"s1\">&#39;  &#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.get_atom", "modulename": "aton.api.qe", "qualname": "get_atom", "kind": "function", "doc": "<p>Takes the approximate <code>position</code> of an atom, and returns the full line from the input <code>filepath</code>.</p>\n\n<p>It compares the atomic positions rounded up to the specified <code>precision</code> decimals.\nIf <code>return_anyway = True</code>, ignores errors and returns an empty string.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">precision</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">return_anyway</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.normalize_card", "modulename": "aton.api.qe", "qualname": "normalize_card", "kind": "function", "doc": "<p>Take a matched card, and return it in a normalised format.</p>\n\n<p>Optionally change indentation with <code>indent</code>, 0 spaces by default.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">card</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.count_elements", "modulename": "aton.api.qe", "qualname": "count_elements", "kind": "function", "doc": "<p>Takes ATOMIC_POSITIONS, returns a dict as <code>{element : number of atoms}</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">atomic_positions</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.resume", "modulename": "aton.api.qe", "qualname": "resume", "kind": "function", "doc": "<p>Update an input file with the atomic coordinates of an output file.</p>\n\n<p>This can be used to quickly resume an unfinished or interrupted calculation.</p>\n\n<p>Takes a <code>folder</code> from a QE calculation, CWD if empty.\nInput and output files are determined automatically,\nbut must be specified with <code>in_str</code> and <code>out_str</code>\nif more than one file ends with <code>.in</code> or <code>.out</code>.</p>\n\n<p>Old input and output files will be renamed automatically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">in_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.in&#39;</span>, </span><span class=\"param\"><span class=\"n\">out_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.out&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.scf_from_relax", "modulename": "aton.api.qe", "qualname": "scf_from_relax", "kind": "function", "doc": "<p>Create a Quantum ESPRESSO <code>scf.in</code> file from a previous relax calculation.</p>\n\n<p>If no <code>folder</code> is provided, the current working directory is used.\nThe <code>relax_in</code> and <code>relax_out</code> files by default are <code>relax.in</code> and <code>relax.out</code>,\nupdate the names if necessary.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">relax_in</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;relax.in&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">relax_out</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;relax.out&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.to_cartesian", "modulename": "aton.api.qe", "qualname": "to_cartesian", "kind": "function", "doc": "<p>Converts a given <code>cordinates</code> from crystal lattice vectors to cartesian.</p>\n\n<p>Only for <code>ibrav=0</code>. Uses the cell parameters from the input <code>filepath</code>.\nNote that the result is not multiplied by <code>A</code> nor <code>celldm(1)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">coordinates</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.from_cartesian", "modulename": "aton.api.qe", "qualname": "from_cartesian", "kind": "function", "doc": "<p>Converts a given <code>cordinates</code> from cartesian to the base of lattice vectors.</p>\n\n<p>Only for <code>ibrav=0</code>. Uses the cell parameters from the input <code>filepath</code>.\nNote that the result is not divided by <code>A</code> nor <code>celldm(1)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.qe.pw_namelists", "modulename": "aton.api.qe", "qualname": "pw_namelists", "kind": "variable", "doc": "<p>Dictionary with all possible NAMELISTs as keys, and the corresponding variables as values.</p>\n", "default_value": "{&#x27;&amp;CONTROL&#x27;: [&#x27;calculation&#x27;, &#x27;title&#x27;, &#x27;verbosity&#x27;, &#x27;restart_mode&#x27;, &#x27;wf_collect&#x27;, &#x27;nstep&#x27;, &#x27;iprint&#x27;, &#x27;tstress&#x27;, &#x27;tprnfor&#x27;, &#x27;dt&#x27;, &#x27;outdir&#x27;, &#x27;wfcdir&#x27;, &#x27;prefix&#x27;, &#x27;lkpoint_dir&#x27;, &#x27;max_seconds&#x27;, &#x27;etot_conv_thr&#x27;, &#x27;forc_conv_thr&#x27;, &#x27;disk_io&#x27;, &#x27;pseudo_dir&#x27;, &#x27;tefield&#x27;, &#x27;dipfield&#x27;, &#x27;lelfield&#x27;, &#x27;nberrycyc&#x27;, &#x27;lorbm&#x27;, &#x27;lberry&#x27;, &#x27;gdir&#x27;, &#x27;nppstr&#x27;, &#x27;gate&#x27;, &#x27;twochem&#x27;, &#x27;lfcp&#x27;, &#x27;trism&#x27;], &#x27;&amp;SYSTEM&#x27;: [&#x27;ibrav&#x27;, &#x27;celldm(1)&#x27;, &#x27;celldm(2)&#x27;, &#x27;celldm(3)&#x27;, &#x27;celldm(4)&#x27;, &#x27;celldm(5)&#x27;, &#x27;celldm(6)&#x27;, &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;cosAB&#x27;, &#x27;cosAC&#x27;, &#x27;cosBC&#x27;, &#x27;nat&#x27;, &#x27;ntyp&#x27;, &#x27;nbnd&#x27;, &#x27;nbnd_cond&#x27;, &#x27;tot_charge&#x27;, &#x27;starting_charge&#x27;, &#x27;tot_magnetization&#x27;, &#x27;starting_magnetization&#x27;, &#x27;ecutwfc&#x27;, &#x27;ecutrho&#x27;, &#x27;ecutfock&#x27;, &#x27;nr1&#x27;, &#x27;nr2&#x27;, &#x27;nr3&#x27;, &#x27;nr1s&#x27;, &#x27;nr2s&#x27;, &#x27;nr3s&#x27;, &#x27;nosym&#x27;, &#x27;nosym_evc&#x27;, &#x27;noinv&#x27;, &#x27;no_t_rev&#x27;, &#x27;force_symmorphic&#x27;, &#x27;use_all_frac&#x27;, &#x27;occupations&#x27;, &#x27;one_atom_occupations&#x27;, &#x27;starting_spin_angle&#x27;, &#x27;degauss_cond&#x27;, &#x27;nelec_cond&#x27;, &#x27;degauss&#x27;, &#x27;smearing&#x27;, &#x27;nspin&#x27;, &#x27;sic_gamma&#x27;, &#x27;pol_type&#x27;, &#x27;sic_energy&#x27;, &#x27;sci_vb&#x27;, &#x27;sci_cb&#x27;, &#x27;noncolin&#x27;, &#x27;ecfixed&#x27;, &#x27;qcutz&#x27;, &#x27;q2sigma&#x27;, &#x27;input_dft&#x27;, &#x27;ace&#x27;, &#x27;exx_fraction&#x27;, &#x27;screening_parameter&#x27;, &#x27;exxdiv_treatment&#x27;, &#x27;x_gamma_extrapolation&#x27;, &#x27;ecutvcutnqx1&#x27;, &#x27;nqx2&#x27;, &#x27;nqx3&#x27;, &#x27;localization_thr&#x27;, &#x27;Hubbard_occ&#x27;, &#x27;Hubbard_alpha&#x27;, &#x27;Hubbard_beta&#x27;, &#x27;starting_ns_eigenvalue&#x27;, &#x27;dmft&#x27;, &#x27;dmft_prefix&#x27;, &#x27;ensemble_energies&#x27;, &#x27;edir&#x27;, &#x27;emaxpos&#x27;, &#x27;eopreg&#x27;, &#x27;eamp&#x27;, &#x27;angle1&#x27;, &#x27;angle2&#x27;, &#x27;lforcet&#x27;, &#x27;constrained_magnetization&#x27;, &#x27;fixed_magnetization&#x27;, &#x27;lambda&#x27;, &#x27;report&#x27;, &#x27;lspinorb&#x27;, &#x27;assume_isolated&#x27;, &#x27;esm_bc&#x27;, &#x27;esm_w&#x27;, &#x27;esm_efield&#x27;, &#x27;esm_nfit&#x27;, &#x27;lgcscf&#x27;, &#x27;gcscf_mu&#x27;, &#x27;gcscf_conv_thr&#x27;, &#x27;gcscf_beta&#x27;, &#x27;vdw_corr&#x27;, &#x27;london&#x27;, &#x27;london_s6&#x27;, &#x27;london_c6&#x27;, &#x27;london_rvdw&#x27;, &#x27;london_rcut&#x27;, &#x27;dftd3_version&#x27;, &#x27;dftd3_threebody&#x27;, &#x27;ts_vdw_econv_thr&#x27;, &#x27;ts_vdw_isolated&#x27;, &#x27;xdm&#x27;, &#x27;xdm_a1&#x27;, &#x27;xdm_a2&#x27;, &#x27;space_group&#x27;, &#x27;uniqueb&#x27;, &#x27;origin_choice&#x27;, &#x27;rhombohedral&#x27;, &#x27;zgate&#x27;, &#x27;relaxz&#x27;, &#x27;block&#x27;, &#x27;block_1&#x27;, &#x27;block_2&#x27;, &#x27;block_height&#x27;, &#x27;nextffield&#x27;], &#x27;&amp;ELECTRONS&#x27;: [&#x27;electron_maxstep&#x27;, &#x27;exx_maxstep&#x27;, &#x27;scf_must_converge&#x27;, &#x27;conv_thr&#x27;, &#x27;adaptive_thr&#x27;, &#x27;conv_thr_init&#x27;, &#x27;conv_thr_multi&#x27;, &#x27;mixing_mode&#x27;, &#x27;mixing_beta&#x27;, &#x27;mixing_ndim&#x27;, &#x27;mixing_fixed_ns&#x27;, &#x27;diagonalization&#x27;, &#x27;diago_thr_init&#x27;, &#x27;diago_cg_maxiter&#x27;, &#x27;diago_ppcg_maxiter&#x27;, &#x27;diago_david_ndim&#x27;, &#x27;diago_rmm_ndim&#x27;, &#x27;diago_rmm_conv&#x27;, &#x27;diago_gs_nblock&#x27;, &#x27;diago_full_acc&#x27;, &#x27;efield&#x27;, &#x27;efield_cart&#x27;, &#x27;efield_phase&#x27;, &#x27;startingpot&#x27;, &#x27;startingwfc&#x27;, &#x27;tqr&#x27;, &#x27;real_space&#x27;], &#x27;&amp;IONS&#x27;: [&#x27;ion_positions&#x27;, &#x27;ion_velocities&#x27;, &#x27;ion_dynamics&#x27;, &#x27;pot_extrapolation&#x27;, &#x27;wfc_extrapolation&#x27;, &#x27;remove_rigid_rot&#x27;, &#x27;ion_temperature&#x27;, &#x27;tempw&#x27;, &#x27;tolp&#x27;, &#x27;delta_t&#x27;, &#x27;nraise&#x27;, &#x27;refold_pos&#x27;, &#x27;upscale&#x27;, &#x27;bfgs_ndim&#x27;, &#x27;trust_radius_max&#x27;, &#x27;trust_radius_min&#x27;, &#x27;trust_radius_ini&#x27;, &#x27;w_1&#x27;, &#x27;w_2&#x27;, &#x27;fire_alpha_init&#x27;, &#x27;fire_falpha&#x27;, &#x27;fire_nmin&#x27;, &#x27;fire_f_inc&#x27;, &#x27;fire_f_dec&#x27;, &#x27;fire_dtmax&#x27;], &#x27;&amp;CELL&#x27;: [&#x27;cell_dynamics&#x27;, &#x27;press&#x27;, &#x27;wmass&#x27;, &#x27;cell_factor&#x27;, &#x27;press_conv_thrcell_dofree&#x27;], &#x27;&amp;FCP&#x27;: [&#x27;fcp_mu&#x27;, &#x27;fcp_dynamics&#x27;, &#x27;fcp_conv_thr&#x27;, &#x27;fcp_ndiis&#x27;, &#x27;fcp_mass&#x27;, &#x27;fcp_velocity&#x27;, &#x27;fcp_temperature&#x27;, &#x27;fcp_tempw&#x27;, &#x27;fcp_tolp &#x27;, &#x27;fcp_delta_t&#x27;, &#x27;fcp_nraise&#x27;, &#x27;freeze_all_atoms&#x27;], &#x27;&amp;RISM&#x27;: [&#x27;nsolv&#x27;, &#x27;closure&#x27;, &#x27;tempv&#x27;, &#x27;ecutsolv&#x27;, &#x27;solute_lj&#x27;, &#x27;solute_epsilon&#x27;, &#x27;solute_sigma&#x27;, &#x27;starting1d&#x27;, &#x27;starting3d&#x27;, &#x27;smear1d&#x27;, &#x27;smear3d&#x27;, &#x27;rism1d_maxstep&#x27;, &#x27;rism3d_maxstep&#x27;, &#x27;rism1d_conv_thr&#x27;, &#x27;rism3d_conv_thr&#x27;, &#x27;mdiis1d_size&#x27;, &#x27;mdiis3d_size&#x27;, &#x27;mdiis1d_step&#x27;, &#x27;mdiis3d_step&#x27;, &#x27;rism1d_bond_width&#x27;, &#x27;rism1d_dielectric&#x27;, &#x27;rism1d_molesize&#x27;, &#x27;rism1d_nproc&#x27;, &#x27;rism3d_conv_level&#x27;, &#x27;rism3d_planar_average&#x27;, &#x27;laue_nfit&#x27;, &#x27;laue_expand_right&#x27;, &#x27;laue_expand_left&#x27;, &#x27;laue_starting_right&#x27;, &#x27;laue_starting_left&#x27;, &#x27;laue_buffer_right&#x27;, &#x27;laue_buffer_left&#x27;, &#x27;laue_both_hands&#x27;, &#x27;laue_wall&#x27;, &#x27;laue_wall_z&#x27;, &#x27;laue_wall_rho&#x27;, &#x27;laue_wall_epsilon&#x27;, &#x27;laue_wall_sigma&#x27;, &#x27;laue_wall_lj6&#x27;]}"}, {"fullname": "aton.api.qe.pw_cards", "modulename": "aton.api.qe", "qualname": "pw_cards", "kind": "variable", "doc": "<p>Dictionary with every possible CARDs as keys, and the corresponding variables as values.</p>\n", "default_value": "{&#x27;ATOMIC_SPECIES&#x27;: [&#x27;X&#x27;, &#x27;Mass_X&#x27;, &#x27;PseudoPot_X&#x27;], &#x27;ATOMIC_POSITIONS&#x27;: [&#x27;X&#x27;, &#x27;x&#x27;, &#x27;y&#x27;, &#x27;z&#x27;, &#x27;if_pos(1)&#x27;, &#x27;if_pos(2)&#x27;, &#x27;if_pos(3)&#x27;], &#x27;K_POINTS&#x27;: [&#x27;nks&#x27;, &#x27;xk_x&#x27;, &#x27;xk_y&#x27;, &#x27;xk_z&#x27;, &#x27;wk&#x27;, &#x27;nk1&#x27;, &#x27;nk2&#x27;, &#x27;nk3&#x27;, &#x27;sk1&#x27;, &#x27;sk2&#x27;, &#x27;sk3&#x27;], &#x27;ADDITIONAL_K_POINTS&#x27;: [&#x27;nks_add&#x27;, &#x27;k_x&#x27;, &#x27;k_y&#x27;, &#x27;k_z&#x27;, &#x27;wk_&#x27;], &#x27;CELL_PARAMETERS&#x27;: [&#x27;v1&#x27;, &#x27;v2&#x27;, &#x27;v3&#x27;], &#x27;CONSTRAINTS&#x27;: [&#x27;nconstr&#x27;, &#x27;constr_tol&#x27;, &#x27;constr_type&#x27;, &#x27;constr(1)&#x27;, &#x27;constr(2)&#x27;, &#x27;constr(3)&#x27;, &#x27;constr(4)&#x27;, &#x27;constr_target&#x27;], &#x27;OCCUPATIONS&#x27;: [&#x27;f_inp1&#x27;, &#x27;f_inp2&#x27;], &#x27;ATOMIC_VELOCITIES&#x27;: [&#x27;V&#x27;, &#x27;vx&#x27;, &#x27;vy&#x27;, &#x27;vz&#x27;], &#x27;ATOMIC_FORCES&#x27;: [&#x27;X&#x27;, &#x27;fx&#x27;, &#x27;fy&#x27;, &#x27;fz&#x27;], &#x27;SOLVENTS&#x27;: [&#x27;X&#x27;, &#x27;Density&#x27;, &#x27;Molecule&#x27;, &#x27;X&#x27;, &#x27;Density_Left&#x27;, &#x27;Density_Right&#x27;, &#x27;Molecule&#x27;], &#x27;HUBBARD&#x27;: [&#x27;label(1)-manifold(1)&#x27;, &#x27;u_val(1)&#x27;, &#x27;label(1)-manifold(1)&#x27;, &#x27;j0_val(1)&#x27;, &#x27;paramType(1)&#x27;, &#x27;label(1)-manifold(1)&#x27;, &#x27;paramValue(1)&#x27;, &#x27;label(I)-manifold(I)&#x27;, &#x27;u_val(I)&#x27;, &#x27;label(I)-manifold(I)&#x27;, &#x27;j0_val(I)&#x27;, &#x27;label(I)-manifold(I)&#x27;, &#x27;label(J)-manifold(J)&#x27;, &#x27;I&#x27;, &#x27;J&#x27;, &#x27;v_val(I,J)&#x27;], &#x27;CELL_PARAMETERS out&#x27;: [&#x27;v1&#x27;, &#x27;v2&#x27;, &#x27;v3&#x27;], &#x27;ATOMIC_POSITIONS out&#x27;: [&#x27;X&#x27;, &#x27;x&#x27;, &#x27;y&#x27;, &#x27;z&#x27;, &#x27;if_pos(1)&#x27;, &#x27;if_pos(2)&#x27;, &#x27;if_pos(3)&#x27;]}"}, {"fullname": "aton.api.slurm", "modulename": "aton.api.slurm", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Functions to handle Slurm calls, to run calculations in clusters.  </p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>sbatch()</code></td>\n  <td>Sbatch all calculations</td>\n</tr>\n<tr>\n  <td><code>scancel()</code></td>\n  <td>Scancel all calculations, or applying some filters</td>\n</tr>\n<tr>\n  <td><code>scancel_here()</code></td>\n  <td>Scancel all calculations running from a specific folder</td>\n</tr>\n<tr>\n  <td><code>squeue()</code></td>\n  <td>Get a Pandas DataFrame with info about the submitted calculations</td>\n</tr>\n<tr>\n  <td><code>check_template()</code></td>\n  <td>Checks that the slurm template is OK, and provides an example if not</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.api.slurm.sbatch", "modulename": "aton.api.slurm", "qualname": "sbatch", "kind": "function", "doc": "<p>Sbatch all the calculations at once.</p>\n\n<p>Calculation names should follow <code>prefix_ID.ext</code>,\nwith <code>prefix</code> as the common name across calculations,\nfollowed by the calculation ID, used as JOB_NAME.\nThe extensions from <code>in_ext</code> and <code>out_ext</code> ('.in' and '.out' by default)\nwill be used for the INPUT and OUTPUT filenames of the slurm template.</p>\n\n<p>The slurm template, <code>template.slurm</code> by default,\nmust contain the keywords <code>JOBNAME</code>, <code>INPUT</code> and <code>OUTPUT</code>:</p>\n\n<pre><code>#SBATCH --job-name=JOBNAME\nsrun --cpu_bind=cores pw.x -inp INPUT &gt; OUTPUT\n</code></pre>\n\n<p>Runs from the specified <code>folder</code>, current working directory if empty.</p>\n\n<p>If more control is required, a custom list of <code>files</code> can be specified for sbatching.</p>\n\n<p>If <code>testing = True</code> it skips the final sbatching,\njust printing the commands on the screen.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;template.slurm&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">in_ext</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.in&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">out_ext</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.out&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">testing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.slurm.scancel", "modulename": "aton.api.slurm", "qualname": "scancel", "kind": "function", "doc": "<p>Cancel all <code>user</code> jobs.</p>\n\n<p>If a particular <code>status</code> string is provided,\nonly the calculations with said status will be cancelled.</p>\n\n<p>If a particular <code>text</code> string is provided,\nonly the calculations containing said text in the name will be deleted.</p>\n\n<p>If <code>testing = True</code>, it shows the calculations that would be deleted.</p>\n\n<p>if the slurm squeue titles are different in your cluster,\nyou can specify them with <code>key_jobid</code>, <code>key_status</code> and <code>key_name</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">testing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key_jobid</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;JOBID&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">key_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;NAME&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">key_status</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ST&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.slurm.scancel_here", "modulename": "aton.api.slurm", "qualname": "scancel_here", "kind": "function", "doc": "<p>Cancel all running <code>jobs</code> in a given <code>folder</code>.</p>\n\n<p>If no job is provided, all jobs detected in the current folder will be cancelled.\nThe jobs will be detected from the <code>&lt;prefix&gt;JOBID&lt;sufix&gt;</code> files, <code>slurm-JOBID.out</code> by default.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">jobs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;slurm-&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">sufix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.out&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.slurm.squeue", "modulename": "aton.api.slurm", "qualname": "squeue", "kind": "function", "doc": "<p>Returns a Pandas DataFrame with the jobs from a specific <code>user</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.api.slurm.check_template", "modulename": "aton.api.slurm", "qualname": "check_template", "kind": "function", "doc": "<p>Check the slurm <code>template</code> inside <code>folder</code>, to be used by <code>sbatch()</code>.</p>\n\n<p>The current working directory is used if <code>folder</code> is not provided.\nIf the file does not exist or is invalid, creates a <code>template_EXAMPLE.slurm</code> file for reference.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;template.slurm&#39;</span>, </span><span class=\"param\"><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.call", "modulename": "aton.call", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Functions to handle bash calls and related operations on Linux systems.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>here()</code></td>\n  <td>Runs the rest of the script inside a given folder</td>\n</tr>\n<tr>\n  <td><code>bash()</code></td>\n  <td>Run a bash shell commands</td>\n</tr>\n<tr>\n  <td><code>git()</code></td>\n  <td>Automatically update a Git repository</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.call.here", "modulename": "aton.call", "qualname": "here", "kind": "function", "doc": "<p>Runs the rest of the script inside the specified <code>folder</code>.</p>\n\n<p>If none is provided, it runs from the same directory where the current script lies.\nThis is really useful to run scripts from the VSCode terminal, etc.\nReturns the path of the used <code>folder</code>, or the path of the script if folder is not provided.</p>\n\n<p>Note that this changes not only the working directory of your script,\nbut also of other scripts that import and run your script.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.call.bash", "modulename": "aton.call", "qualname": "bash", "kind": "function", "doc": "<p>Call bash shell commands.</p>\n\n<p>A given <code>command</code> will be executed inside an optional <code>cwd</code> directory.\nIf empty, the current working directory will be used.\nPrints the running command and outputs by default, override this with <code>verbose=False</code>.\nReturns the result of the command used, except for when\nerrors are raised automatically; set <code>return_anyway=True</code> to override this.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">cwd</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">return_anyway</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.call.git", "modulename": "aton.call", "qualname": "git", "kind": "function", "doc": "<p>Update a Git repository with automatic bash calls.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file", "modulename": "aton.file", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Functions to move files around.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>save()</code></td>\n  <td>Save a Python object to a compressed binary file, as <code>.aton</code></td>\n</tr>\n<tr>\n  <td><code>load()</code></td>\n  <td>Load a Python object from a compressed binary file, as <code>.aton</code></td>\n</tr>\n<tr>\n  <td><code>get()</code></td>\n  <td>Check that a file exists, and return the full path</td>\n</tr>\n<tr>\n  <td><code>get_list()</code></td>\n  <td>Get a list of the files inside a folder, applying optional filters</td>\n</tr>\n<tr>\n  <td><code>get_dir()</code></td>\n  <td>Get the full path of a folder or the cwd</td>\n</tr>\n<tr>\n  <td><code>copy()</code></td>\n  <td>Copy file</td>\n</tr>\n<tr>\n  <td><code>move()</code></td>\n  <td>Move file</td>\n</tr>\n<tr>\n  <td><code>remove()</code></td>\n  <td>Remove file or folder</td>\n</tr>\n<tr>\n  <td><code>backup()</code></td>\n  <td>Backup a file including the current timestamp in the name</td>\n</tr>\n<tr>\n  <td><code>rename_on_folder()</code></td>\n  <td>Batch rename files from a folder</td>\n</tr>\n<tr>\n  <td><code>rename_on_folders()</code></td>\n  <td>Barch rename files from subfolders</td>\n</tr>\n<tr>\n  <td><code>copy_to_folders()</code></td>\n  <td>Copy files to individual subfolders</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.file.save", "modulename": "aton.file", "qualname": "save", "kind": "function", "doc": "<p>Save a Python object in the current working directory as a compressed binary <code>*.aton</code> file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">object</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.file.load", "modulename": "aton.file", "qualname": "load", "kind": "function", "doc": "<p>Load a Python object from a compressed binary <code>*.aton</code> file.</p>\n\n<p>Use only if you trust the person who sent you the file!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;data.aton&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.file.get", "modulename": "aton.file", "qualname": "get", "kind": "function", "doc": "<p>Check if <code>filepath</code> exists, and returns its full path.</p>\n\n<p>Raises an error if the file is not found,\nunless <code>return_anyway = True</code>, in which case it returns None.\nThis can be used to personalize errors.</p>\n\n<p>If the provided string is a directory, it checks the files inside it.\nif there is only one file inside, it returns said file;\nif there are more files, it tries to filter them with the <code>include</code> filters\n(string or list of strings) to return a single file.\nIf this fails, try using more strict filters to return a single file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">include</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">return_anyway</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.get_list", "modulename": "aton.file", "qualname": "get_list", "kind": "function", "doc": "<p>Return the files inside a <code>folder</code>, applying optional filters.</p>\n\n<p>Only filenames containing all strings in the <code>include</code> list will be returned.\nFilenames containing any string from the <code>exclude</code> list will be ignored.</p>\n\n<p>The full paths are returned by default; to get only the base names, set <code>abspath = False</code>.\nThe CWD folder is used by default if no <code>folder</code> is provided.\nIt also returns folders if <code>also_folders = True</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">include</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">abspath</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">also_folders</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.get_dir", "modulename": "aton.file", "qualname": "get_dir", "kind": "function", "doc": "<p>Returns the full path of <code>folder</code> or the parent folder if it's a file.</p>\n\n<p>If none is provided, the current working directory is returned.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.copy", "modulename": "aton.file", "qualname": "copy", "kind": "function", "doc": "<p>Copies <code>old</code> file to <code>new</code> file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">old</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.move", "modulename": "aton.file", "qualname": "move", "kind": "function", "doc": "<p>Moves <code>old</code> file to <code>new</code> file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">old</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.remove", "modulename": "aton.file", "qualname": "remove", "kind": "function", "doc": "<p>Removes the given file or folder at <code>filepath</code>.</p>\n\n<blockquote>\n  <p>WARNING: Removing stuff is always dangerous, be careful!</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.backup", "modulename": "aton.file", "qualname": "backup", "kind": "function", "doc": "<p>Backup a file including the current timestamp in the name.</p>\n\n<p>Keeps the original file by default, unless <code>keep = False</code>.\nAppends a '_backup' <code>label</code> at the end of the filename.\nThe timestamp can be optionally customised or disabled.\nReturns the new backup filepath.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">keep</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;backup&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">timestamp</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;%y%m</span><span class=\"si\">%d</span><span class=\"s1\">T%H%M%S&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.rename_on_folder", "modulename": "aton.file", "qualname": "rename_on_folder", "kind": "function", "doc": "<p>Batch renames files in the given <code>folder</code>.</p>\n\n<p>Replaces the <code>old</code> string by <code>new</code> string.\nIf no folder is provided, the current working directory is used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">old</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.rename_on_folders", "modulename": "aton.file", "qualname": "rename_on_folders", "kind": "function", "doc": "<p>Renames the files inside the subfolders in the parent <code>folder</code>.</p>\n\n<p>Renames from an <code>old</code> string to the <code>new</code> string.\nIf no <code>folder</code> is provided, the current working directory is used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">old</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.file.copy_to_folders", "modulename": "aton.file", "qualname": "copy_to_folders", "kind": "function", "doc": "<p>Copies the files from the parent <code>folder</code> with the given <code>extension</code> to individual subfolders.</p>\n\n<p>The subfolders are named as the original files,\nremoving the strings from the <code>strings_to_delete</code> list.\nIf no <code>folder</code> is provided, it runs in the current working directory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">extension</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">strings_to_delete</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.phys", "modulename": "aton.phys", "kind": "module", "doc": "<h1 id=\"physico-chemical-constants\">Physico-chemical constants</h1>\n\n<p>This subpackage contains universal physical constants and conversion factors,\nas well as chemical data from all known elements.\nIt also includes functions to manage this data.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.phys.units</code></td>\n  <td>Universal constants and conversion factors</td>\n</tr>\n<tr>\n  <td><code>aton.phys.atoms</code></td>\n  <td>Data from all chemical elements</td>\n</tr>\n<tr>\n  <td><code>aton.phys.functions</code></td>\n  <td>Functions to sort and manage element data from the <code>aton.phys.atoms</code> dict</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>All values and functions from <strong>phys</strong> submodules can be\nloaded directly as <code>phys.value</code> or <code>phys.function()</code>,\nas in the example below.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">phys</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">eV_to_J</span>                     <span class=\"c1\"># 1.602176634e-19</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"p\">[</span><span class=\"s1\">&#39;H&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">isotope</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mass</span>  <span class=\"c1\"># 2.0141017779</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">split_isotope</span><span class=\"p\">(</span><span class=\"s1\">&#39;He4&#39;</span><span class=\"p\">)</span>        <span class=\"c1\"># (&#39;He&#39;, 4)</span>\n</code></pre>\n</div>\n\n<p>See the API reference of the specific modules for more information.</p>\n\n<h1 id=\"references\">References</h1>\n\n<h2 id=\"atonphysunits\"><code>aton.phys.units</code></h2>\n\n<p>Constant values come from the <a href=\"https://doi.org/10.48550/arXiv.2409.03787\">2022 CODATA</a> Recommended Values of the Fundamental Physical Constants.</p>\n\n<p>Conversion factors for neutron scattering come from\n<a href=\"https://doi.org/10.1016/B978-0-12-398374-9.00001-2\">David L. Price and Felix Fernandez-Alonso, <em>Neutron Scattering Fundamentals</em>, Experimental methods in the physical sciences, Elsevier Academic Press (2013)</a>,\nand from\n<a href=\"https://www.ncnr.nist.gov/instruments/dcs/dcs_usersguide/Conversion_Factors.pdf\">M. B\u00e9e, \"Quasielastic Neutron scattering\", Adam Hilger, Bristol and Philadelphia (1988)</a>;</p>\n\n<h2 id=\"atonphysatoms\"><code>aton.phys.atoms</code></h2>\n\n<p>Atomic <code>mass</code> are in atomic mass units (amu), and come from:\n<a href=\"https://doi.org/10.1351/pac200678112051\">M. E. Wieser, <em>Atomic weights of the elements 2005</em>, Pure and Applied Chemistry 78, 2051\u20132066 (2006)</a>.\nThe following masses are obtained from Wikipedia:\nAc: 227, Np: 237, Pm: 145, Tc: 98.</p>\n\n<p>Isotope <code>mass</code>, <code>mass_number</code> and <code>abundance</code> come from\n<a href=\"https://doi.org/10.1351/pac200375060683\">J. R. de Laeter <em>et al</em>., <em>Atomic weights of the elements 2000</em>, Pure and Applied Chemistry 75, 683\u2013800 (2003)</a>.</p>\n\n<p>Total bound scattering <code>cross_sections</code> $\\sigma_s$ are in barns (1 b = 100 fm$^2$ = 10e-28 m$^2$). From\n<a href=\"https://doi.org/10.1016/B978-0-12-398374-9.00001-2\">David L. Price and Felix Fernandez-Alonso, <em>Neutron Scattering Fundamentals</em>, Experimental methods in the physical sciences, Elsevier Academic Press (2013)</a>.</p>\n"}, {"fullname": "aton.phys.atoms", "modulename": "aton.phys.atoms", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains the <code>atoms</code> megadictionary,\nwhich contains the properties of all elements.\nIt can be loaded directly as <code>aton.phys.atoms</code>.\nIt is managed and updated automatically with <code>aton.phys.functions</code>.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>Element</code></td>\n  <td>Used as values in the <code>atoms</code> dict, stores element properties</td>\n</tr>\n<tr>\n  <td><code>Isotope</code></td>\n  <td>Used as values in <code>Element.isotope</code>, contains isotope properties</td>\n</tr>\n<tr>\n  <td><code>atoms</code></td>\n  <td>The dict with data from all elements</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton.phys</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">atoms</span>\n<span class=\"n\">aluminium_neutron_cross_section</span> <span class=\"o\">=</span> <span class=\"n\">atoms</span><span class=\"p\">[</span><span class=\"s1\">&#39;Al&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">cross_section</span>  <span class=\"c1\"># 1.503</span>\n<span class=\"n\">He4_mass</span> <span class=\"o\">=</span> <span class=\"n\">atoms</span><span class=\"p\">[</span><span class=\"s1\">&#39;He&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">isotope</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mass</span>  <span class=\"c1\"># 4.0026032497</span>\n</code></pre>\n</div>\n\n<hr />\n"}, {"fullname": "aton.phys.atoms.Element", "modulename": "aton.phys.atoms", "qualname": "Element", "kind": "class", "doc": "<p>Used as values in the <code>aton.phys.atoms</code> megadictionary to store element data.</p>\n"}, {"fullname": "aton.phys.atoms.Element.__init__", "modulename": "aton.phys.atoms", "qualname": "Element.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">Z</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">symbol</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mass</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cross_section</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">isotope</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aton.phys.atoms.Element.Z", "modulename": "aton.phys.atoms", "qualname": "Element.Z", "kind": "variable", "doc": "<p>Atomic number (Z). Corresponds to the number of protons / electrons.</p>\n", "annotation": ": int"}, {"fullname": "aton.phys.atoms.Element.symbol", "modulename": "aton.phys.atoms", "qualname": "Element.symbol", "kind": "variable", "doc": "<p>Standard symbol of the element.</p>\n", "annotation": ": str"}, {"fullname": "aton.phys.atoms.Element.name", "modulename": "aton.phys.atoms", "qualname": "Element.name", "kind": "variable", "doc": "<p>Full name.</p>\n", "annotation": ": str"}, {"fullname": "aton.phys.atoms.Element.mass", "modulename": "aton.phys.atoms", "qualname": "Element.mass", "kind": "variable", "doc": "<p>Atomic mass, in atomic mass units (amu).</p>\n", "annotation": ": float"}, {"fullname": "aton.phys.atoms.Element.cross_section", "modulename": "aton.phys.atoms", "qualname": "Element.cross_section", "kind": "variable", "doc": "<p>Total bound scattering cross section.</p>\n", "annotation": ": float"}, {"fullname": "aton.phys.atoms.Element.isotope", "modulename": "aton.phys.atoms", "qualname": "Element.isotope", "kind": "variable", "doc": "<p>Dictionary containing the different <code>Isotope</code> of the element.\nThe keys are the mass number (A).</p>\n", "annotation": ": dict"}, {"fullname": "aton.phys.atoms.Isotope", "modulename": "aton.phys.atoms", "qualname": "Isotope", "kind": "class", "doc": "<p>Used as values in <code>Element.isotope</code> to store isotope data.</p>\n"}, {"fullname": "aton.phys.atoms.Isotope.__init__", "modulename": "aton.phys.atoms", "qualname": "Isotope.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">A</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mass</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">abundance</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cross_section</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aton.phys.atoms.Isotope.A", "modulename": "aton.phys.atoms", "qualname": "Isotope.A", "kind": "variable", "doc": "<p>Mass number (A) of the isotope.\nCorresponds to the total number of protons + neutrons in the core.</p>\n", "annotation": ": int"}, {"fullname": "aton.phys.atoms.Isotope.mass", "modulename": "aton.phys.atoms", "qualname": "Isotope.mass", "kind": "variable", "doc": "<p>Atomic mass of the isotope, in atomic mass units (amu).</p>\n", "annotation": ": float"}, {"fullname": "aton.phys.atoms.Isotope.abundance", "modulename": "aton.phys.atoms", "qualname": "Isotope.abundance", "kind": "variable", "doc": "<p>Relative abundance of the isotope.</p>\n", "annotation": ": float"}, {"fullname": "aton.phys.atoms.Isotope.cross_section", "modulename": "aton.phys.atoms", "qualname": "Isotope.cross_section", "kind": "variable", "doc": "<p>Total bound scattering cross section of the isotope.</p>\n", "annotation": ": float"}, {"fullname": "aton.phys.atoms.atoms", "modulename": "aton.phys.atoms", "qualname": "atoms", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;H&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;He&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Li&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Be&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;B&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;C&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;N&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;O&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;F&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ne&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Na&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Mg&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Al&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Si&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;P&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;S&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Cl&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ar&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;K&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ca&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Sc&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ti&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;V&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Cr&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Mn&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Fe&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Co&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ni&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Cu&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Zn&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ga&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ge&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;As&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Se&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Br&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Kr&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Rb&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Sr&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Y&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Zr&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Nb&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Mo&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Tc&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ru&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Rh&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Pd&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ag&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Cd&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;In&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Sn&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Sb&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Te&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;I&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Xe&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Cs&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ba&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;La&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ce&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Pr&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Nd&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Pm&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Sm&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Eu&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Gd&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Tb&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Dy&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ho&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Er&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Tm&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Yb&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Lu&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Hf&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ta&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;W&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Re&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Os&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ir&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Pt&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Au&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Hg&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Tl&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Pb&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Bi&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Po&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;At&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Rn&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Fr&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ra&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ac&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Th&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Pa&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;U&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Np&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Pu&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Am&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Cm&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Bk&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Cf&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Es&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Fm&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Md&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;No&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Lr&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Rf&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Db&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Sg&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Bh&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Hs&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Mt&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Ds&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Rg&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Cn&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Uut&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Uuq&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Uup&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Uuh&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Uus&#x27;: &lt;aton.phys.atoms.Element object&gt;, &#x27;Uuo&#x27;: &lt;aton.phys.atoms.Element object&gt;}"}, {"fullname": "aton.phys.functions", "modulename": "aton.phys.functions", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains functions to sort and analyse\nchemical data using the <code>aton.phys.atoms</code> megadictionary,\nwhich contains the properties of all elements.\nIt also contains the tools needed to\nautomatically update said megadictionary.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>export_atoms()</code></td>\n  <td>Used to update and export the <code>aton.phys.atoms</code> dict</td>\n</tr>\n<tr>\n  <td><code>split_isotope()</code></td>\n  <td>Splits element name and mass number</td>\n</tr>\n<tr>\n  <td><code>allowed_isotopes()</code></td>\n  <td>Returns the available mass numbers for a given element</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>All functions can be called from the phys subpackage directly, as:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">phys</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">split_isotope</span><span class=\"p\">(</span><span class=\"s1\">&#39;He4&#39;</span><span class=\"p\">)</span>    <span class=\"c1\"># (He, 4)</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">allowed_isotopes</span><span class=\"p\">(</span><span class=\"s1\">&#39;Li&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># (6, 7)</span>\n</code></pre>\n</div>\n\n<hr />\n"}, {"fullname": "aton.phys.functions.export_atoms", "modulename": "aton.phys.functions", "qualname": "export_atoms", "kind": "function", "doc": "<p>Export a dictionary of chemical elements to a python file.</p>\n\n<p>This is used to build and update the <code>aton.atoms</code> megadictionary, that contains\nall the element data, such as masses, cross-sections, etc.\nThe <code>atoms.py</code> file must be modified here.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">atoms</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;He&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Li&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Be&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;B&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;O&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ne&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Na&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Mg&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Al&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Si&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cl&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ar&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ca&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Sc&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ti&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cr&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Mn&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Fe&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Co&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ni&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cu&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Zn&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ga&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ge&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;As&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Se&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Br&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Kr&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Rb&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Sr&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Zr&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Nb&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Mo&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Tc&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ru&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Rh&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Pd&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ag&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cd&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;In&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Sn&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Sb&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Te&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Xe&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cs&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ba&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;La&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ce&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Pr&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Nd&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Pm&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Sm&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Eu&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Gd&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Tb&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Dy&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ho&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Er&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Tm&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Yb&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Lu&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Hf&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ta&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Re&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Os&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ir&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Pt&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Au&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Hg&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Tl&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Pb&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Bi&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Po&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;At&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Rn&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Fr&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ra&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ac&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Th&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Pa&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;U&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Np&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Pu&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Am&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cm&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Bk&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cf&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Es&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Fm&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Md&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;No&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Lr&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Rf&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Db&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Sg&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Bh&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Hs&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Mt&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Ds&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Rg&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cn&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Uut&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Uuq&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Uup&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Uuh&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Uus&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Uuo&#39;</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Element</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">&#39;exported_atoms.py&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.phys.functions.split_isotope", "modulename": "aton.phys.functions", "qualname": "split_isotope", "kind": "function", "doc": "<p>Split the <code>name</code> of an isotope into the element and the mass number, eg. He4 -> He, 4.</p>\n\n<p>If the isotope is not found in the <code>aton.atoms</code> megadictionary it raises an error,\ninforming of the allowed mass numbers (A) values for the given element.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.phys.functions.allowed_isotopes", "modulename": "aton.phys.functions", "qualname": "allowed_isotopes", "kind": "function", "doc": "<p>Return a list with the allowed mass numbers (A) of a given <code>element</code>.</p>\n\n<p>These mass numbers are used as isotope keys in the <code>aton.atoms</code> megadictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.phys.units", "modulename": "aton.phys.units", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This submodule contains useful conversion factors for neutron scattering, from\n<a href=\"https://doi.org/10.1016/B978-0-12-398374-9.00001-2\">David L. Price and Felix Fernandez-Alonso, <em>Neutron Scattering Fundamentals</em>, Experimental methods in the physical sciences, Elsevier Academic Press (2013)</a>,\nand from\n<a href=\"https://www.ncnr.nist.gov/instruments/dcs/dcs_usersguide/Conversion_Factors.pdf\">M. B\u00e9e, \"Quasielastic Neutron scattering\", Adam Hilger, Bristol and Philadelphia (1988)</a>.</p>\n\n<p>It also contains the constants from the \n<a href=\"https://doi.org/10.48550/arXiv.2409.03787\">2022 CODATA</a>\nRecommended Values of the Fundamental Physical Constants,\nas a shorthand alternative to <a href=\"https://docs.scipy.org/doc/scipy/reference/constants.html\">SciPy.constants</a>.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<ul>\n<li><a href=\"#conversion-factors\">Conversion factors</a>\n<ul>\n<li><a href=\"#energy\">Energy E</a></li>\n<li><a href=\"#distance\">Distance</a></li>\n<li><a href=\"#mass\">Mass</a></li>\n<li><a href=\"#pressure\">Pressure</a></li>\n<li><a href=\"#time\">Time</a></li>\n<li><a href=\"#wavelength\">Wavelength l</a></li>\n<li><a href=\"#wavevector\">Wavevector <em>k</em></a></li>\n<li><a href=\"#velocity\">Velocity v</a></li>\n<li><a href=\"#temperature\">Temperature T</a></li>\n<li><a href=\"#temperature-scales\">Temperature scales</a></li>\n<li><a href=\"#frequency\">Frequency <em>v</em></a></li>\n<li><a href=\"#angular-frequency\">Angular frequency <em>w</em></a></li>\n<li><a href=\"#wavenumber\">Wavenumber <em>v</em>/c</a></li>\n</ul></li>\n<li><a href=\"#fundamental-physical-constants\">Fundamental Physical Constants</a>\n<ul>\n<li><a href=\"#universal\">Universal</a></li>\n<li><a href=\"#electromagnetic\">Electromagnetic</a></li>\n<li><a href=\"#atomic-and-nuclear\">Atomic and nuclear</a>\n<ul>\n<li><a href=\"#general\">General</a></li>\n<li><a href=\"#electron\">Electron</a></li>\n<li><a href=\"#proton\">Proton</a></li>\n<li><a href=\"#neutron\">Neutron</a></li>\n<li><a href=\"#deuteron\">Deuteron</a></li>\n<li><a href=\"#alpha-particle\">Alpha particle</a></li>\n</ul></li>\n<li><a href=\"#physicochemical\">Physicochemical</a></li>\n</ul></li>\n</ul>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>Units and constants are named as their standard symbol, removing any <code>/</code> divider in between.\nInverse of a unit or constant X, as in 1/X or X$^{-1}$, is expressed as <code>X1</code>.\n<a href=\"https://en.wikipedia.org/wiki/Romanization_of_Greek#Ancient_Greek\">Romanized greek letters</a> are used,\nexcept for $\\mu$ which is expressed as <code>u</code>.</p>\n\n<p>Some examples:  </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">phys</span>\n<span class=\"c1\"># Constants</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">h</span>     <span class=\"c1\"># Planck constant</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">hbar</span>  <span class=\"c1\"># reduced Planck constant</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">a</span>     <span class=\"c1\"># fine-structure constant (alpha)</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">ue</span>    <span class=\"c1\"># electron magnetic moment (mu e)</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">mn</span>    <span class=\"c1\"># neutron mass</span>\n<span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">mnc2</span>  <span class=\"c1\"># neutron mass energy equivalent</span>\n<span class=\"c1\"># Conversions</span>\n<span class=\"c1\"># meV to 1/cm</span>\n<span class=\"n\">energy_in_cm1</span> <span class=\"o\">=</span> <span class=\"n\">energy_in_meV</span> <span class=\"o\">*</span> <span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">meV_to_cm1</span>\n<span class=\"c1\"># Bohr to Angstroms</span>\n<span class=\"n\">distance_in_angstroms</span> <span class=\"o\">=</span> <span class=\"n\">distance_in_bohr</span> <span class=\"o\">*</span> <span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">bohr_to_AA</span>\n<span class=\"c1\"># m/s to rad/s  (used in neutron scattering)</span>\n<span class=\"n\">velocity_in_rads</span> <span class=\"o\">=</span> <span class=\"n\">velocity_in_ms</span> <span class=\"o\">*</span> <span class=\"n\">phys</span><span class=\"o\">.</span><span class=\"n\">ms_to_rads</span>\n</code></pre>\n</div>\n\n<hr />\n\n<h1 id=\"conversion-factors\">Conversion factors</h1>\n\n<h2 id=\"energy\">Energy</h2>\n"}, {"fullname": "aton.phys.units.Ry_to_eV", "modulename": "aton.phys.units", "qualname": "Ry_to_eV", "kind": "variable", "doc": "<p></p>\n", "default_value": "13.60569312299"}, {"fullname": "aton.phys.units.Ry_to_meV", "modulename": "aton.phys.units", "qualname": "Ry_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "13605.69312299"}, {"fullname": "aton.phys.units.Ry_to_J", "modulename": "aton.phys.units", "qualname": "Ry_to_J", "kind": "variable", "doc": "<p></p>\n", "default_value": "2.179872361103e-18"}, {"fullname": "aton.phys.units.eV_to_Ry", "modulename": "aton.phys.units", "qualname": "eV_to_Ry", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.07349864435133158"}, {"fullname": "aton.phys.units.eV_to_J", "modulename": "aton.phys.units", "qualname": "eV_to_J", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.602176634e-19"}, {"fullname": "aton.phys.units.eV_to_meV", "modulename": "aton.phys.units", "qualname": "eV_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000.0"}, {"fullname": "aton.phys.units.eV_to_ueV", "modulename": "aton.phys.units", "qualname": "eV_to_ueV", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000000.0"}, {"fullname": "aton.phys.units.meV_to_eV", "modulename": "aton.phys.units", "qualname": "meV_to_eV", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.001"}, {"fullname": "aton.phys.units.meV_to_ueV", "modulename": "aton.phys.units", "qualname": "meV_to_ueV", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000.0"}, {"fullname": "aton.phys.units.meV_to_Ry", "modulename": "aton.phys.units", "qualname": "meV_to_Ry", "kind": "variable", "doc": "<p></p>\n", "default_value": "7.349864435133159e-05"}, {"fullname": "aton.phys.units.meV_to_J", "modulename": "aton.phys.units", "qualname": "meV_to_J", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.602176634e-22"}, {"fullname": "aton.phys.units.meV_to_AA", "modulename": "aton.phys.units", "qualname": "meV_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "9.045"}, {"fullname": "aton.phys.units.meV_to_AA1", "modulename": "aton.phys.units", "qualname": "meV_to_AA1", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.6947"}, {"fullname": "aton.phys.units.meV_to_ms", "modulename": "aton.phys.units", "qualname": "meV_to_ms", "kind": "variable", "doc": "<p></p>\n", "default_value": "437.4"}, {"fullname": "aton.phys.units.meV_to_K", "modulename": "aton.phys.units", "qualname": "meV_to_K", "kind": "variable", "doc": "<p></p>\n", "default_value": "11.604"}, {"fullname": "aton.phys.units.meV_to_THz", "modulename": "aton.phys.units", "qualname": "meV_to_THz", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.2418"}, {"fullname": "aton.phys.units.meV_to_rads", "modulename": "aton.phys.units", "qualname": "meV_to_rads", "kind": "variable", "doc": "<p></p>\n", "default_value": "1519000000000.0"}, {"fullname": "aton.phys.units.meV_to_cm1", "modulename": "aton.phys.units", "qualname": "meV_to_cm1", "kind": "variable", "doc": "<p></p>\n", "default_value": "8.0655"}, {"fullname": "aton.phys.units.meV_to_kJmol", "modulename": "aton.phys.units", "qualname": "meV_to_kJmol", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0965"}, {"fullname": "aton.phys.units.ueV_to_eV", "modulename": "aton.phys.units", "qualname": "ueV_to_eV", "kind": "variable", "doc": "<p></p>\n", "default_value": "1e-06"}, {"fullname": "aton.phys.units.ueV_to_meV", "modulename": "aton.phys.units", "qualname": "ueV_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.001"}, {"fullname": "aton.phys.units.cal_to_J", "modulename": "aton.phys.units", "qualname": "cal_to_J", "kind": "variable", "doc": "<p></p>\n", "default_value": "4.184"}, {"fullname": "aton.phys.units.kcal_to_J", "modulename": "aton.phys.units", "qualname": "kcal_to_J", "kind": "variable", "doc": "<p></p>\n", "default_value": "4184.0"}, {"fullname": "aton.phys.units.J_to_eV", "modulename": "aton.phys.units", "qualname": "J_to_eV", "kind": "variable", "doc": "<p></p>\n", "default_value": "6.241509074460763e+18"}, {"fullname": "aton.phys.units.J_to_meV", "modulename": "aton.phys.units", "qualname": "J_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "6.241509074460763e+21"}, {"fullname": "aton.phys.units.J_to_Ry", "modulename": "aton.phys.units", "qualname": "J_to_Ry", "kind": "variable", "doc": "<p></p>\n", "default_value": "4.5874245567938074e+17"}, {"fullname": "aton.phys.units.J_to_cal", "modulename": "aton.phys.units", "qualname": "J_to_cal", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.2390057361376673"}, {"fullname": "aton.phys.units.J_to_kcal", "modulename": "aton.phys.units", "qualname": "J_to_kcal", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0002390057361376673"}, {"fullname": "aton.phys.units.kJmol_to_AA", "modulename": "aton.phys.units", "qualname": "kJmol_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "2.809"}, {"fullname": "aton.phys.units.kJmol_to_AA1", "modulename": "aton.phys.units", "qualname": "kJmol_to_AA1", "kind": "variable", "doc": "<p></p>\n", "default_value": "2.237"}, {"fullname": "aton.phys.units.kJmol_to_ms", "modulename": "aton.phys.units", "qualname": "kJmol_to_ms", "kind": "variable", "doc": "<p></p>\n", "default_value": "1408.0"}, {"fullname": "aton.phys.units.kJmol_to_K", "modulename": "aton.phys.units", "qualname": "kJmol_to_K", "kind": "variable", "doc": "<p></p>\n", "default_value": "120.3"}, {"fullname": "aton.phys.units.kJmol_to_THz", "modulename": "aton.phys.units", "qualname": "kJmol_to_THz", "kind": "variable", "doc": "<p></p>\n", "default_value": "2.506"}, {"fullname": "aton.phys.units.kJmol_to_rads", "modulename": "aton.phys.units", "qualname": "kJmol_to_rads", "kind": "variable", "doc": "<p></p>\n", "default_value": "15750000000000.0"}, {"fullname": "aton.phys.units.kJmol_to_cm1", "modulename": "aton.phys.units", "qualname": "kJmol_to_cm1", "kind": "variable", "doc": "<p></p>\n", "default_value": "83.59"}, {"fullname": "aton.phys.units.kJmol_to_meV", "modulename": "aton.phys.units", "qualname": "kJmol_to_meV", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"distance\">Distance</h2>\n", "default_value": "10.36"}, {"fullname": "aton.phys.units.bohr_to_AA", "modulename": "aton.phys.units", "qualname": "bohr_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.529177210544"}, {"fullname": "aton.phys.units.bohr_to_m", "modulename": "aton.phys.units", "qualname": "bohr_to_m", "kind": "variable", "doc": "<p></p>\n", "default_value": "5.29177210544e-11"}, {"fullname": "aton.phys.units.AA_to_bohr", "modulename": "aton.phys.units", "qualname": "AA_to_bohr", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.8897261259077822"}, {"fullname": "aton.phys.units.AA_to_m", "modulename": "aton.phys.units", "qualname": "AA_to_m", "kind": "variable", "doc": "<p></p>\n", "default_value": "1e-10"}, {"fullname": "aton.phys.units.m_to_bohr", "modulename": "aton.phys.units", "qualname": "m_to_bohr", "kind": "variable", "doc": "<p></p>\n", "default_value": "18897261259.077824"}, {"fullname": "aton.phys.units.m_to_AA", "modulename": "aton.phys.units", "qualname": "m_to_AA", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"mass\">Mass</h2>\n", "default_value": "10000000000.0"}, {"fullname": "aton.phys.units.amu_to_kg", "modulename": "aton.phys.units", "qualname": "amu_to_kg", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.6605390666e-27"}, {"fullname": "aton.phys.units.amu_to_g", "modulename": "aton.phys.units", "qualname": "amu_to_g", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.6605390666e-24"}, {"fullname": "aton.phys.units.kg_to_g", "modulename": "aton.phys.units", "qualname": "kg_to_g", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000.0"}, {"fullname": "aton.phys.units.kg_to_amu", "modulename": "aton.phys.units", "qualname": "kg_to_amu", "kind": "variable", "doc": "<p></p>\n", "default_value": "6.022140762081123e+26"}, {"fullname": "aton.phys.units.g_to_kg", "modulename": "aton.phys.units", "qualname": "g_to_kg", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.001"}, {"fullname": "aton.phys.units.g_to_amu", "modulename": "aton.phys.units", "qualname": "g_to_amu", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"pressure\">Pressure</h2>\n", "default_value": "6.022140762081122e+23"}, {"fullname": "aton.phys.units.Pa_to_bar", "modulename": "aton.phys.units", "qualname": "Pa_to_bar", "kind": "variable", "doc": "<p></p>\n", "default_value": "1e-05"}, {"fullname": "aton.phys.units.Pa_to_kbar", "modulename": "aton.phys.units", "qualname": "Pa_to_kbar", "kind": "variable", "doc": "<p></p>\n", "default_value": "1e-08"}, {"fullname": "aton.phys.units.Pa_to_atm", "modulename": "aton.phys.units", "qualname": "Pa_to_atm", "kind": "variable", "doc": "<p></p>\n", "default_value": "101325.0"}, {"fullname": "aton.phys.units.Pa_to_Torr", "modulename": "aton.phys.units", "qualname": "Pa_to_Torr", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.007500616827041697"}, {"fullname": "aton.phys.units.Pa_to_kPa", "modulename": "aton.phys.units", "qualname": "Pa_to_kPa", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.001"}, {"fullname": "aton.phys.units.Pa_to_mTorr", "modulename": "aton.phys.units", "qualname": "Pa_to_mTorr", "kind": "variable", "doc": "<p></p>\n", "default_value": "7.500616827041697"}, {"fullname": "aton.phys.units.Pa_to_GPa", "modulename": "aton.phys.units", "qualname": "Pa_to_GPa", "kind": "variable", "doc": "<p></p>\n", "default_value": "1e-09"}, {"fullname": "aton.phys.units.kPa_to_bar", "modulename": "aton.phys.units", "qualname": "kPa_to_bar", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.01"}, {"fullname": "aton.phys.units.kPa_to_Pa", "modulename": "aton.phys.units", "qualname": "kPa_to_Pa", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000.0"}, {"fullname": "aton.phys.units.GPa_to_bar", "modulename": "aton.phys.units", "qualname": "GPa_to_bar", "kind": "variable", "doc": "<p></p>\n", "default_value": "10000.0"}, {"fullname": "aton.phys.units.GPa_to_kbar", "modulename": "aton.phys.units", "qualname": "GPa_to_kbar", "kind": "variable", "doc": "<p></p>\n", "default_value": "10.0"}, {"fullname": "aton.phys.units.GPa_to_Pa", "modulename": "aton.phys.units", "qualname": "GPa_to_Pa", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000000000.0"}, {"fullname": "aton.phys.units.bar_to_Pa", "modulename": "aton.phys.units", "qualname": "bar_to_Pa", "kind": "variable", "doc": "<p></p>\n", "default_value": "100000.0"}, {"fullname": "aton.phys.units.bar_to_GPa", "modulename": "aton.phys.units", "qualname": "bar_to_GPa", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0001"}, {"fullname": "aton.phys.units.bar_to_atm", "modulename": "aton.phys.units", "qualname": "bar_to_atm", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.9869232667160128"}, {"fullname": "aton.phys.units.bar_to_Torr", "modulename": "aton.phys.units", "qualname": "bar_to_Torr", "kind": "variable", "doc": "<p></p>\n", "default_value": "750.0616827041698"}, {"fullname": "aton.phys.units.bar_to_kbar", "modulename": "aton.phys.units", "qualname": "bar_to_kbar", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.001"}, {"fullname": "aton.phys.units.bar_to_mTorr", "modulename": "aton.phys.units", "qualname": "bar_to_mTorr", "kind": "variable", "doc": "<p></p>\n", "default_value": "750061.6827041698"}, {"fullname": "aton.phys.units.kbar_to_GPa", "modulename": "aton.phys.units", "qualname": "kbar_to_GPa", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.1"}, {"fullname": "aton.phys.units.kbar_to_bar", "modulename": "aton.phys.units", "qualname": "kbar_to_bar", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000.0"}, {"fullname": "aton.phys.units.atm_to_Pa", "modulename": "aton.phys.units", "qualname": "atm_to_Pa", "kind": "variable", "doc": "<p></p>\n", "default_value": "9.869232667160129e-06"}, {"fullname": "aton.phys.units.atm_to_bar", "modulename": "aton.phys.units", "qualname": "atm_to_bar", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.01325"}, {"fullname": "aton.phys.units.atm_to_Torr", "modulename": "aton.phys.units", "qualname": "atm_to_Torr", "kind": "variable", "doc": "<p></p>\n", "default_value": "760.0"}, {"fullname": "aton.phys.units.atm_to_mTorr", "modulename": "aton.phys.units", "qualname": "atm_to_mTorr", "kind": "variable", "doc": "<p></p>\n", "default_value": "760000.0"}, {"fullname": "aton.phys.units.Torr_to_Pa", "modulename": "aton.phys.units", "qualname": "Torr_to_Pa", "kind": "variable", "doc": "<p></p>\n", "default_value": "133.32236842105263"}, {"fullname": "aton.phys.units.Torr_to_bar", "modulename": "aton.phys.units", "qualname": "Torr_to_bar", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0013332236842105263"}, {"fullname": "aton.phys.units.Torr_to_atm", "modulename": "aton.phys.units", "qualname": "Torr_to_atm", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0013157894736842105"}, {"fullname": "aton.phys.units.Torr_to_mTorr", "modulename": "aton.phys.units", "qualname": "Torr_to_mTorr", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000.0"}, {"fullname": "aton.phys.units.mTorr_to_Pa", "modulename": "aton.phys.units", "qualname": "mTorr_to_Pa", "kind": "variable", "doc": "<p></p>\n", "default_value": "133322.36842105264"}, {"fullname": "aton.phys.units.mTorr_to_bar", "modulename": "aton.phys.units", "qualname": "mTorr_to_bar", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.3332236842105263"}, {"fullname": "aton.phys.units.mTorr_to_atm", "modulename": "aton.phys.units", "qualname": "mTorr_to_atm", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.3157894736842106"}, {"fullname": "aton.phys.units.mTorr_to_Torr", "modulename": "aton.phys.units", "qualname": "mTorr_to_Torr", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"time\">Time</h2>\n", "default_value": "0.001"}, {"fullname": "aton.phys.units.H_to_s", "modulename": "aton.phys.units", "qualname": "H_to_s", "kind": "variable", "doc": "<p></p>\n", "default_value": "3600.0"}, {"fullname": "aton.phys.units.s_to_H", "modulename": "aton.phys.units", "qualname": "s_to_H", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"wavelength\">Wavelength</h2>\n", "default_value": "0.0002777777777777778"}, {"fullname": "aton.phys.units.AA_to_AA1", "modulename": "aton.phys.units", "qualname": "AA_to_AA1", "kind": "variable", "doc": "<p></p>\n", "default_value": "6.28318"}, {"fullname": "aton.phys.units.AA_to_ms", "modulename": "aton.phys.units", "qualname": "AA_to_ms", "kind": "variable", "doc": "<p></p>\n", "default_value": "3956"}, {"fullname": "aton.phys.units.AA_to_K", "modulename": "aton.phys.units", "qualname": "AA_to_K", "kind": "variable", "doc": "<p></p>\n", "default_value": "949.3"}, {"fullname": "aton.phys.units.AA_to_THz", "modulename": "aton.phys.units", "qualname": "AA_to_THz", "kind": "variable", "doc": "<p></p>\n", "default_value": "19.78"}, {"fullname": "aton.phys.units.AA_to_rads", "modulename": "aton.phys.units", "qualname": "AA_to_rads", "kind": "variable", "doc": "<p></p>\n", "default_value": "124300000000000.0"}, {"fullname": "aton.phys.units.AA_to_cm1", "modulename": "aton.phys.units", "qualname": "AA_to_cm1", "kind": "variable", "doc": "<p></p>\n", "default_value": "659.8"}, {"fullname": "aton.phys.units.AA_to_meV", "modulename": "aton.phys.units", "qualname": "AA_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "81.805"}, {"fullname": "aton.phys.units.AA_to_kJmol", "modulename": "aton.phys.units", "qualname": "AA_to_kJmol", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"wavevector\">Wavevector</h2>\n", "default_value": "7.893"}, {"fullname": "aton.phys.units.AA1_to_AA", "modulename": "aton.phys.units", "qualname": "AA1_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "6.28318"}, {"fullname": "aton.phys.units.AA1_to_ms", "modulename": "aton.phys.units", "qualname": "AA1_to_ms", "kind": "variable", "doc": "<p></p>\n", "default_value": "629.6"}, {"fullname": "aton.phys.units.AA1_to_K", "modulename": "aton.phys.units", "qualname": "AA1_to_K", "kind": "variable", "doc": "<p></p>\n", "default_value": "24.046"}, {"fullname": "aton.phys.units.AA1_to_THz", "modulename": "aton.phys.units", "qualname": "AA1_to_THz", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.501"}, {"fullname": "aton.phys.units.AA1_to_rads", "modulename": "aton.phys.units", "qualname": "AA1_to_rads", "kind": "variable", "doc": "<p></p>\n", "default_value": "3148000000000.0"}, {"fullname": "aton.phys.units.AA1_to_cm1", "modulename": "aton.phys.units", "qualname": "AA1_to_cm1", "kind": "variable", "doc": "<p></p>\n", "default_value": "16.71"}, {"fullname": "aton.phys.units.AA1_to_meV", "modulename": "aton.phys.units", "qualname": "AA1_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "2.072"}, {"fullname": "aton.phys.units.AA1_to_kJmol", "modulename": "aton.phys.units", "qualname": "AA1_to_kJmol", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"velocity\">Velocity</h2>\n", "default_value": "0.1999"}, {"fullname": "aton.phys.units.ms_to_AA", "modulename": "aton.phys.units", "qualname": "ms_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "3956"}, {"fullname": "aton.phys.units.ms_to_AA1", "modulename": "aton.phys.units", "qualname": "ms_to_AA1", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.001589"}, {"fullname": "aton.phys.units.ms_to_K", "modulename": "aton.phys.units", "qualname": "ms_to_K", "kind": "variable", "doc": "<p></p>\n", "default_value": "606600.0"}, {"fullname": "aton.phys.units.ms_to_THz", "modulename": "aton.phys.units", "qualname": "ms_to_THz", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.265e-06"}, {"fullname": "aton.phys.units.ms_to_rads", "modulename": "aton.phys.units", "qualname": "ms_to_rads", "kind": "variable", "doc": "<p></p>\n", "default_value": "7948000.0"}, {"fullname": "aton.phys.units.ms_to_cm1", "modulename": "aton.phys.units", "qualname": "ms_to_cm1", "kind": "variable", "doc": "<p></p>\n", "default_value": "4.216e-05"}, {"fullname": "aton.phys.units.ms_to_meV", "modulename": "aton.phys.units", "qualname": "ms_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "5.227e-06"}, {"fullname": "aton.phys.units.ms_to_kJmol", "modulename": "aton.phys.units", "qualname": "ms_to_kJmol", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"temperature\">Temperature</h2>\n", "default_value": "5.044e-07"}, {"fullname": "aton.phys.units.K_to_AA", "modulename": "aton.phys.units", "qualname": "K_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "30.81"}, {"fullname": "aton.phys.units.K_to_AA1", "modulename": "aton.phys.units", "qualname": "K_to_AA1", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.2039"}, {"fullname": "aton.phys.units.K_to_ms", "modulename": "aton.phys.units", "qualname": "K_to_ms", "kind": "variable", "doc": "<p></p>\n", "default_value": "128.4"}, {"fullname": "aton.phys.units.K_to_THz", "modulename": "aton.phys.units", "qualname": "K_to_THz", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.02084"}, {"fullname": "aton.phys.units.K_to_rads", "modulename": "aton.phys.units", "qualname": "K_to_rads", "kind": "variable", "doc": "<p></p>\n", "default_value": "130900000000.0"}, {"fullname": "aton.phys.units.K_to_cm1", "modulename": "aton.phys.units", "qualname": "K_to_cm1", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.695"}, {"fullname": "aton.phys.units.K_to_meV", "modulename": "aton.phys.units", "qualname": "K_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.08617"}, {"fullname": "aton.phys.units.K_to_kJmol", "modulename": "aton.phys.units", "qualname": "K_to_kJmol", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"temperature-scales\">Temperature scales</h2>\n\n<p>Note that to change between temperature scales,\nthese constants must be added instead of multiplied.</p>\n", "default_value": "0.008314"}, {"fullname": "aton.phys.units.C_to_K_scale", "modulename": "aton.phys.units", "qualname": "C_to_K_scale", "kind": "variable", "doc": "<p></p>\n", "default_value": "273.15"}, {"fullname": "aton.phys.units.K_to_C_scale", "modulename": "aton.phys.units", "qualname": "K_to_C_scale", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"frequency\">Frequency</h2>\n", "default_value": "-273.15"}, {"fullname": "aton.phys.units.THz_to_AA", "modulename": "aton.phys.units", "qualname": "THz_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "4.4475"}, {"fullname": "aton.phys.units.THz_to_AA1", "modulename": "aton.phys.units", "qualname": "THz_to_AA1", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.4127"}, {"fullname": "aton.phys.units.THz_to_ms", "modulename": "aton.phys.units", "qualname": "THz_to_ms", "kind": "variable", "doc": "<p></p>\n", "default_value": "889.5"}, {"fullname": "aton.phys.units.THz_to_K", "modulename": "aton.phys.units", "qualname": "THz_to_K", "kind": "variable", "doc": "<p></p>\n", "default_value": "48.0"}, {"fullname": "aton.phys.units.THz_to_rads", "modulename": "aton.phys.units", "qualname": "THz_to_rads", "kind": "variable", "doc": "<p></p>\n", "default_value": "6283000000000.0"}, {"fullname": "aton.phys.units.THz_to_cm1", "modulename": "aton.phys.units", "qualname": "THz_to_cm1", "kind": "variable", "doc": "<p></p>\n", "default_value": "33.36"}, {"fullname": "aton.phys.units.THz_to_meV", "modulename": "aton.phys.units", "qualname": "THz_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "4.136"}, {"fullname": "aton.phys.units.THz_to_kJmol", "modulename": "aton.phys.units", "qualname": "THz_to_kJmol", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"angular-frequency\">Angular frequency</h2>\n", "default_value": "0.399"}, {"fullname": "aton.phys.units.rads_to_AA", "modulename": "aton.phys.units", "qualname": "rads_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "11150000.0"}, {"fullname": "aton.phys.units.rads_to_AA1", "modulename": "aton.phys.units", "qualname": "rads_to_AA1", "kind": "variable", "doc": "<p></p>\n", "default_value": "5.64e-07"}, {"fullname": "aton.phys.units.rads_to_ms", "modulename": "aton.phys.units", "qualname": "rads_to_ms", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0003549"}, {"fullname": "aton.phys.units.rads_to_K", "modulename": "aton.phys.units", "qualname": "rads_to_K", "kind": "variable", "doc": "<p></p>\n", "default_value": "7.64e-12"}, {"fullname": "aton.phys.units.rads_to_THz", "modulename": "aton.phys.units", "qualname": "rads_to_THz", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.592e-13"}, {"fullname": "aton.phys.units.rads_to_cm1", "modulename": "aton.phys.units", "qualname": "rads_to_cm1", "kind": "variable", "doc": "<p></p>\n", "default_value": "5.309e-12"}, {"fullname": "aton.phys.units.rads_to_meV", "modulename": "aton.phys.units", "qualname": "rads_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "6.582e-13"}, {"fullname": "aton.phys.units.rads_to_kJmol", "modulename": "aton.phys.units", "qualname": "rads_to_kJmol", "kind": "variable", "doc": "<hr />\n\n<h2 id=\"wavenumber\">Wavenumber</h2>\n", "default_value": "6.351e-14"}, {"fullname": "aton.phys.units.cm1_to_AA", "modulename": "aton.phys.units", "qualname": "cm1_to_AA", "kind": "variable", "doc": "<p></p>\n", "default_value": "25.69"}, {"fullname": "aton.phys.units.cm1_to_AA1", "modulename": "aton.phys.units", "qualname": "cm1_to_AA1", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.2446"}, {"fullname": "aton.phys.units.cm1_to_ms", "modulename": "aton.phys.units", "qualname": "cm1_to_ms", "kind": "variable", "doc": "<p></p>\n", "default_value": "154.01"}, {"fullname": "aton.phys.units.cm1_to_K", "modulename": "aton.phys.units", "qualname": "cm1_to_K", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.439"}, {"fullname": "aton.phys.units.cm1_to_THz", "modulename": "aton.phys.units", "qualname": "cm1_to_THz", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.02998"}, {"fullname": "aton.phys.units.cm1_to_rads", "modulename": "aton.phys.units", "qualname": "cm1_to_rads", "kind": "variable", "doc": "<p></p>\n", "default_value": "188400000000.0"}, {"fullname": "aton.phys.units.cm1_to_meV", "modulename": "aton.phys.units", "qualname": "cm1_to_meV", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.12398487384539086"}, {"fullname": "aton.phys.units.cm1_to_kJmol", "modulename": "aton.phys.units", "qualname": "cm1_to_kJmol", "kind": "variable", "doc": "<hr />\n\n<h1 id=\"fundamental-physical-constants\">Fundamental Physical Constants</h1>\n\n<p>Using SI units unless stated otherwise.</p>\n\n<h2 id=\"universal\">Universal</h2>\n", "default_value": "0.01196"}, {"fullname": "aton.phys.units.c", "modulename": "aton.phys.units", "qualname": "c", "kind": "variable", "doc": "<p>$c$ | speed of light in vacuum / natural unit of velocity, in m/s</p>\n", "default_value": "299792458"}, {"fullname": "aton.phys.units.u0", "modulename": "aton.phys.units", "qualname": "u0", "kind": "variable", "doc": "<p>$\\mu_0$ | vacuum magnetic permeability, in N\u00b7A$^{-2}$ ($4\\pi\\alpha\\hbar/e^2 c$)</p>\n", "default_value": "1.25663706127e-06"}, {"fullname": "aton.phys.units.e0", "modulename": "aton.phys.units", "qualname": "e0", "kind": "variable", "doc": "<p>$\\epsilon_0$ | vacuum electric permittivity, in F\u00b7m$^{-1}$ ($1/\\mu_0 c^2$)</p>\n", "default_value": "1.25663706127e-06"}, {"fullname": "aton.phys.units.Z0", "modulename": "aton.phys.units", "qualname": "Z0", "kind": "variable", "doc": "<p>$Z_0$ | characteristic impedance of vacuum, in $\\Omega$ ($\\mu_0 c$)</p>\n", "default_value": "376.730313412"}, {"fullname": "aton.phys.units.G", "modulename": "aton.phys.units", "qualname": "G", "kind": "variable", "doc": "<p>$G$ | Newtonian constant of gravitation, in m$^3$\u00b7kg$^{-1}$\u00b7s$^{-1}$</p>\n", "default_value": "6.6743e-11"}, {"fullname": "aton.phys.units.h", "modulename": "aton.phys.units", "qualname": "h", "kind": "variable", "doc": "<p>$h$ | Planck constant, in J\u00b7s</p>\n", "default_value": "6.62607015e-34"}, {"fullname": "aton.phys.units.h_eV", "modulename": "aton.phys.units", "qualname": "h_eV", "kind": "variable", "doc": "<p>$h$ | Planck constant, in eV\u00b7s</p>\n", "default_value": "4.135667696923859e-15"}, {"fullname": "aton.phys.units.hbar", "modulename": "aton.phys.units", "qualname": "hbar", "kind": "variable", "doc": "<p>$\\hbar$ | reduced Planck constant / natural unit of action, in J\u00b7s</p>\n", "default_value": "1.0545718176461565e-34"}, {"fullname": "aton.phys.units.hbar_eV", "modulename": "aton.phys.units", "qualname": "hbar_eV", "kind": "variable", "doc": "<p>$\\hbar$ | reduced Planck constant, in eV\u00b7s</p>\n\n<hr />\n\n<h2 id=\"electromagnetic\">Electromagnetic</h2>\n", "default_value": "6.582119569509066e-16"}, {"fullname": "aton.phys.units.e", "modulename": "aton.phys.units", "qualname": "e", "kind": "variable", "doc": "<p>$e$ | elementary charge, in C</p>\n", "default_value": "1.602176634e-19"}, {"fullname": "aton.phys.units.P0", "modulename": "aton.phys.units", "qualname": "P0", "kind": "variable", "doc": "<p>$\\Phi_0$ | magnetic flux quantum, in Wb ($2\\pi\\hbar/(2e)$)</p>\n", "default_value": "2.067833848e-15"}, {"fullname": "aton.phys.units.G0", "modulename": "aton.phys.units", "qualname": "G0", "kind": "variable", "doc": "<p>$G_0$ | conductance quantum, in S ($2e^2/2\\pi h$)</p>\n", "default_value": "7.748091729e-05"}, {"fullname": "aton.phys.units.KJ", "modulename": "aton.phys.units", "qualname": "KJ", "kind": "variable", "doc": "<p>$K_J$ | Josephson constant, in Hz\u00b7V$^{-1}$ (2e/h)</p>\n", "default_value": "483597848400000.0"}, {"fullname": "aton.phys.units.RK", "modulename": "aton.phys.units", "qualname": "RK", "kind": "variable", "doc": "<p>$R_K$ | von Klitzing constant, in $\\Omega$ ($\\mu_0 c/2\\alpha = 2\\pi\\hbar/e^2$)</p>\n", "default_value": "25812.80745"}, {"fullname": "aton.phys.units.uB", "modulename": "aton.phys.units", "qualname": "uB", "kind": "variable", "doc": "<p>$\\mu_B$ | Bohr magneton, in J\u00b7T$^{-1}$ ($e\\hbar / 2m_e$)</p>\n", "default_value": "9.2740100657e-24"}, {"fullname": "aton.phys.units.uN", "modulename": "aton.phys.units", "qualname": "uN", "kind": "variable", "doc": "<p>$\\mu_N$ | nuclear magneton, in J\u00b7T$^{-1}$ ($e\\hbar / 2m_p$)</p>\n\n<hr />\n\n<h2 id=\"atomic-and-nuclear\">Atomic and nuclear</h2>\n\n<h3 id=\"general\">General</h3>\n", "default_value": "5.0507837393e-27"}, {"fullname": "aton.phys.units.a", "modulename": "aton.phys.units", "qualname": "a", "kind": "variable", "doc": "<p>$\\alpha$ | fine-structure constant ($e^2 / 4 \\pi \\epsilon_0 \\hbar c$)</p>\n", "default_value": "0.0072973525643"}, {"fullname": "aton.phys.units.a1", "modulename": "aton.phys.units", "qualname": "a1", "kind": "variable", "doc": "<p>$\\alpha^{-1}$ | inverse fine-structure constant</p>\n", "default_value": "137.035999177"}, {"fullname": "aton.phys.units.cRinf", "modulename": "aton.phys.units", "qualname": "cRinf", "kind": "variable", "doc": "<p>$cR\\infty$ | Rydberg frequency, in Hz ($\\alpha^2m_e c^2/2h = E_h/2h$)</p>\n", "default_value": "3289841960250000.0"}, {"fullname": "aton.phys.units.Rinf", "modulename": "aton.phys.units", "qualname": "Rinf", "kind": "variable", "doc": "<p>$R\\infty$ | Rydberg constant, in $[m^{-1}]^a$</p>\n", "default_value": "10973731.568157"}, {"fullname": "aton.phys.units.a0", "modulename": "aton.phys.units", "qualname": "a0", "kind": "variable", "doc": "<p>$a_0$ | Bohr radius, in m</p>\n", "default_value": "5.29177210544e-11"}, {"fullname": "aton.phys.units.Eh", "modulename": "aton.phys.units", "qualname": "Eh", "kind": "variable", "doc": "<p>$E_h$ | Hartree energy, in J ($\\alpha^2m_ec^2=e^2/4\\pi\\epsilon_0a_0=2h c R_{\\infty}$)</p>\n\n<hr />\n\n<h3 id=\"electron\">Electron</h3>\n", "default_value": "4.359744722206e-18"}, {"fullname": "aton.phys.units.me", "modulename": "aton.phys.units", "qualname": "me", "kind": "variable", "doc": "<p>$m_e$ | electron mass / natural unit of mass, in kg</p>\n", "default_value": "-21.8906162861"}, {"fullname": "aton.phys.units.me_uma", "modulename": "aton.phys.units", "qualname": "me_uma", "kind": "variable", "doc": "<p>$m_e$ | electron mass, in uma</p>\n", "default_value": "0.0005485799090441"}, {"fullname": "aton.phys.units.mec2", "modulename": "aton.phys.units", "qualname": "mec2", "kind": "variable", "doc": "<p>$m_e c^2$ | electron mass energy equivalent / natural unit of energy, in J</p>\n", "default_value": "8.187105788e-14"}, {"fullname": "aton.phys.units.mec2_eV", "modulename": "aton.phys.units", "qualname": "mec2_eV", "kind": "variable", "doc": "<p>$m_e c^2$ | electron mass energy equivalent, in eV</p>\n", "default_value": "510998.95069"}, {"fullname": "aton.phys.units.lC", "modulename": "aton.phys.units", "qualname": "lC", "kind": "variable", "doc": "<p>$\\lambda_C$ | Compton wavelength, in $[m]^a$</p>\n", "default_value": "2.42631023538e-12"}, {"fullname": "aton.phys.units.re", "modulename": "aton.phys.units", "qualname": "re", "kind": "variable", "doc": "<p>$r_e$ | classical electron radius, in m ($\\alpha^2 a_0$)</p>\n", "default_value": "2.8179403205e-15"}, {"fullname": "aton.phys.units.se", "modulename": "aton.phys.units", "qualname": "se", "kind": "variable", "doc": "<p>$\\sigma_e$ | Thomson cross section, in m$^2$ ($(8\\pi / 3)r_e^2$)</p>\n", "default_value": "6.6524587051e-29"}, {"fullname": "aton.phys.units.ue", "modulename": "aton.phys.units", "qualname": "ue", "kind": "variable", "doc": "<p>$\\mu_e$ | electron magnetic moment, in J\u00b7T$^{-1}$</p>\n\n<hr />\n\n<h3 id=\"proton\">Proton</h3>\n", "default_value": "-9.2847646917e-24"}, {"fullname": "aton.phys.units.mp", "modulename": "aton.phys.units", "qualname": "mp", "kind": "variable", "doc": "<p>$m_p$ | proton mass, in kg</p>\n", "default_value": "-25.32737807405"}, {"fullname": "aton.phys.units.mp_uma", "modulename": "aton.phys.units", "qualname": "mp_uma", "kind": "variable", "doc": "<p>$m_p$ | proton mass, in uma</p>\n", "default_value": "1.0072764665789"}, {"fullname": "aton.phys.units.mpc2", "modulename": "aton.phys.units", "qualname": "mpc2", "kind": "variable", "doc": "<p>$m_p c^2$ | proton mass energy equivalent, in J</p>\n", "default_value": "1.50327761802e-10"}, {"fullname": "aton.phys.units.mpc2_eV", "modulename": "aton.phys.units", "qualname": "mpc2_eV", "kind": "variable", "doc": "<p>$m_p c^2$ | proton mass energy equivalent, in eV</p>\n", "default_value": "938272089.43"}, {"fullname": "aton.phys.units.mpme", "modulename": "aton.phys.units", "qualname": "mpme", "kind": "variable", "doc": "<p>$m_p/m_e$ | proton-electron mass ratio</p>\n", "default_value": "1836.152673426"}, {"fullname": "aton.phys.units.lCp", "modulename": "aton.phys.units", "qualname": "lCp", "kind": "variable", "doc": "<p>$\\lambda_{C,p}$ | proton Compton wavelength, in $[m]^a$</p>\n", "default_value": "1.3214098536e-15"}, {"fullname": "aton.phys.units.rp", "modulename": "aton.phys.units", "qualname": "rp", "kind": "variable", "doc": "<p>$r_p$ | proton rms charge radius, in m</p>\n", "default_value": "8.4075e-16"}, {"fullname": "aton.phys.units.up", "modulename": "aton.phys.units", "qualname": "up", "kind": "variable", "doc": "<p>$\\mu_p$ | proton magnetic moment, in J\u00b7T$^{-1}$</p>\n\n<hr />\n\n<h3 id=\"neutron\">Neutron</h3>\n", "default_value": "1.41060679545e-26"}, {"fullname": "aton.phys.units.mn", "modulename": "aton.phys.units", "qualname": "mn", "kind": "variable", "doc": "<p>$m_n$ | neutron mass, in kg</p>\n", "default_value": "1.67492750056e-27"}, {"fullname": "aton.phys.units.mn_uma", "modulename": "aton.phys.units", "qualname": "mn_uma", "kind": "variable", "doc": "<p>$m_n$ | neutron mass, in uma</p>\n", "default_value": "1.00866491606"}, {"fullname": "aton.phys.units.mnc2", "modulename": "aton.phys.units", "qualname": "mnc2", "kind": "variable", "doc": "<p>$m_n c^2$ | neutron mass energy equivalent, in J</p>\n", "default_value": "1.50534976514e-10"}, {"fullname": "aton.phys.units.mnc2_eV", "modulename": "aton.phys.units", "qualname": "mnc2_eV", "kind": "variable", "doc": "<p>$m_n c^2$ | neutron mass energy equivalent, in eV</p>\n", "default_value": "939565421.94"}, {"fullname": "aton.phys.units.lCn", "modulename": "aton.phys.units", "qualname": "lCn", "kind": "variable", "doc": "<p>$\\lambda_{C,n}$ | neutron compton wavelength, in $[m]^a$</p>\n", "default_value": "1.31959090382e-15"}, {"fullname": "aton.phys.units.un", "modulename": "aton.phys.units", "qualname": "un", "kind": "variable", "doc": "<p>$\\mu_n$ | neutron magnetic moment, in J\u00b7T$^{-1}$</p>\n\n<hr />\n\n<h3 id=\"deuteron\">Deuteron</h3>\n", "default_value": "-9.6623653e-27"}, {"fullname": "aton.phys.units.md", "modulename": "aton.phys.units", "qualname": "md", "kind": "variable", "doc": "<p>$m_d$ | deuteron mass, in kg</p>\n", "default_value": "3.3435837768e-27"}, {"fullname": "aton.phys.units.md_uma", "modulename": "aton.phys.units", "qualname": "md_uma", "kind": "variable", "doc": "<p>$m_d$ | deuteron mass, in uma</p>\n", "default_value": "2.013553212544"}, {"fullname": "aton.phys.units.mdc2", "modulename": "aton.phys.units", "qualname": "mdc2", "kind": "variable", "doc": "<p>$m_d c^2$ | deuteron mass energy equivalent, in J</p>\n", "default_value": "3.00506323491e-10"}, {"fullname": "aton.phys.units.mdc2_eV", "modulename": "aton.phys.units", "qualname": "mdc2_eV", "kind": "variable", "doc": "<p>$m_d c^2$ | deuteron mass energy equivalent, in eV</p>\n", "default_value": "1875612945"}, {"fullname": "aton.phys.units.rd", "modulename": "aton.phys.units", "qualname": "rd", "kind": "variable", "doc": "<p>$r_d$ | deuteron rms charge radius, in m</p>\n", "default_value": "2.12778e-15"}, {"fullname": "aton.phys.units.ud", "modulename": "aton.phys.units", "qualname": "ud", "kind": "variable", "doc": "<p>$\\mu_d$ | deuteron magnetic moment, in J\u00b7T$^{-1}$</p>\n\n<hr />\n\n<h3 id=\"alpha-particle\">Alpha particle</h3>\n", "default_value": "4.330735087e-27"}, {"fullname": "aton.phys.units.ma", "modulename": "aton.phys.units", "qualname": "ma", "kind": "variable", "doc": "<p>$m_\\alpha$ | alpha particle mass, in kg</p>\n", "default_value": "6.644657345e-27"}, {"fullname": "aton.phys.units.mac2", "modulename": "aton.phys.units", "qualname": "mac2", "kind": "variable", "doc": "<p>$m_\\alpha$ | alpha particle mass energy equivalent, in J</p>\n", "default_value": "5.9719201997e-10"}, {"fullname": "aton.phys.units.mac2_eV", "modulename": "aton.phys.units", "qualname": "mac2_eV", "kind": "variable", "doc": "<p>$m_\\alpha$ | alpha particle mass energy equivalent, in eV</p>\n", "default_value": "3727379411.8"}, {"fullname": "aton.phys.units.ra", "modulename": "aton.phys.units", "qualname": "ra", "kind": "variable", "doc": "<p>$r_\\alpha$ | alpha particle rms charge radius, in m</p>\n\n<hr />\n\n<h2 id=\"physicochemical\">Physicochemical</h2>\n", "default_value": "1.6785e-15"}, {"fullname": "aton.phys.units.NA", "modulename": "aton.phys.units", "qualname": "NA", "kind": "variable", "doc": "<p>$N_A$ | Avogadro constant, in mol$^{-1}$</p>\n", "default_value": "6.02214076e+23"}, {"fullname": "aton.phys.units.k", "modulename": "aton.phys.units", "qualname": "k", "kind": "variable", "doc": "<p>$k$ | Boltzmann constant, in J\u00b7K$^{-1}$</p>\n", "default_value": "1.380649e-23"}, {"fullname": "aton.phys.units.k_eV", "modulename": "aton.phys.units", "qualname": "k_eV", "kind": "variable", "doc": "<p>$k$ | Boltzmann constant, in eV\u00b7K$^{-1}$</p>\n", "default_value": "8.617333262e-05"}, {"fullname": "aton.phys.units.mu", "modulename": "aton.phys.units", "qualname": "mu", "kind": "variable", "doc": "<p>$m_u$ | atomic mass constant / unified atomic mass unit, in kg ($\\frac{1}{12}m(^{12}C)$)</p>\n", "default_value": "1.66053906892e-27"}, {"fullname": "aton.phys.units.muc2", "modulename": "aton.phys.units", "qualname": "muc2", "kind": "variable", "doc": "<p>$m_u c^2$ | atomic mass constant energy equivalent, in J</p>\n", "default_value": "1.49241808768e-10"}, {"fullname": "aton.phys.units.muc2_eV", "modulename": "aton.phys.units", "qualname": "muc2_eV", "kind": "variable", "doc": "<p>$m_u c^2$ | atomic mass constant energy equivalent, in eV</p>\n", "default_value": "931494103.72"}, {"fullname": "aton.phys.units.R", "modulename": "aton.phys.units", "qualname": "R", "kind": "variable", "doc": "<p>$R$ | molar gas constant, in J\u00b7mol$^{-1}$K$^{-1}$ ($N_A k$)</p>\n", "default_value": "8.314462618"}, {"fullname": "aton.phys.units.F", "modulename": "aton.phys.units", "qualname": "F", "kind": "variable", "doc": "<p>$F$ | Faraday constant, in C\u00b7mol$^{-1}$ ($N_A e$)</p>\n", "default_value": "96485.33212"}, {"fullname": "aton.phys.units.s", "modulename": "aton.phys.units", "qualname": "s", "kind": "variable", "doc": "<p>$\\sigma$ | Stefan-Boltzmann constant, in W\u00b7m$^{-2}$\u00b7K$^{-4}$ ($(\\pi^2/60)k^4 /\\hbar^3 c^2$)</p>\n", "default_value": "5.670374419e-08"}, {"fullname": "aton.qrotor", "modulename": "aton.qrotor", "kind": "module", "doc": "<h1 id=\"qrotor\">QRotor</h1>\n\n<p>The QRotor module is used to study molecular rotations,\nsuch as those of methyl and amine groups.\nIt can calculate their quantum energy levels and wavefunctions,\nalong with excitations and tunnel splittings.\nThese quantum systems are represented by the <code>qrotor.System()</code> object.</p>\n\n<p>QRotor can obtain custom potentials from DFT,\nwhich are used to solve the quantum system.</p>\n\n<p>This module uses meV as the default unit in the calculations.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.qrotor.system</code></td>\n  <td>Definition of the quantum <code>System</code> object</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.systems</code></td>\n  <td>Functions to manage several System objects, such as a list of systems</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.rotate</code></td>\n  <td>Rotate specific atoms from structural files</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.constants</code></td>\n  <td>Common bond lengths and inertias</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.potential</code></td>\n  <td>Potential definitions and loading functions</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.solve</code></td>\n  <td>Solve rotation eigenvalues and eigenvectors</td>\n</tr>\n<tr>\n  <td><code>aton.qrotor.plot</code></td>\n  <td>Plotting functions</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<h2 id=\"solving-quantum-rotational-systems\">Solving quantum rotational systems</h2>\n\n<p>A basic calculation of the eigenvalues for a zero potential goes as follows:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">aton.qrotor</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">qr</span>\n<span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">System</span><span class=\"p\">()</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">gridsize</span> <span class=\"o\">=</span> <span class=\"mi\">200000</span>  <span class=\"c1\"># Size of the potential grid</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>  <span class=\"c1\"># Rotational inertia</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">potential_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;zero&#39;</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"p\">()</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">eigenvalues</span>\n<span class=\"c1\"># [0.0, 1.0, 1.0, 4.0, 4.0, 9.0, 9.0, ...]  # approx values</span>\n</code></pre>\n</div>\n\n<p>The accuracy of the calculation increases with bigger gridsizes,\nbut note that the runtime increases exponentially.</p>\n\n<p>The same calculation can be performed for a methyl group,\nin a cosine potential of amplitude 30 meV:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">aton.qrotor</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">qr</span>\n<span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">System</span><span class=\"p\">()</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">gridsize</span> <span class=\"o\">=</span> <span class=\"mi\">200000</span>  <span class=\"c1\"># Size of the potential grid</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">B_CH3</span>  <span class=\"c1\"># Rotational inertia of a methyl group</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">potential_name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cosine&#39;</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">potential_constants</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>  <span class=\"c1\"># Offset, max, freq, phase (for cos pot.)</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"p\">()</span>\n<span class=\"c1\"># Plot potential and eigenvalues</span>\n<span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">energies</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n<span class=\"c1\"># Plot the first wavefunctions</span>\n<span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">wavefunction</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">,</span> <span class=\"n\">levels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">square</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"custom-potentials-from-dft\">Custom potentials from DFT</h2>\n\n<p>QRotor can be used to obtain custom rotational potentials from DFT calculations.\nUsing Quantum ESPRESSO, running an SCF calculation for a methyl rotation every 10 degrees:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">aton.qrotor</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">qr</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">api</span>\n<span class=\"c1\"># Approx crystal positions of the atoms to rotate</span>\n<span class=\"n\">atoms</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">&#39;1.101   1.204   1.307&#39;</span>\n    <span class=\"s1\">&#39;2.102   2.205   2.308&#39;</span>\n    <span class=\"s1\">&#39;3.103   3.206   3.309&#39;</span>\n<span class=\"p\">]</span>\n<span class=\"c1\"># Create the input SCF files, saving the filenames to a list</span>\n<span class=\"n\">scf_files</span> <span class=\"o\">=</span> <span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"o\">.</span><span class=\"n\">structure_qe</span><span class=\"p\">(</span><span class=\"s1\">&#39;molecule.in&#39;</span><span class=\"p\">,</span> <span class=\"n\">positions</span><span class=\"o\">=</span><span class=\"n\">atoms</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">repeat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Run the Quantum ESPRESSO calculations</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">slurm</span><span class=\"o\">.</span><span class=\"n\">sbatch</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"o\">=</span><span class=\"n\">scf_files</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>To load the calculated potential to a QRotor System,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Compile a &#39;potential.csv&#39; file with the calculated potential as a function of the angle</span>\n<span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">potential</span><span class=\"o\">.</span><span class=\"n\">from_qe</span><span class=\"p\">()</span>\n<span class=\"c1\"># Load to the system</span>\n<span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">potential</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">()</span>\n<span class=\"c1\"># Solve the system, interpolating to a bigger gridsize</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">B_CH3</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"mi\">200000</span><span class=\"p\">)</span>\n<span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">energies</span><span class=\"p\">(</span><span class=\"n\">system</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"tunnel-splittings-and-excitations\">Tunnel splittings and excitations</h2>\n\n<p>Tunnel splittings, excitations and energy level degeneracy\nbelow the potential maximum are also calculated upon solving the system:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"p\">()</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">splittings</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">excitations</span>\n<span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">deg</span>\n</code></pre>\n</div>\n\n<p>An integer <code>System.deg</code> degeneracy (e.g. 3 for methyls)\nindicates that the energy levels have been properly estimated.\nHowever, if the degeneracy is a float instead,\nplease check the splittings and excitations manually from the system eigenvalues.</p>\n\n<p>To export the energies and the tunnel splittings of several calculations to a CSV file:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">calculations</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">system1</span><span class=\"p\">,</span> <span class=\"n\">system2</span><span class=\"p\">,</span> <span class=\"n\">system3</span><span class=\"p\">]</span>\n<span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">systems</span><span class=\"o\">.</span><span class=\"n\">save_energies</span><span class=\"p\">(</span><span class=\"n\">calculations</span><span class=\"p\">)</span>\n<span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">systems</span><span class=\"o\">.</span><span class=\"n\">save_splittings</span><span class=\"p\">(</span><span class=\"n\">calculations</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Excitations are calculated using the mean for each energy level\nwith respect to the ground state.\nTunnel splittings for each level are calculated as the difference between A and E,\nconsidering the mean of the eigenvalues for each sublevel.\nSee <a href=\"https://doi.org/10.1119/1.1538575\">R. M. Dimeo, American Journal of Physics 71, 885\u2013893 (2003)</a>\nand <a href=\"https://doi.org/10.1016/S0079-6565(99)00016-3\">A. J. Horsewill, Progress in Nuclear Magnetic Resonance Spectroscopy 35, 359\u2013389 (1999)</a>\nfor further reference.</p>\n\n<p>Check the API documentation for more details.</p>\n"}, {"fullname": "aton.qrotor.constants", "modulename": "aton.qrotor.constants", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Common constants and default inertia values used in the QRotor subpackage.</p>\n\n<p>Bond lengths and angles were obtained from MAPbI3, see\n<a href=\"https://doi.org/10.1021/acs.cgd.3c01112\">K. Dru\u017cbicki <em>et al</em>., Crystal Growth &amp; Design 24, 391\u2013404 (2024)</a>.</p>\n\n<hr />\n"}, {"fullname": "aton.qrotor.constants.distance_CH", "modulename": "aton.qrotor.constants", "qualname": "distance_CH", "kind": "variable", "doc": "<p>Distance of the C-H bond, in Angstroms.</p>\n", "default_value": "1.09285"}, {"fullname": "aton.qrotor.constants.distance_NH", "modulename": "aton.qrotor.constants", "qualname": "distance_NH", "kind": "variable", "doc": "<p>Distance of the N-H bond, in Angstroms.</p>\n", "default_value": "1.040263"}, {"fullname": "aton.qrotor.constants.angle_CH_external", "modulename": "aton.qrotor.constants", "qualname": "angle_CH_external", "kind": "variable", "doc": "<p>External angle of the X-C-H bond, in degrees.</p>\n", "default_value": "108.7223"}, {"fullname": "aton.qrotor.constants.angle_NH_external", "modulename": "aton.qrotor.constants", "qualname": "angle_NH_external", "kind": "variable", "doc": "<p>External angle of the X-N-H bond, in degrees.</p>\n", "default_value": "111.29016"}, {"fullname": "aton.qrotor.constants.angle_CH", "modulename": "aton.qrotor.constants", "qualname": "angle_CH", "kind": "variable", "doc": "<p>Internal angle of the X-C-H bond, in degrees.</p>\n", "default_value": "71.2777"}, {"fullname": "aton.qrotor.constants.angle_NH", "modulename": "aton.qrotor.constants", "qualname": "angle_NH", "kind": "variable", "doc": "<p>Internal angle of the X-N-H bond, in degrees.</p>\n", "default_value": "68.70984"}, {"fullname": "aton.qrotor.constants.r_CH", "modulename": "aton.qrotor.constants", "qualname": "r_CH", "kind": "variable", "doc": "<p>Rotation radius of the methyl group, in meters.</p>\n", "default_value": "np.float64(1.0350223020441665e-10)"}, {"fullname": "aton.qrotor.constants.r_NH", "modulename": "aton.qrotor.constants", "qualname": "r_NH", "kind": "variable", "doc": "<p>Rotation radius of the amine group, in meters.</p>\n", "default_value": "np.float64(9.69268793902999e-11)"}, {"fullname": "aton.qrotor.constants.I_CH3", "modulename": "aton.qrotor.constants", "qualname": "I_CH3", "kind": "variable", "doc": "<p>Inertia of CH3, in kg\u00b7m^2.</p>\n", "default_value": "np.float64(5.37903596799128e-47)"}, {"fullname": "aton.qrotor.constants.I_CD3", "modulename": "aton.qrotor.constants", "qualname": "I_CD3", "kind": "variable", "doc": "<p>Inertia of CD3, in kg\u00b7m^2.</p>\n", "default_value": "np.float64(1.0748582164136045e-46)"}, {"fullname": "aton.qrotor.constants.I_NH3", "modulename": "aton.qrotor.constants", "qualname": "I_NH3", "kind": "variable", "doc": "<p>Inertia of NH3, in kg\u00b7m^2.</p>\n", "default_value": "np.float64(4.717299973303422e-47)"}, {"fullname": "aton.qrotor.constants.I_ND3", "modulename": "aton.qrotor.constants", "qualname": "I_ND3", "kind": "variable", "doc": "<p>Inertia of ND3, in kg\u00b7m^2.</p>\n", "default_value": "np.float64(9.426277618824576e-47)"}, {"fullname": "aton.qrotor.constants.B_CH3", "modulename": "aton.qrotor.constants", "qualname": "B_CH3", "kind": "variable", "doc": "<p>Rotational energy of CH3, in meV\u00b7s/kg\u00b7m^2.</p>\n", "default_value": "np.float64(0.6452195002679675)"}, {"fullname": "aton.qrotor.constants.B_CD3", "modulename": "aton.qrotor.constants", "qualname": "B_CD3", "kind": "variable", "doc": "<p>Rotational energy of CD3, in meV\u00b7s/kg\u00b7m^2.</p>\n", "default_value": "np.float64(0.32289457773984676)"}, {"fullname": "aton.qrotor.constants.B_NH3", "modulename": "aton.qrotor.constants", "qualname": "B_NH3", "kind": "variable", "doc": "<p>Rotational energy of NH3, in meV\u00b7s/kg\u00b7m^2.</p>\n", "default_value": "np.float64(0.7357299554474442)"}, {"fullname": "aton.qrotor.constants.B_ND3", "modulename": "aton.qrotor.constants", "qualname": "B_ND3", "kind": "variable", "doc": "<p>Rotational energy of ND3, in meV\u00b7s/kg\u00b7m^2.</p>\n", "default_value": "np.float64(0.36818976053280467)"}, {"fullname": "aton.qrotor.constants.constants_titov2023", "modulename": "aton.qrotor.constants", "qualname": "constants_titov2023", "kind": "variable", "doc": "<p>Potential constants from\n<a href=\"https://link.aps.org/doi/10.1103/PhysRevMaterials.7.073402\">K. Titov et al., Phys. Rev. Mater. 7, 073402 (2023)</a>\nfor the <code>aton.qrotor.potential.titov2023</code> potential.\nIn meV units.</p>\n", "default_value": "[[2.786, 0.013, -1.5284, -0.0037, -1.2791], [2.6507, 0.0158, -1.4111, -0.0007, -1.2547], [2.1852, 0.0164, -1.0017, 0.0003, -1.2061], [5.9109, 0.0258, -7.0152, -0.0168, 1.0213], [1.4526, 0.0134, -0.3196, 0.0005, -1.1461]]"}, {"fullname": "aton.qrotor.plot", "modulename": "aton.qrotor.plot", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module provides straightforward functions to plot QRotor data.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>potential()</code></td>\n  <td>Potential values as a function of the angle</td>\n</tr>\n<tr>\n  <td><code>energies()</code></td>\n  <td>Calculated eigenvalues</td>\n</tr>\n<tr>\n  <td><code>reduced_energies()</code></td>\n  <td>Reduced energies E/B as a function of the reduced potential V/B</td>\n</tr>\n<tr>\n  <td><code>wavefunction()</code></td>\n  <td>Selected wavefunctions or squared wavefunctions of a system</td>\n</tr>\n<tr>\n  <td><code>splittings()</code></td>\n  <td>Tunnel splitting energies of a list of systems</td>\n</tr>\n<tr>\n  <td><code>convergence()</code></td>\n  <td>Energy convergence</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.qrotor.plot.potential", "modulename": "aton.qrotor.plot", "qualname": "potential", "kind": "function", "doc": "<p>Plot the potential values of <code>data</code> (System object, or list of systems).</p>\n\n<p>Title can be customized with <code>title</code>.\nIf empty, system[0].comment will be used as title if no more comments are present.</p>\n\n<p><code>marker</code> and <code>linestyle</code> can be a Matplotlib string or list of strings.\nOptionally, the Viridis colormap can be used with <code>cm = True</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">linestyle</span><span class=\"o\">=</span><span class=\"s1\">&#39;-&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cm</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.plot.energies", "modulename": "aton.qrotor.plot", "qualname": "energies", "kind": "function", "doc": "<p>Plot the eigenvalues of <code>data</code> (System or a list of System objects).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.plot.reduced_energies", "modulename": "aton.qrotor.plot", "qualname": "reduced_energies", "kind": "function", "doc": "<p>Plots the reduced energy of the system E/B vs the reduced potential energy V/B.</p>\n\n<p>Takes a <code>data</code> list of System objects as input.\nAn optional <code>title</code> can be specified.</p>\n\n<p>Optional maximum reduced potential <code>values</code> are plotted\nas vertical lines (floats or ints) or regions\n(lists inside the values list, from min to max).\nA <code>legend</code> of the same len as <code>values</code> can be included.\nThese values are assumed to be divided by B by the user.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">legend</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.plot.wavefunction", "modulename": "aton.qrotor.plot", "qualname": "wavefunction", "kind": "function", "doc": "<p>Plot the wavefunction of a <code>system</code> for the specified <code>levels</code>.</p>\n\n<p>Wavefunctions are squared by default, showing the probabilities;\nTo show the actual wavefunctions, set <code>square = False</code>.</p>\n\n<p><code>levels</code> can be a list of indexes, or the number of levels to plot.</p>\n\n<p>Specific wavefunctions can be overlapped with <code>overlap</code> as a list with the target indexes.\nThe <code>overlap</code> value can also be the max number of wavefunctions to add.\nAll found wavefunctions can be added together with <code>overlap = True</code>;\nbut note that this overlap is limited by the number of System.searched_E,\nthat must be specified before solving the system.\nSetting <code>overlap</code> will ignore the <code>levels</code> argument.</p>\n\n<p>Set <code>yticks = True</code> to plot the wavefunction yticks.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">square</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">levels</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">overlap</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">yticks</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.plot.splittings", "modulename": "aton.qrotor.plot", "qualname": "splittings", "kind": "function", "doc": "<p>Plot the tunnel splitting energies of a <code>data</code> list of systems.</p>\n\n<p>The different <code>System.comment</code> are shown in the horizontal axis.\nAn optional <code>title</code> can be specified.\nDefault units shown are $\\mu$eV (<code>'ueV'</code>).\nAvailable units are: <code>'ueV'</code>, <code>'meV'</code>, <code>'Ry'</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">units</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ueV&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.plot.convergence", "modulename": "aton.qrotor.plot", "qualname": "convergence", "kind": "function", "doc": "<p>Plot the energy convergence of a <code>data</code> list of Systems as a function of the gridsize.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential", "modulename": "aton.qrotor.potential", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains functions to calculate the actual <code>potential_values</code> of the system.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<p>User functions:</p>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>save()</code></td>\n  <td>Save the potential from a System to a data file</td>\n</tr>\n<tr>\n  <td><code>load()</code></td>\n  <td>Load a System with a custom potential from a potential data file</td>\n</tr>\n<tr>\n  <td><code>from_qe()</code></td>\n  <td>Creates a potential data file from Quantum ESPRESSO outputs</td>\n</tr>\n<tr>\n  <td><code>merge()</code></td>\n  <td>Add and subtract potentials from systems</td>\n</tr>\n<tr>\n  <td><code>scale()</code></td>\n  <td>Scale potential values by a given factor</td>\n</tr>\n</tbody>\n</table>\n\n<p>To solve the system, optionally interpolating to a new gridsize, use <code>System.solve(gridsize)</code>.<br />\nHowever, if you just want to solve or interpolate the potential, check <code>aton.qrotor.solve.potential()</code>.\nThis will run several checks before applying the following functions automatically:</p>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>interpolate()</code></td>\n  <td>Interpolates the current <code>System.potential_values</code> to a new <code>System.gridsize</code></td>\n</tr>\n<tr>\n  <td><code>solve()</code></td>\n  <td>Solve the potential values based on the potential name</td>\n</tr>\n</tbody>\n</table>\n\n<p>A synthetic potential can be created by specifying its name in <code>System.potential_name</code>,\nalong with the corresponding <code>System.potential_constants</code> if required.\nAvailable potentials are:</p>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>zero()</code></td>\n  <td>Zero potential</td>\n</tr>\n<tr>\n  <td><code>sine()</code></td>\n  <td>Sine potential</td>\n</tr>\n<tr>\n  <td><code>cosine()</code></td>\n  <td>Cosine potential</td>\n</tr>\n<tr>\n  <td><code>titov2023()</code></td>\n  <td>Potential of the hindered methyl rotor, as in titov2023.</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.qrotor.potential.save", "modulename": "aton.qrotor.potential", "qualname": "save", "kind": "function", "doc": "<p>Save the rotational potential from a <code>system</code> to a CSV file.</p>\n\n<p>The output <code>filepath</code> contains angle and energy columns,\nin degrees and meVs by default.\nThe units can be changed with <code>angle</code> and <code>energy</code>,\nbut only change these defaults if you know what you are doing.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;potential.csv&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">angle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;deg&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">energy</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;meV&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.load", "modulename": "aton.qrotor.potential", "qualname": "load", "kind": "function", "doc": "<p>Read a rotational potential energy datafile.</p>\n\n<p>The input file in <code>filepath</code> should contain two columns with angle and potential energy values.\nDegrees and meV are assumed as default units unless stated in <code>angle</code> and <code>energy</code>.\nUnits will be converted automatically to radians and meV.</p>\n\n<p>An optional <code>comment</code> can be included in the output System.\nSet to the parent folder name by default.</p>\n\n<p>A previous System object can be provided through <code>system</code> to update its potential values.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;potential.csv&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">angle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;deg&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">energy</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;meV&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.from_qe", "modulename": "aton.qrotor.potential", "qualname": "from_qe", "kind": "function", "doc": "<p>Compiles a rotational potential CSV file from Quantum ESPRESSO outputs,\ncreated with <code>aton.qrotor.rotate.structure_qe()</code>.</p>\n\n<p>The angle in degrees is extracted from the output filenames,\nwhich must follow <code>whatever_ANGLE.out</code>.</p>\n\n<p>Outputs from SCF calculations must be located in the provided <code>folder</code> (CWD if None).\nFiles can be filtered by those containing the specified <code>include</code> filters,\nexcluding those containing any string from the <code>exclude</code> list. \nThe output <code>filepath</code> name is <code>'potential.dat'</code> by default.</p>\n\n<p>Energy values are saved to meV by dafault, unless specified in <code>energy</code>.\nOnly change the energy units if you know what you are doing;\nremember that default energy units in QRotor are meV!</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">folder</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;potential.csv&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">include</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;.out&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">exclude</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;slurm-&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">energy</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;meV&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.merge", "modulename": "aton.qrotor.potential", "qualname": "merge", "kind": "function", "doc": "<p>Add or subtract potentials from different systems.</p>\n\n<p>Adds the potential values from the systems in <code>add</code>,\nremoves the ones from <code>subtract</code>.\nAll systems will be interpolated to the bigger gridsize if needed.</p>\n\n<p>A copy of the first System will be returned with the resulting potential values,\nwith an optional <code>comment</code> if indicated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">add</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">subtract</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.scale", "modulename": "aton.qrotor.potential", "qualname": "scale", "kind": "function", "doc": "<p>Returns a copy of <code>system</code> with potential values scaled by a <code>factor</code>.</p>\n\n<p>An optional <code>comment</code> can be included.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>,</span><span class=\"param\">\t<span class=\"n\">factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.interpolate", "modulename": "aton.qrotor.potential", "qualname": "interpolate", "kind": "function", "doc": "<p>Interpolates the current <code>System.potential_values</code>\nto a new grid of size <code>System.gridsize</code>.</p>\n\n<p>This basic function is called by <code>aton.qrotor.solve.potential()</code>,\nwhich is the recommended way to interpolate potentials.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.solve", "modulename": "aton.qrotor.potential", "qualname": "solve", "kind": "function", "doc": "<p>Solves <code>System.potential_values</code>\naccording to the <code>System.potential_name</code>,\nreturning the new <code>potential_values</code>.\nAvaliable potential names are <code>zero</code>, <code>sine</code> and <code>titov2023</code>.</p>\n\n<p>If <code>System.potential_name</code> is not present or not recognised,\nthe current <code>System.potential_values</code> are used.</p>\n\n<p>This basic function is called by <code>aton.qrotor.solve.potential()</code>,\nwhich is the recommended way to solve potentials.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.zero", "modulename": "aton.qrotor.potential", "qualname": "zero", "kind": "function", "doc": "<p>Zero potential.</p>\n\n<p>$V(x) = 0$</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.sine", "modulename": "aton.qrotor.potential", "qualname": "sine", "kind": "function", "doc": "<p>Sine potential.</p>\n\n<p>$V(x) = C_0 + \\frac{C_1}{2} sin(x C_2 + C_3)$<br />\nWith $C_0$ as the potential offset,\n$C_1$ as the max potential value (without considering the offset),\n$C_2$ as the frequency, and $C_3$ as the phase.\nIf no <code>System.potential_constants</code> are provided, defaults to $sin(3x)$</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.cosine", "modulename": "aton.qrotor.potential", "qualname": "cosine", "kind": "function", "doc": "<p>Cosine potential.</p>\n\n<p>$V(x) = C_0 + \\frac{C_1}{2} cos(x C_2 + C_3)$<br />\nWith $C_0$ as the potential offset,\n$C_1$ as the max potential value (without considering the offset),\n$C_2$ as the frequency, and $C_3$ as the phase.\nIf no <code>System.potential_constants</code> are provided, defaults to $cos(3x)$</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.potential.titov2023", "modulename": "aton.qrotor.potential", "qualname": "titov2023", "kind": "function", "doc": "<p>Potential energy function of the hindered methyl rotor, from\n<a href=\"https://link.aps.org/doi/10.1103/PhysRevMaterials.7.073402\">K. Titov et al., Phys. Rev. Mater. 7, 073402 (2023)</a>.  </p>\n\n<p>$V(x) = C_0 + C_1 sin(3x) + C_2 cos(3x) + C_3 sin(6x) + C_4 cos(6x)$<br />\nDefault constants are <code>aton.qrotor.constants.constants_titov2023</code>[0].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.rotate", "modulename": "aton.qrotor.rotate", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This submodule contains tools to rotate molecular structures.\nWorks with Quantum ESPRESSO input files.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>structure_qe()</code></td>\n  <td>Rotate specific atoms from a Quantum ESPRESSO input file</td>\n</tr>\n<tr>\n  <td><code>rotate_coords()</code></td>\n  <td>Rotate a specific list of coordinates</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.qrotor.rotate.structure_qe", "modulename": "aton.qrotor.rotate", "qualname": "structure_qe", "kind": "function", "doc": "<p>Rotates atoms from a Quantum ESPRESSO input file.</p>\n\n<p>Takes a <code>filepath</code> with a molecular structure, and three or more atomic <code>positions</code> (list).\nThese input positions can be approximate, and are used to identify the target atoms.\nThe decimal precision in the search for these positions is controlled by <code>precision</code>.</p>\n\n<p>It rotates the atoms by a specific <code>angle</code> in degrees.\nAdditionally, if <code>repeat = True</code> it repeats the same rotation over the whole circunference.\nFinally, it writes the rotated structure(s) to a new structural file(s).\nReturns a list with the output filename(s).</p>\n\n<p>By default, the rotation axis is defined by the perpendicular vector\npassing through the geometrical center of the first three points.\nTo override this and instead use the vector between the first two atoms\nas the rotation axis, set <code>use_centroid = False</code>.</p>\n\n<p><strong>WARNING: The <code>positions</code> list is order-sensitive</strong>.\nIf you rotate more than one chemical group in a structure,\nbe sure to follow the same direction for each group (e.g. all clockwise)\nto ensure that all axes of rotation point in the same direction.</p>\n\n<p>To debug, <code>show_axis = True</code> adds two additional helium atoms as the rotation vector.</p>\n\n<p>The resulting rotational potential can be compiled to a CSV file with <code>aton.qrotor.potential.from_qe()</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">positions</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">angle</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">repeat</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">precision</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">use_centroid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">show_axis</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.rotate.rotate_coords", "modulename": "aton.qrotor.rotate", "qualname": "rotate_coords", "kind": "function", "doc": "<p>Rotates geometrical coordinates.</p>\n\n<p>Takes a list of atomic <code>positions</code> in cartesian coordinates, as\n<code>[[x1,y1,z1], [x2,y2,z2], [x3,y3,z3], [etc]</code>.\nThen rotates said coordinates by a given <code>angle</code> in degrees.\nReturns a list with the updated positions.</p>\n\n<p>By default, the rotation vector is defined by the perpendicular\npassing through the geometrical center of the first three points.\nTo override this and use the vector between the first two atoms\nas the rotation axis, set <code>use_centroid = False</code>.</p>\n\n<p><strong>WARNING: The <code>positions</code> list is order-sensitive</strong>.\nIf you rotate more than one chemical group in a structure,\nbe sure to follow the same direction for each group (e.g. all clockwise)\nto ensure that all rotation vectors point in the same direction.</p>\n\n<p>If <code>show_axis = True</code> it returns two additional coordinates at the end of the list,\nwith the centroid and the rotation vector. Only works with <code>use_centroid = True</code>.</p>\n\n<p>The rotation uses Rodrigues' rotation formula,\npowered by <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.transform.Rotation.from_rotvec.html#scipy.spatial.transform.Rotation.from_rotvec\"><code>scipy.spatial.transform.Rotation.from_rotvec</code></a>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">positions</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">angle</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">use_centroid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">show_axis</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.solve", "modulename": "aton.qrotor.solve", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module is used to solve any given quantum system.</p>\n\n<p>Although the functions of this module can be used independently,\nit is highly recommended to use the <code>System.solve()</code> method instead,\nwhich does all the solving automatically (see <code>aton.qrotor.system.System.solve()</code>).\nThis documentation page is left for reference and for advanced users.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>energies()</code></td>\n  <td>Solve the quantum system, including eigenvalues and eigenvectors</td>\n</tr>\n<tr>\n  <td><code>potential()</code></td>\n  <td>Solve the potential values of the system</td>\n</tr>\n<tr>\n  <td><code>schrodinger()</code></td>\n  <td>Solve the Schr\u00f6diger equation for the system</td>\n</tr>\n<tr>\n  <td><code>hamiltonian_matrix()</code></td>\n  <td>Calculate the hamiltonian matrix of the system</td>\n</tr>\n<tr>\n  <td><code>laplacian_matrix()</code></td>\n  <td>Calculate the second derivative matrix for a given grid</td>\n</tr>\n<tr>\n  <td><code>excitations()</code></td>\n  <td>Get excitation levels and tunnel splitting energies</td>\n</tr>\n<tr>\n  <td><code>E_levels</code></td>\n  <td>Group a list of degenerated eigenvalues by energy levels</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.qrotor.solve.energies", "modulename": "aton.qrotor.solve", "qualname": "energies", "kind": "function", "doc": "<p>Solves the quantum <code>system</code>.</p>\n\n<p>This includes solving the potential, the eigenvalues and the eigenvectors.</p>\n\n<p>The resulting System object is saved with pickle to <code>filename</code> if specified.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.solve.potential", "modulename": "aton.qrotor.solve", "qualname": "potential", "kind": "function", "doc": "<p>Solves the potential values of the <code>system</code>.</p>\n\n<p>Creates a grid if not yet present.\nIt also interpolates the potential if <code>system.gridsize</code> is larger than the current grid;\noptionally, an alternative <code>gridsize</code> can be specified.</p>\n\n<p>It then solves the potential according to the potential name.\nThen it applies extra operations, such as removing the potential offset\nif <code>system.correct_potential_offset = True</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>,</span><span class=\"param\">\t<span class=\"n\">gridsize</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.solve.schrodinger", "modulename": "aton.qrotor.solve", "qualname": "schrodinger", "kind": "function", "doc": "<p>Solves the Schr\u00f6dinger equation for a given <code>system</code>.</p>\n\n<p>Uses ARPACK in shift-inverse mode to solve the hamiltonian sparse matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.solve.hamiltonian_matrix", "modulename": "aton.qrotor.solve", "qualname": "hamiltonian_matrix", "kind": "function", "doc": "<p>Calculates the Hamiltonian sparse matrix for a given <code>system</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.solve.laplacian_matrix", "modulename": "aton.qrotor.solve", "qualname": "laplacian_matrix", "kind": "function", "doc": "<p>Calculates the Laplacian (second derivative) matrix for a given <code>grid</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">grid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.solve.excitations", "modulename": "aton.qrotor.solve", "qualname": "excitations", "kind": "function", "doc": "<p>Calculate the excitation levels and the tunnel splitting energies of a system.</p>\n\n<p>Automatically detects degenerated energy levels by looking at significant jumps\nbetween consecutive eigenvalues. Within each level, finds two subgroups\nto calculate tunnel splittings. Stops when energies reach the maximum potential.</p>\n\n<p>Excitations are calculated as the energy difference between the mean energy of the\nground state level and the mean energy of each excited level.</p>\n\n<p>Tunnel splittings are calculated as the difference between the medians of\nthe two subgroups within each degenerate level.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">system</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">qrotor</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">System</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.solve.E_levels", "modulename": "aton.qrotor.solve", "qualname": "E_levels", "kind": "function", "doc": "<p>Group a list of degenerated eigenvalues by energy levels.</p>\n\n<p>Automatically detects degenerated energy levels by\nlooking at significant jumps between consecutive eigenvalues.</p>\n\n<p>An optional <code>vmax</code> can be specified,\nto avoid including too many eigenvalues\nabove a certain potential maximum.\nOnly two more eigenvalues are considered after <code>vmax</code>,\nto properly detect energy levels around the maximum.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">levels</span><span class=\"p\">,</span> <span class=\"n\">deg</span> <span class=\"o\">=</span> <span class=\"n\">qr</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"o\">.</span><span class=\"n\">E_levels</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.1</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span> <span class=\"mf\">1.3</span><span class=\"p\">,</span> <span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"mf\">5.5</span><span class=\"p\">,</span> <span class=\"mf\">5.6</span><span class=\"p\">]))</span>\n<span class=\"n\">levels</span>  <span class=\"c1\"># [array([1.1, 1.2, 1.3]), array([5.4, 5.5, 5.6])]</span>\n<span class=\"n\">deg</span>  <span class=\"c1\"># 3</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">eigenvalues</span>, </span><span class=\"param\"><span class=\"n\">vmax</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.system", "modulename": "aton.qrotor.system", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>The <code>System</code> object contains all the information needed for a single QRotor calculation.\nThis class can be loaded directly as <code>aton.qrotor.System()</code>.</p>\n\n<hr />\n"}, {"fullname": "aton.qrotor.system.System", "modulename": "aton.qrotor.system", "qualname": "System", "kind": "class", "doc": "<p>Quantum system.</p>\n\n<p>Contains all the data for a single QRotor calculation, with both inputs and outputs.</p>\n\n<p>Energy units are in meV and angles are in radians, unless stated otherwise.</p>\n"}, {"fullname": "aton.qrotor.system.System.__init__", "modulename": "aton.qrotor.system", "qualname": "System.__init__", "kind": "function", "doc": "<p>A new quantum system can be instantiated as <code>system = aton.qrotor.System()</code>.\nThis new system will contain the default values listed above.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">searched_E</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">21</span>,</span><span class=\"param\">\t<span class=\"n\">correct_potential_offset</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">save_eigenvectors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CH3&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">B</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">(</span><span class=\"mf\">0.6452195002679675</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">gridsize</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">200000</span>,</span><span class=\"param\">\t<span class=\"n\">grid</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">potential_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">potential_constants</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">potential_values</span><span class=\"o\">=</span><span class=\"p\">[]</span></span>)</span>"}, {"fullname": "aton.qrotor.system.System.version", "modulename": "aton.qrotor.system", "qualname": "System.version", "kind": "variable", "doc": "<p>Version of the package used to generate the data.</p>\n"}, {"fullname": "aton.qrotor.system.System.comment", "modulename": "aton.qrotor.system", "qualname": "System.comment", "kind": "variable", "doc": "<p>Custom comment for the dataset.</p>\n", "annotation": ": str"}, {"fullname": "aton.qrotor.system.System.searched_E", "modulename": "aton.qrotor.system", "qualname": "System.searched_E", "kind": "variable", "doc": "<p>Number of energy eigenvalues to be searched.</p>\n", "annotation": ": int"}, {"fullname": "aton.qrotor.system.System.correct_potential_offset", "modulename": "aton.qrotor.system", "qualname": "System.correct_potential_offset", "kind": "variable", "doc": "<p>Correct the potential offset as <code>V - min(V)</code> or not.</p>\n", "annotation": ": bool"}, {"fullname": "aton.qrotor.system.System.save_eigenvectors", "modulename": "aton.qrotor.system", "qualname": "System.save_eigenvectors", "kind": "variable", "doc": "<p>Save or not the eigenvectors. Final file size will be bigger.</p>\n", "annotation": ": bool"}, {"fullname": "aton.qrotor.system.System.group", "modulename": "aton.qrotor.system", "qualname": "System.group", "kind": "variable", "doc": "<p>Chemical group, methyl or amine: <code>'CH3'</code>, <code>'CD3'</code>, <code>'NH3'</code>, <code>'ND3'</code>.</p>\n", "annotation": ": str"}, {"fullname": "aton.qrotor.system.System.B", "modulename": "aton.qrotor.system", "qualname": "System.B", "kind": "variable", "doc": "<p>Rotational inertia, as in $B=\\frac{\\hbar^2}{2I}$.</p>\n", "annotation": ": float"}, {"fullname": "aton.qrotor.system.System.gridsize", "modulename": "aton.qrotor.system", "qualname": "System.gridsize", "kind": "variable", "doc": "<p>Number of points in the grid.</p>\n", "annotation": ": int"}, {"fullname": "aton.qrotor.system.System.grid", "modulename": "aton.qrotor.system", "qualname": "System.grid", "kind": "variable", "doc": "<p>The grid with the points to be used in the calculation.</p>\n\n<p>Can be set automatically over $2 \\pi$ with <code>System.set_grid()</code>.\nUnits must be in radians.</p>\n"}, {"fullname": "aton.qrotor.system.System.potential_name", "modulename": "aton.qrotor.system", "qualname": "System.potential_name", "kind": "variable", "doc": "<p>Name of the desired potential: <code>'zero'</code>, <code>'titov2023'</code>, <code>'test'</code>...\nIf empty or unrecognised, the custom potential values inside <code>System.potential_values</code> will be used.</p>\n", "annotation": ": str"}, {"fullname": "aton.qrotor.system.System.potential_constants", "modulename": "aton.qrotor.system", "qualname": "System.potential_constants", "kind": "variable", "doc": "<p>List of constants to be used in the calculation of the potential energy, in the <code>aton.qrotor.potential</code> module.</p>\n", "annotation": ": list"}, {"fullname": "aton.qrotor.system.System.potential_values", "modulename": "aton.qrotor.system", "qualname": "System.potential_values", "kind": "variable", "doc": "<p>Numpy <a href=\"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html\">ndarray</a> with the potential values for each point in the grid.</p>\n\n<p>Can be calculated with a function available in the <code>qrotor.potential</code> module,\nor loaded externally with the <code>qrotor.potential.load()</code> function.\nPotential energy units must be in meV.</p>\n"}, {"fullname": "aton.qrotor.system.System.potential_offset", "modulename": "aton.qrotor.system", "qualname": "System.potential_offset", "kind": "variable", "doc": "<p><code>min(V)</code> before offset correction when <code>correct_potential_offset = True</code></p>\n", "annotation": ": float"}, {"fullname": "aton.qrotor.system.System.potential_min", "modulename": "aton.qrotor.system", "qualname": "System.potential_min", "kind": "variable", "doc": "<p><code>min(V)</code></p>\n", "annotation": ": float"}, {"fullname": "aton.qrotor.system.System.potential_max", "modulename": "aton.qrotor.system", "qualname": "System.potential_max", "kind": "variable", "doc": "<p><code>max(V)</code></p>\n", "annotation": ": float"}, {"fullname": "aton.qrotor.system.System.eigenvectors", "modulename": "aton.qrotor.system", "qualname": "System.eigenvectors", "kind": "variable", "doc": "<p>Eigenvectors, if <code>save_eigenvectors</code> is True. Beware of the file size.</p>\n"}, {"fullname": "aton.qrotor.system.System.eigenvalues", "modulename": "aton.qrotor.system", "qualname": "System.eigenvalues", "kind": "variable", "doc": "<p>Calculated eigenvalues of the system. In meV.</p>\n"}, {"fullname": "aton.qrotor.system.System.E_levels", "modulename": "aton.qrotor.system", "qualname": "System.E_levels", "kind": "variable", "doc": "<p>List of <code>eigenvalues</code> grouped by energy levels, found below <code>potential_max</code>.</p>\n", "annotation": ": list"}, {"fullname": "aton.qrotor.system.System.deg", "modulename": "aton.qrotor.system", "qualname": "System.deg", "kind": "variable", "doc": "<p>Estimated degeneracy of the <code>E_levels</code> found below <code>potential_max</code>.</p>\n", "annotation": ": float"}, {"fullname": "aton.qrotor.system.System.excitations", "modulename": "aton.qrotor.system", "qualname": "System.excitations", "kind": "variable", "doc": "<p>Torsional excitations, as the difference between each energy level with respect to the ground state.</p>\n\n<p>Considers the means between degenerated eigenvalues for all energy levels below <code>potential_max</code>.</p>\n", "annotation": ": list"}, {"fullname": "aton.qrotor.system.System.splittings", "modulename": "aton.qrotor.system", "qualname": "System.splittings", "kind": "variable", "doc": "<p>Tunnel splitting energies, for every degenerated energy level.</p>\n\n<p>Calculated for all <code>E_levels</code> as the difference between\nthe mean of the eigenvalues from A and the mean of the eigenvalues from E,\nsee <a href=\"https://doi.org/10.1119/1.1538575\">R. M. Dimeo, American Journal of Physics 71, 885\u2013893 (2003)</a>.</p>\n", "annotation": ": list"}, {"fullname": "aton.qrotor.system.System.energy_barrier", "modulename": "aton.qrotor.system", "qualname": "System.energy_barrier", "kind": "variable", "doc": "<p>Activation energy or energy barrier, from the ground torsional state to the top of the potential barrier, <code>max(V) - min(eigenvalues)</code></p>\n", "annotation": ": float"}, {"fullname": "aton.qrotor.system.System.runtime", "modulename": "aton.qrotor.system", "qualname": "System.runtime", "kind": "variable", "doc": "<p>Time taken to solve the eigenvalues.</p>\n", "annotation": ": float"}, {"fullname": "aton.qrotor.system.System.solve", "modulename": "aton.qrotor.system", "qualname": "System.solve", "kind": "function", "doc": "<p>Default method to solve the quantum system.</p>\n\n<p>The potential can be interpolated to a <code>new_gridsize</code>.</p>\n\n<p>Same as running <code>aton.qrotor.solve.energies(System)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_gridsize</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.system.System.change_phase", "modulename": "aton.qrotor.system", "qualname": "System.change_phase", "kind": "function", "doc": "<p>Apply a phase shift to the grid and potential values.</p>\n\n<p>The <code>phase</code> should be a multiple of $\\pi$ (e.g., 3/2 for $3\\pi/2$).\nThe resulting grid will be expressed between $-2\\pi$ and $2\\pi$.</p>\n\n<p>The System is solved immediately after the phase change.\nThis last step ensures that all eigenvalues and wavefunctions are correct.\nYou can override this step with <code>calculate = False</code>,\nbut remember to solve the System later!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">phase</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">calculate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.system.System.set_grid", "modulename": "aton.qrotor.system", "qualname": "System.set_grid", "kind": "function", "doc": "<p>Sets the <code>System.grid</code> to the specified <code>gridsize</code> from 0 to $2\\pi$.</p>\n\n<p>If the system had a previous grid and potential values,\nit will interpolate those values to the new gridsize,\nusing <code>aton.qrotor.potential.interpolate()</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">gridsize</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.system.System.set_group", "modulename": "aton.qrotor.system", "qualname": "System.set_group", "kind": "function", "doc": "<p>Normalise <code>System.group</code> name, and set <code>System.B</code> based on it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">B</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.system.System.reduce_size", "modulename": "aton.qrotor.system", "qualname": "System.reduce_size", "kind": "function", "doc": "<p>Discard data that takes too much space,\nlike eigenvectors, potential values and grids.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.system.System.summary", "modulename": "aton.qrotor.system", "qualname": "System.summary", "kind": "function", "doc": "<p>Returns a dict with a summary of the System data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems", "modulename": "aton.qrotor.systems", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains utility functions to handle multiple <code>aton.qrotor.system</code> calculations.\nThese are commonly used as a list of <code>System</code> objects.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>as_list()</code></td>\n  <td>Ensures that a list only contains System objects</td>\n</tr>\n<tr>\n  <td><code>save_energies()</code></td>\n  <td>Save the energy eigenvalues for all systems to a CSV</td>\n</tr>\n<tr>\n  <td><code>save_splittings()</code></td>\n  <td>Save the tunnel splitting energies for all systems to a CSV</td>\n</tr>\n<tr>\n  <td><code>get_energies()</code></td>\n  <td>Get the eigenvalues from all systems</td>\n</tr>\n<tr>\n  <td><code>get_gridsizes()</code></td>\n  <td>Get all gridsizes</td>\n</tr>\n<tr>\n  <td><code>get_runtimes()</code></td>\n  <td>Get all runtimes</td>\n</tr>\n<tr>\n  <td><code>get_groups()</code></td>\n  <td>Get the chemical groups in use</td>\n</tr>\n<tr>\n  <td><code>get_ideal_E()</code></td>\n  <td>Calculate the ideal energy for a specified level</td>\n</tr>\n<tr>\n  <td><code>sort_by_gridsize()</code></td>\n  <td>Sort systems by gridsize</td>\n</tr>\n<tr>\n  <td><code>reduce_size()</code></td>\n  <td>Discard data that takes too much space</td>\n</tr>\n<tr>\n  <td><code>summary()</code></td>\n  <td>Print a summary of a System or list of Systems</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.qrotor.systems.as_list", "modulename": "aton.qrotor.systems", "qualname": "as_list", "kind": "function", "doc": "<p>Ensures that <code>systems</code> is a list of System objects.</p>\n\n<p>If it is a System, returns a list with that System as the only element.\nIf it is neither a list nor a System,\nor if the list does not contain only System objects,\nit raises an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">systems</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.save_energies", "modulename": "aton.qrotor.systems", "qualname": "save_energies", "kind": "function", "doc": "<p>Save the energy eigenvalues for all <code>systems</code> to a eigenvalues.csv file.</p>\n\n<p>Returns a Pandas Dataset with <code>System.comment</code> columns and <code>System.eigenvalues</code> values.</p>\n\n<p>The output file can be changed with <code>filepath</code>,\nor set to null to avoid saving the dataset.\nA <code>comment</code> can be included at the top of the file.\nNote that <code>System.comment</code> must not include commas (<code>,</code>).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">systems</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;eigenvalues.csv&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.save_splittings", "modulename": "aton.qrotor.systems", "qualname": "save_splittings", "kind": "function", "doc": "<p>Save the tunnel splitting energies for all <code>systems</code> to a splittings.csv file.</p>\n\n<p>Returns a Pandas Dataset with <code>System.comment</code> columns and <code>System.splittings</code> values.</p>\n\n<p>The output file can be changed with <code>filepath</code>,\nor set to null to avoid saving the dataset.\nA <code>comment</code> can be included at the top of the file.\nNote that <code>System.comment</code> must not include commas (<code>,</code>).\nDifferent splitting lengths across systems are allowed - missing values will be NaN.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">systems</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;splittings.csv&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.get_energies", "modulename": "aton.qrotor.systems", "qualname": "get_energies", "kind": "function", "doc": "<p>Get a list with all lists of eigenvalues from all systems.</p>\n\n<p>If no eigenvalues are present for a particular system, appends None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">systems</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.get_gridsizes", "modulename": "aton.qrotor.systems", "qualname": "get_gridsizes", "kind": "function", "doc": "<p>Get a list with all gridsize values.</p>\n\n<p>If no gridsize value is present for a particular system, appends None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">systems</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.get_runtimes", "modulename": "aton.qrotor.systems", "qualname": "get_runtimes", "kind": "function", "doc": "<p>Returns a list with all runtime values.</p>\n\n<p>If no runtime value is present for a particular system, appends None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">systems</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.get_groups", "modulename": "aton.qrotor.systems", "qualname": "get_groups", "kind": "function", "doc": "<p>Returns a list with all <code>System.group</code> values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">systems</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.get_ideal_E", "modulename": "aton.qrotor.systems", "qualname": "get_ideal_E", "kind": "function", "doc": "<p>Calculates the ideal energy for a specified <code>E_level</code>.</p>\n\n<p>To be used in convergence tests with <code>potential_name = 'zero'</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">E_level</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.sort_by_gridsize", "modulename": "aton.qrotor.systems", "qualname": "sort_by_gridsize", "kind": "function", "doc": "<p>Sorts a list of System objects by <code>System.gridsize</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">systems</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.reduce_size", "modulename": "aton.qrotor.systems", "qualname": "reduce_size", "kind": "function", "doc": "<p>Discard data that takes too much space.</p>\n\n<p>Removes eigenvectors, potential values and grids,\nfor all System values inside the <code>systems</code> list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">systems</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.qrotor.systems.summary", "modulename": "aton.qrotor.systems", "qualname": "summary", "kind": "function", "doc": "<p>Print a summary of a System or list of Systems.</p>\n\n<p>Print extra info with <code>verbose=True</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">systems</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx", "modulename": "aton.spx", "kind": "module", "doc": "<h1 id=\"spectra-analysis\">Spectra analysis</h1>\n\n<p>This module contains spectral analysis tools.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.spx.classes</code></td>\n  <td>Definition of the <code>Spectra</code>, <code>Plotting</code> and <code>Material</code> classes, instantiated as <code>aton.spx.Class()</code></td>\n</tr>\n<tr>\n  <td><code>aton.spx.fit</code></td>\n  <td>Spectral fitting functions</td>\n</tr>\n<tr>\n  <td><code>aton.spx.normalize</code></td>\n  <td>Spectra normalisation</td>\n</tr>\n<tr>\n  <td><code>aton.spx.deuterium</code></td>\n  <td>Deuteration estimation functions</td>\n</tr>\n<tr>\n  <td><code>aton.spx.samples</code></td>\n  <td>Material definition examples</td>\n</tr>\n<tr>\n  <td><code>aton.spx.plot</code></td>\n  <td>Spectra plotting, as <code>aton.spx.plot(Spectra)</code></td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>To load two INS spectra CSV files with cm$^{-1}$ as input units,\nand plot them in meV units, normalizing their heights over the range from 20 to 50 meV:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">spx</span>\n<span class=\"c1\"># Set plotting parameters</span>\n<span class=\"n\">plotting_options</span> <span class=\"o\">=</span> <span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">Plotting</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span>     <span class=\"o\">=</span> <span class=\"s1\">&#39;Calculated INS&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"c1\"># Load the spectral data</span>\n<span class=\"n\">ins</span> <span class=\"o\">=</span> <span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">Spectra</span><span class=\"p\">(</span>\n    <span class=\"nb\">type</span>     <span class=\"o\">=</span> <span class=\"s1\">&#39;INS&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">files</span>    <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;example_1.csv&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;example_2.csv&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">units_in</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cm-1&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">units</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;meV&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">plotting</span> <span class=\"o\">=</span> <span class=\"n\">plotting_options</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"c1\"># Normalize the spectra</span>\n<span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">(</span><span class=\"n\">spectra</span><span class=\"o\">=</span><span class=\"n\">ins</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">])</span>\n<span class=\"c1\"># Plot the spectra</span>\n<span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">ins</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>More examples in the <a href=\"https://github.com/pablogila/aton/tree/main/examples\"><code>Aton/examples/</code></a> folder.</p>\n"}, {"fullname": "aton.spx.classes", "modulename": "aton.spx.classes", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains common classes used to load and manipulate spectral data.\nAny class can be instantiated directly from the <code>aton.spx</code> module,\nas <code>aton.spx.Class()</code>.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>Spectra</code></td>\n  <td>Used to load and process spectral data</td>\n</tr>\n<tr>\n  <td><code>Plotting</code></td>\n  <td>Stores plotting options, used in <code>Spectra.plotting</code></td>\n</tr>\n<tr>\n  <td><code>Material</code></td>\n  <td>Used to store and calculate material parameters, such as molar masses and neutron cross sections</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>To load two INS spectra CSV files with cm$^{-1}$ as input units,\nconverting them to meV units, and finally plotting them:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">spx</span>\n<span class=\"n\">ins</span> <span class=\"o\">=</span> <span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">Spectra</span><span class=\"p\">(</span>\n    <span class=\"nb\">type</span>     <span class=\"o\">=</span> <span class=\"s1\">&#39;ins&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">files</span>    <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;example_1.csv&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;example_2.csv&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">units_in</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cm-1&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">units</span>    <span class=\"o\">=</span> <span class=\"s1\">&#39;meV&#39;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">ins</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Check more use examples in the <a href=\"https://github.com/pablogila/aton/tree/main/examples\"><code>ATON/examples/</code></a> folder.</p>\n\n<hr />\n"}, {"fullname": "aton.spx.classes.Plotting", "modulename": "aton.spx.classes", "qualname": "Plotting", "kind": "class", "doc": "<p>Stores plotting options, read by <code>aton.spx.plot</code></p>\n"}, {"fullname": "aton.spx.classes.Plotting.__init__", "modulename": "aton.spx.classes", "qualname": "Plotting.__init__", "kind": "function", "doc": "<p>Default values can be overwritten when initializing the Plotting object.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">xlim</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ylim</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">margins</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">scaling</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">vline</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vline_error</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">figsize</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">log_xscale</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">show_yticks</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">xlabel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ylabel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">legend</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">legend_title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">legend_size</span><span class=\"o\">=</span><span class=\"s1\">&#39;medium&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">legend_loc</span><span class=\"o\">=</span><span class=\"s1\">&#39;best&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">save_as</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aton.spx.classes.Plotting.title", "modulename": "aton.spx.classes", "qualname": "Plotting.title", "kind": "variable", "doc": "<p>Title of the plot. Set it to an empty string to remove the title.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.xlim", "modulename": "aton.spx.classes", "qualname": "Plotting.xlim", "kind": "variable", "doc": "<p>List with the x-limits of the plot, as in <code>[xlim_low, xlim_top]</code>.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.ylim", "modulename": "aton.spx.classes", "qualname": "Plotting.ylim", "kind": "variable", "doc": "<p>List with the y-limits of the plot, as in <code>[ylim_low, ylim_top]</code>.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.margins", "modulename": "aton.spx.classes", "qualname": "Plotting.margins", "kind": "variable", "doc": "<p>List with additional margins at the bottom and top of the plot, as in <code>[low_margin, top_margin]</code>.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.offset", "modulename": "aton.spx.classes", "qualname": "Plotting.offset", "kind": "variable", "doc": "<p>If <code>True</code>, the plots will be separated automatically.</p>\n\n<p>It can be set to a float, to equally offset the plots by a given value.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.scaling", "modulename": "aton.spx.classes", "qualname": "Plotting.scaling", "kind": "variable", "doc": "<p>Scaling factor</p>\n"}, {"fullname": "aton.spx.classes.Plotting.vline", "modulename": "aton.spx.classes", "qualname": "Plotting.vline", "kind": "variable", "doc": "<p>Vertical line/s to plot. Can be an int or float with the x-position, or a list with several ones.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.vline_error", "modulename": "aton.spx.classes", "qualname": "Plotting.vline_error", "kind": "variable", "doc": "<p>Plot a shaded area of the specified width around the vertical lines specified at <code>vline</code>.</p>\n\n<p>It can be an array of the same length as <code>vline</code>, or a single value to be applied to all.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.figsize", "modulename": "aton.spx.classes", "qualname": "Plotting.figsize", "kind": "variable", "doc": "<p>Tuple with the figure size, as in matplotlib.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.log_xscale", "modulename": "aton.spx.classes", "qualname": "Plotting.log_xscale", "kind": "variable", "doc": "<p>If true, plot the x-axis in logarithmic scale.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.show_yticks", "modulename": "aton.spx.classes", "qualname": "Plotting.show_yticks", "kind": "variable", "doc": "<p>Show or not the yticks on the plot.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.xlabel", "modulename": "aton.spx.classes", "qualname": "Plotting.xlabel", "kind": "variable", "doc": "<p>Custom label of the x-axis.</p>\n\n<p>If <code>None</code>, the default label will be used.\nSet to <code>''</code> to remove the label of the horizontal axis.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.ylabel", "modulename": "aton.spx.classes", "qualname": "Plotting.ylabel", "kind": "variable", "doc": "<p>Custom label of the y-axis.</p>\n\n<p>If <code>None</code>, the default label will be used.\nSet to <code>''</code> to remove the label of the vertical axis.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.legend", "modulename": "aton.spx.classes", "qualname": "Plotting.legend", "kind": "variable", "doc": "<p>Legend of the plot.</p>\n\n<p>If <code>None</code>, the filenames will be used as legend.\nCan be a bool to show or hide the plot legend.\nIt can also be an array containing the strings to display;\nin that case, elements set to <code>False</code> will not be displayed.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.legend_title", "modulename": "aton.spx.classes", "qualname": "Plotting.legend_title", "kind": "variable", "doc": "<p>Title of the legend, defaults to <code>None</code>.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.legend_size", "modulename": "aton.spx.classes", "qualname": "Plotting.legend_size", "kind": "variable", "doc": "<p>Size of the legend, as in matplotlib. Defaults to <code>'medium'</code>.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.legend_loc", "modulename": "aton.spx.classes", "qualname": "Plotting.legend_loc", "kind": "variable", "doc": "<p>Location of the legend, as in matplotlib. Defaults to <code>'best'</code>.</p>\n"}, {"fullname": "aton.spx.classes.Plotting.save_as", "modulename": "aton.spx.classes", "qualname": "Plotting.save_as", "kind": "variable", "doc": "<p>Filename to save the plot. None by default.</p>\n"}, {"fullname": "aton.spx.classes.Spectra", "modulename": "aton.spx.classes", "qualname": "Spectra", "kind": "class", "doc": "<p>Spectra object. Used to load and process spectral data.</p>\n\n<p>Most functions in the <code>aton.spx</code> module receive this object as input.</p>\n"}, {"fullname": "aton.spx.classes.Spectra.__init__", "modulename": "aton.spx.classes", "qualname": "Spectra.__init__", "kind": "function", "doc": "<p>All values can be set when initializing the Spectra object.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">files</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dfs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">units</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">units_in</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">plotting</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Plotting</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Plotting</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "aton.spx.classes.Spectra.type", "modulename": "aton.spx.classes", "qualname": "Spectra.type", "kind": "variable", "doc": "<p>Type of the spectra: <code>'INS'</code>, <code>'ATR'</code>, or <code>'RAMAN'</code>.</p>\n"}, {"fullname": "aton.spx.classes.Spectra.comment", "modulename": "aton.spx.classes", "qualname": "Spectra.comment", "kind": "variable", "doc": "<p>Custom comment. If <code>Plotting.title</code> is None,  it will be the title of the plot.</p>\n"}, {"fullname": "aton.spx.classes.Spectra.files", "modulename": "aton.spx.classes", "qualname": "Spectra.files", "kind": "variable", "doc": "<p>List containing the files with the spectral data.</p>\n\n<p>Loaded automatically to <code>dfs</code> with Pandas at initialization.\nIn order for Pandas to read the files properly, note that the column lines must start by <code>#</code>.\nAny additional line that is not data must be removed or commented with <code>#</code>.\nCSV files must be formatted with the first column as the energy or energy transfer,\nand the second column with the intensity or absorbance, depending on the case.\nAn additional third <code>'Error'</code> column can be used.</p>\n"}, {"fullname": "aton.spx.classes.Spectra.dfs", "modulename": "aton.spx.classes", "qualname": "Spectra.dfs", "kind": "variable", "doc": "<p>List containing the pandas dataframes with the spectral data.</p>\n\n<p>Loaded automatically from <code>files</code> at initialization.</p>\n"}, {"fullname": "aton.spx.classes.Spectra.units", "modulename": "aton.spx.classes", "qualname": "Spectra.units", "kind": "variable", "doc": "<p>Target units of the spectral data.</p>\n\n<p>Can be <code>'meV'</code> or <code>'cm-1'</code>.</p>\n"}, {"fullname": "aton.spx.classes.Spectra.units_in", "modulename": "aton.spx.classes", "qualname": "Spectra.units_in", "kind": "variable", "doc": "<p>Input units of the spectral data, used in the input CSV files.</p>\n\n<p>Can be <code>'meV'</code> or <code>'cm-1'</code>.\nIf the input CSV files have different units,\nit can also be set as a list of the same length of the number of input files,\neg. <code>['meV', 'cm-1', 'cm-1']</code>.</p>\n"}, {"fullname": "aton.spx.classes.Spectra.plotting", "modulename": "aton.spx.classes", "qualname": "Spectra.plotting", "kind": "variable", "doc": "<p><code>Plotting</code> object, used to set the plotting options.</p>\n"}, {"fullname": "aton.spx.classes.Spectra.set_units", "modulename": "aton.spx.classes", "qualname": "Spectra.set_units", "kind": "function", "doc": "<p>Method to change between spectral units. ALWAYS use this method to do that.</p>\n\n<p>For example, to change to meV from cm-1:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">Spectra</span><span class=\"o\">.</span><span class=\"n\">set_units</span><span class=\"p\">(</span><span class=\"s1\">&#39;meV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cm-1&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">units</span>, </span><span class=\"param\"><span class=\"n\">units_in</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"s1\">&#39;cm-1&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.classes.Material", "modulename": "aton.spx.classes", "qualname": "Material", "kind": "class", "doc": "<p>Material class.</p>\n\n<p>Used to calculate molar masses and cross sections,\nand to pass data to different analysis functions\nsuch as <code>aton.spectra.deuterium.impulse_approx().</code></p>\n"}, {"fullname": "aton.spx.classes.Material.__init__", "modulename": "aton.spx.classes", "qualname": "Material.__init__", "kind": "function", "doc": "<p>All values can be set when initializing the Material object.\nHowever, it is recommended to only set the elements and the grams,\nand optionally the name, and calculate the rest with <code>Material.set()</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">elements</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">grams</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">grams_error</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mols</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mols_error</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">molar_mass</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cross_section</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">peaks</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "aton.spx.classes.Material.elements", "modulename": "aton.spx.classes", "qualname": "Material.elements", "kind": "variable", "doc": "<p>Dict of atoms in the material, as in <code>{'H': 6, 'C':1, 'N':1}</code>.</p>\n\n<p>Isotopes can be expressed as 'H2', 'He4', etc. with the atom symbol + isotope mass number.</p>\n"}, {"fullname": "aton.spx.classes.Material.name", "modulename": "aton.spx.classes", "qualname": "Material.name", "kind": "variable", "doc": "<p>String with the name of the material.</p>\n"}, {"fullname": "aton.spx.classes.Material.grams", "modulename": "aton.spx.classes", "qualname": "Material.grams", "kind": "variable", "doc": "<p>Mass, in grams.</p>\n"}, {"fullname": "aton.spx.classes.Material.grams_error", "modulename": "aton.spx.classes", "qualname": "Material.grams_error", "kind": "variable", "doc": "<p>Error of the measured mass in grams.</p>\n\n<p>Set automatically with <code>Material.set()</code>.</p>\n"}, {"fullname": "aton.spx.classes.Material.mols", "modulename": "aton.spx.classes", "qualname": "Material.mols", "kind": "variable", "doc": "<p>Number of moles.</p>\n\n<p>Set automatically with <code>Material.set()</code>.</p>\n"}, {"fullname": "aton.spx.classes.Material.mols_error", "modulename": "aton.spx.classes", "qualname": "Material.mols_error", "kind": "variable", "doc": "<p>Error of the number of moles.</p>\n\n<p>Set automatically with <code>Material.set()</code>.</p>\n"}, {"fullname": "aton.spx.classes.Material.molar_mass", "modulename": "aton.spx.classes", "qualname": "Material.molar_mass", "kind": "variable", "doc": "<p>Molar mass of the material, in mol/g.</p>\n\n<p>Calculated automatically with <code>Material.set()</code>.</p>\n"}, {"fullname": "aton.spx.classes.Material.cross_section", "modulename": "aton.spx.classes", "qualname": "Material.cross_section", "kind": "variable", "doc": "<p>Neutron total bound scattering cross section, in barns.</p>\n\n<p>Calculated automatically with <code>Material.set()</code>.</p>\n"}, {"fullname": "aton.spx.classes.Material.peaks", "modulename": "aton.spx.classes", "qualname": "Material.peaks", "kind": "variable", "doc": "<p>Dict with interesting peaks that you might want to store for later use.</p>\n"}, {"fullname": "aton.spx.classes.Material.set", "modulename": "aton.spx.classes", "qualname": "Material.set", "kind": "function", "doc": "<p>Set the molar mass, cross section and errors of the material.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.classes.Material.print", "modulename": "aton.spx.classes", "qualname": "Material.print", "kind": "function", "doc": "<p>Print a summary with the material information.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.deuterium", "modulename": "aton.spx.deuterium", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains methods to calculate deuteration levels from different spectra.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>impulse_approx()</code></td>\n  <td>Calculate the deuteration levels from INS spectra with the Impulse Approximation</td>\n</tr>\n<tr>\n  <td><code>peaks_mapbi3()</code></td>\n  <td>Estimates CH$_3$NH$_3$PbI$_3$ deuteration by integrating the INS disrotatory peaks</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.spx.deuterium.impulse_approx", "modulename": "aton.spx.deuterium", "qualname": "impulse_approx", "kind": "function", "doc": "<p>Calculate the deuteration levels from INS spectra\nwith the <em>Impulse Approximation</em>, see\n<a href=\"https://www.tandfonline.com/doi/full/10.1080/00018732.2017.1317963\">Andreani et al., Advances in Physics 66, 1\u201373 (2017)</a>.</p>\n\n<p>Protonated and deuterated materials must be specified\nas <code>aton.spectra.classes.Material</code> objects.\nNote that this approximation is very sensitive to the mass sample.\nThe threshold controls the start of the plateau (in meV)\nto start considering Deep Inelastic Neutron Scattering (DINS).\nThe protonated and deuterated dataframe indexes are specified\nby <code>H_df_index</code> and <code>D_df_index</code>, respectively.</p>\n\n<p>In this approximation, the ideal ratio between\nthe cross-sections and the experimental ratio between\nthe pleteaus at high energies should be the same:\n$$\n\\frac{\\text{plateau_D}}{\\text{plateau_H}} \\approx \\frac{\\text{cross_section_D}}{\\text{cross_section_H}}\n$$\nTaking this into account, the deuteration is estimated as:\n$$\n\\text{Deuteration} = \\frac{1-\\text{real_ratio}}{1-\\text{ideal_ratio}}\n$$</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ins</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span>,</span><span class=\"param\">\t<span class=\"n\">material_H</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Material</span>,</span><span class=\"param\">\t<span class=\"n\">material_D</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Material</span>,</span><span class=\"param\">\t<span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">600</span>,</span><span class=\"param\">\t<span class=\"n\">H_df_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">D_df_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.deuterium.peaks_mapbi3", "modulename": "aton.spx.deuterium", "qualname": "peaks_mapbi3", "kind": "function", "doc": "<p>Estimates CH$_3$NH$_3$PbI$_3$ deuteration by integrating the INS disrotatory peaks.</p>\n\n<p>The INS disrotatory peaks of CH3NH3 appear at ~38 meV for the fully protonated sample.\nNote that <code>peaks</code> must be a dictionary with the peak limits\nand the baseline, as in the example below:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">peaks</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;baseline&#39;</span> <span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;baseline_error&#39;</span> <span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;h6d0&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">41</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">],</span>\n    <span class=\"s1\">&#39;h5d1&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">41</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">],</span>\n    <span class=\"s1\">&#39;h4d2&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">41</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">],</span>\n    <span class=\"s1\">&#39;h3d3&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">34.7</span><span class=\"p\">,</span> <span class=\"mf\">37.3</span><span class=\"p\">],</span>\n    <span class=\"s1\">&#39;h2d4&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">31.0</span><span class=\"p\">,</span> <span class=\"mf\">33.0</span><span class=\"p\">],</span>\n    <span class=\"s1\">&#39;h1d5&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">28.0</span><span class=\"p\">,</span> <span class=\"mf\">30.5</span><span class=\"p\">],</span>\n    <span class=\"s1\">&#39;h0d6&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">26.5</span><span class=\"p\">,</span> <span class=\"mf\">28.0</span><span class=\"p\">],</span>\n    <span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>Peak keywords required for selective deuteration (only C or only N):\n<code>h6d0</code>, <code>h5d1</code>, <code>h4d2</code>, <code>h3d3</code>.</p>\n\n<p>Additional peak keywords required for total deuteration:\n<code>h2d4</code>, <code>h1d5</code>, <code>h0d6</code>.</p>\n\n<p>If some peak is not present in your sample,\njust set the limits to a small baseline plateau.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ins</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span>, </span><span class=\"param\"><span class=\"n\">peaks</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">df_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.fit", "modulename": "aton.spx.fit", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains functions for fitting and analyzing spectral data.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>plateau()</code></td>\n  <td>Fit the mean value and the error of a plateau</td>\n</tr>\n<tr>\n  <td><code>area_under_peak()</code></td>\n  <td>Calculate the area under a given peak</td>\n</tr>\n<tr>\n  <td><code>ratio_areas()</code></td>\n  <td>Check the ratio between two areas</td>\n</tr>\n<tr>\n  <td><code>mean()</code></td>\n  <td>Get the mean and standard deviation of a list of values</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.spx.fit.plateau", "modulename": "aton.spx.fit", "qualname": "plateau", "kind": "function", "doc": "<p>Fit the mean value and the error of a plateau in a <code>aton.spectra.Spectra</code> object.</p>\n\n<p>Use as <code>aton.spx.fit.plateau(spectra, cuts=[low_cut, high_cut], df_index=0)</code>.</p>\n\n<p>If <code>aton.spx.classes.Spectra.dfs[df_index]</code> has an 'Error' column, those errors are also taken into account\nalong with the standard deviation of the mean, else only the standard deviation is considered.\nThis is the case if your dataset had a third column with the errors\nwhen you imported the <code>aton.spx.classes.Spectra</code> object.</p>\n\n<p>Note that <code>cuts</code>, <code>low_cut</code> and/or <code>top_cut</code> can be set to None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">spectra</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span>, </span><span class=\"param\"><span class=\"n\">cuts</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">df_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.fit.area_under_peak", "modulename": "aton.spx.fit", "qualname": "area_under_peak", "kind": "function", "doc": "<p>Calculate the area under a given peak.</p>\n\n<p>Peaks must be defined as <code>peak:list=[xmin, xmax, baseline=0, baseline_error=0]</code>.\nIf the dataset has no <code>Error</code> column, the error for each point is assumed to be the same\nas the baseline error if <code>errors_as_in_baseline=True</code>, otherwise it is assumed to be zero.\nIf <code>min_as_baseline=True</code> and <code>baseline=0</code>, the baseline is assumed to be the minimum value.\nAlso, if <code>min_as_baseline=True</code> and there are negative areas even after applying the baseline,\nthe baseline will be corrected to the minimum value.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">spectra</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span>,</span><span class=\"param\">\t<span class=\"n\">peak</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">df_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">errors_as_in_baseline</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">min_as_baseline</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.fit.ratio_areas", "modulename": "aton.spx.fit", "qualname": "ratio_areas", "kind": "function", "doc": "<p>Check the ratio between two areas, e.g. to estimate deuteration levels from ATR data.</p>\n\n<p>The ratio is calculated as <code>area / area_total</code>. This behavior is modified if <code>inverse_ratio = True</code>,\nso that the ratio is calculated as <code>(area_total - area) / area_total</code>.\nNote that changing the ratio calculation also affects the error propagation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">area</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">area_total</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">area_error</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">area_total_error</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">inverse_ratio</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.fit.mean", "modulename": "aton.spx.fit", "qualname": "mean", "kind": "function", "doc": "<p>Takes an <code>array</code> of numerical values and returns the mean and standard deviation.</p>\n\n<p>It is calculated with numpy as:</p>\n\n<p>$\\sigma_{x}=\\sqrt{\\frac{\\sum{(x_{i}-{\\overline{x}})^2}}{N-\\text{ddof}}}$</p>\n\n<p>where ddof are the delta <code>degrees_of_freedom</code>, zero by default.\nSet it to <code>1</code> for a corrected sample standard deviation (low N cases),\nsee more details <a href=\"https://en.wikipedia.org/wiki/Standard_deviation#Corrected_sample_standard_deviation\">here</a>.</p>\n\n<p>The mean is rounded up to the order of the error by default. To override this behaviour, set <code>rounded=False</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">array</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">rounded</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">degrees_of_freedom</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.normalize", "modulename": "aton.spx.normalize", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains functions to normalize data and other variables.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>height()</code></td>\n  <td>Normalize a <code>spectra</code> by height</td>\n</tr>\n<tr>\n  <td><code>area()</code></td>\n  <td>Normalize a <code>spectra</code> by the area under the datasets</td>\n</tr>\n<tr>\n  <td><code>unit_str()</code></td>\n  <td>Normalize a <code>unit</code> string from user input</td>\n</tr>\n</tbody>\n</table>\n\n<hr />\n"}, {"fullname": "aton.spx.normalize.height", "modulename": "aton.spx.normalize", "qualname": "height", "kind": "function", "doc": "<p>Normalize a set of <code>spectra</code> by height.</p>\n\n<p>By default it normalises the spectra over the entire range.\nThis can be modified by setting a specific range,\nas in <code>range = [x_min, x_max]</code> with <code>axis = 'x'</code>.\nIt can also normalise over manual y-positions,\nfor example for peaks with different baselines.\nThis can be done by settingch <code>axis='y'</code>, and\n<code>range = [[y_min_1, y_max_1], ..., [y_min_N, y_max_N]]</code>.</p>\n\n<p>Heights are normalised with respect to the\nreference dataframe <code>df_index</code>, the first one by default.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">spectra</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span>,</span><span class=\"param\">\t<span class=\"nb\">range</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;x&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">df_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.normalize.area", "modulename": "aton.spx.normalize", "qualname": "area", "kind": "function", "doc": "<p>Normalize <code>spectra</code> by the area under the datasets.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">spectra</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span>,</span><span class=\"param\">\t<span class=\"nb\">range</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">df_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.normalize.unit_str", "modulename": "aton.spx.normalize", "qualname": "unit_str", "kind": "function", "doc": "<p>Normalize <code>unit</code> string from user input.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.plot", "modulename": "aton.spx.plot", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains the <code>plot()</code> function,\nused to plot <code>aton.spx.classes.Spectra</code> data,\ncontaining optional <code>aton.spx.classes.Plotting</code> parameters.</p>\n\n<p>It is used as <code>aton.spx.plot(Spectra)</code></p>\n\n<hr />\n"}, {"fullname": "aton.spx.plot.plot", "modulename": "aton.spx.plot", "qualname": "plot", "kind": "function", "doc": "<p>Plots a <code>spectra</code>.</p>\n\n<p>Optional <code>aton.spectra.classes.Plotting</code> attributes can be used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">spectra</span><span class=\"p\">:</span> <span class=\"n\">aton</span><span class=\"o\">.</span><span class=\"n\">spx</span><span class=\"o\">.</span><span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">Spectra</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "aton.spx.samples", "modulename": "aton.spx.samples", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>This module contains premade examples of material compositions, for testing purposes.\nThe <code>aton.spx.classes.Material.grams</code> is yet to be provided,\nbefore setting the material as <code>aton.spx.Material.set()</code>.</p>\n\n<hr />\n"}, {"fullname": "aton.spx.samples.CH3NH3PbI3", "modulename": "aton.spx.samples", "qualname": "CH3NH3PbI3", "kind": "variable", "doc": "<p>CH$_3$NH$_3$PbI$_3$</p>\n", "default_value": "&lt;aton.spx.classes.Material object&gt;"}, {"fullname": "aton.spx.samples.CD3ND3PbI3", "modulename": "aton.spx.samples", "qualname": "CD3ND3PbI3", "kind": "variable", "doc": "<p>CD$_3$ND$_3$PbI$_3$.</p>\n\n<p>With experimental values of the partially-deuterated amine peaks\nfor the disrotatory mode of MAPbI3's methylammonium.\nMeasured at TOSCA, ISIS RAL, UK, May 2024.</p>\n", "default_value": "&lt;aton.spx.classes.Material object&gt;"}, {"fullname": "aton.spx.samples.CH3ND3PbI3", "modulename": "aton.spx.samples", "qualname": "CH3ND3PbI3", "kind": "variable", "doc": "<p>CH$_3$ND$_3$PbI$_3$.</p>\n\n<p>With experimental values of the partially-deuterated amine peaks\nfor the disrotatory mode of MAPbI3's methylammonium.\nMeasured at TOSCA, ISIS RAL, UK, May 2024.</p>\n", "default_value": "&lt;aton.spx.classes.Material object&gt;"}, {"fullname": "aton.spx.samples.CD3NH3PbI3", "modulename": "aton.spx.samples", "qualname": "CD3NH3PbI3", "kind": "variable", "doc": "<p>CD$_3$NH$_3$PbI$_3$</p>\n", "default_value": "&lt;aton.spx.classes.Material object&gt;"}, {"fullname": "aton.spx.samples.CH3NH3I", "modulename": "aton.spx.samples", "qualname": "CH3NH3I", "kind": "variable", "doc": "<p>CH$_3$NH$_3$I</p>\n", "default_value": "&lt;aton.spx.classes.Material object&gt;"}, {"fullname": "aton.spx.samples.CH3ND3I", "modulename": "aton.spx.samples", "qualname": "CH3ND3I", "kind": "variable", "doc": "<p>CH$_3$ND$_3$I</p>\n", "default_value": "&lt;aton.spx.classes.Material object&gt;"}, {"fullname": "aton.txt", "modulename": "aton.txt", "kind": "module", "doc": "<h1 id=\"general-text-operations\">General text operations</h1>\n\n<p>This subpackage contains tools for general text operations.\nIt provides the basic functionality that powers more complex subpackages,\nsuch as <code>aton.api</code>.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<table>\n<thead>\n<tr>\n  <th></th>\n  <th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>aton.txt.find</code></td>\n  <td>Search for specific content from a text file</td>\n</tr>\n<tr>\n  <td><code>aton.txt.edit</code></td>\n  <td>Edit specific content from a text file</td>\n</tr>\n<tr>\n  <td><code>aton.txt.extract</code></td>\n  <td>Extract data from raw text strings</td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>The following example shows how to find a value in a text file, extract it and paste it into another file using the txt subpackage:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">txt</span>\n<span class=\"c1\"># Get an array with all matches</span>\n<span class=\"n\">alat_lines</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"p\">(</span><span class=\"s1\">&#39;relax.out&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Lattice parameter =&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Extract the numerical value of the last match</span>\n<span class=\"n\">alat</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">(</span><span class=\"n\">alat_lines</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">&#39;Lattice parameter&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Paste it into another file</span>\n<span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"o\">.</span><span class=\"n\">replace_line</span><span class=\"p\">(</span><span class=\"s1\">&#39;scf.in&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Lattice parameter =&#39;</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;Lattice parameter = </span><span class=\"si\">{</span><span class=\"n\">alat</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Advanced usage such as regular expression matching or\nadditional line extraction is detailed in the API documentation.</p>\n"}, {"fullname": "aton.txt.edit", "modulename": "aton.txt.edit", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Functions to manipulate the content of text files.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<p><code>insert_at()</code><br />\n<code>insert_under()</code><br />\n<code>replace()</code><br />\n<code>replace_line()</code><br />\n<code>replace_between()</code><br />\n<code>delete_under()</code><br />\n<code>correct_with_dict()</code><br />\n<code>from_template()</code>  </p>\n\n<hr />\n"}, {"fullname": "aton.txt.edit.insert_at", "modulename": "aton.txt.edit", "qualname": "insert_at", "kind": "function", "doc": "<p>Inserts a <code>text</code> in the line with <code>position</code> index of a given <code>filepath</code>.</p>\n\n<p>If <code>position</code> is negative, starts from the end of the file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.edit.insert_under", "modulename": "aton.txt.edit", "qualname": "insert_under", "kind": "function", "doc": "<p>Inserts a <code>text</code> under the line(s) containing the <code>key</code> in <code>filepath</code>.</p>\n\n<p>The keyword can be at any position within the line.\nRegular expressions can be used by setting <code>regex=True</code>. </p>\n\n<p>By default all matches are inserted with <code>insertions=0</code>,\nbut it can insert only a specific number of matches\nwith positive numbers (1, 2...), or starting from the bottom with negative numbers.</p>\n\n<p>The text can be introduced after a specific number of lines after the match,\nchanging the value <code>skips</code>. Negative integers introduce the text in the previous lines.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">insertions</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">skips</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">regex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.edit.replace", "modulename": "aton.txt.edit", "qualname": "replace", "kind": "function", "doc": "<p>Replaces the <code>key</code> with <code>text</code> in <code>filepath</code>.</p>\n\n<p>It can also be used to delete the keyword with <code>text=''</code>.\nTo search with regular expressions, set <code>regex=True</code>.</p>\n\n<p>The value <code>replacements</code> specifies the number of replacements to perform:\n1 to replace only the first keyword found, 2, 3...\nUse negative values to replace from the end of the file,\neg. to replace the last found key, use <code>replacements=-1</code>.\nTo replace all values, set <code>replacements = 0</code>, which is the value by default.</p>\n\n<pre><code>line... key ...line -&gt; line... text ...line\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">replacements</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">regex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.edit.replace_line", "modulename": "aton.txt.edit", "qualname": "replace_line", "kind": "function", "doc": "<p>Replaces the entire line(s) containing the <code>key</code> with the <code>text</code> in <code>filepath</code>.</p>\n\n<p>It can be used to delete line(s) by setting <code>text=''</code>.\nRegular expressions can be used with <code>regex=True</code>.</p>\n\n<p>The value <code>replacements</code> specifies the number of lines to replace:\n1 to replace only the first line with the keyword, 2, 3...\nUse negative values to replace from the end of the file,\ne.g., to replace only the last line containing the keyword, use <code>replacements = -1</code>.\nTo replace all lines, set <code>replacements = 0</code>, which is the value by default.</p>\n\n<p>The default line to replace is the matching line,\nbut it can be any other specific line after or before the matching line;\nthis is indicated with <code>skips</code> as a positive or negative integer.</p>\n\n<p>More lines can be replaced with <code>additional</code> lines (int).\nNote that the matched line plus the additional lines\nwill be replaced, this is, additional lines +1.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">replacements</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">skips</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">additional</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">regex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">raise_errors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.edit.replace_between", "modulename": "aton.txt.edit", "qualname": "replace_between", "kind": "function", "doc": "<p>Replace with <code>text</code> between keywords <code>key1</code> and <code>key2</code> in <code>filepath</code>.</p>\n\n<p>It can be used to delete the text between the keys by setting <code>text=''</code>.\nRegular expressions can be used by setting <code>regex=True</code>.</p>\n\n<p>Key lines are also deleted if <code>delete_keys=True</code>.</p>\n\n<p>Only the first matches of the keywords are used by default;\nyou can use the last ones with <code>from_end = True</code>.</p>\n\n<pre><code>lines...\nkey1\ntext\nkey2\nlines...\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">key1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">key2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">delete_keys</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">from_end</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">regex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.edit.delete_under", "modulename": "aton.txt.edit", "qualname": "delete_under", "kind": "function", "doc": "<p>Deletes all the content under the line containing the <code>key</code> in <code>filepath</code>.</p>\n\n<p>The keyword can be at any position within the line.\nRegular expressions can be used by setting <code>regex=True</code>.</p>\n\n<p>By default the first <code>match</code> is used; it can be any positive integer (0 is treated as 1!),\nincluding negative integers to select a match starting from the end of the file.</p>\n\n<p>The content can be deleted after a specific number of lines after the match,\nchanging the value <code>skips</code>, that skips the specified number of lines.\nNegative integers start deleting the content from the previous lines.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">match</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">skips</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">regex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.edit.correct_with_dict", "modulename": "aton.txt.edit", "qualname": "correct_with_dict", "kind": "function", "doc": "<p>Corrects the given text file <code>filepath</code> using a <code>correct</code> dictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">correct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.edit.from_template", "modulename": "aton.txt.edit", "qualname": "from_template", "kind": "function", "doc": "<p>Creates <code>new</code> file from <code>old</code>, replacing values from a <code>correct</code> dict, inserting a <code>comment</code> on top.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">old</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">correct</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.extract", "modulename": "aton.txt.extract", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Functions to extract data from raw text strings.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<p><code>number()</code><br />\n<code>string()</code><br />\n<code>column()</code><br />\n<code>coords()</code><br />\n<code>element()</code>  </p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>To extract a float value from a string,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">txt</span>\n<span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;energy =   500.0 Ry&#39;</span>\n<span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"s1\">&#39;energy&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># 500.0  (float output)</span>\n</code></pre>\n</div>\n\n<p>To extract a text value, after and before specific strings,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;energy =   500.0 Ry were calculated&#39;</span>\n<span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"s1\">&#39;energy&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;were&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># &#39;500.0 Ry&#39;  (String output)</span>\n</code></pre>\n</div>\n\n<p>To extract a value from a specific column,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Name, Energy, Force, Error</span>\n<span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Testing    1.1    1.2    0.3&#39;</span>\n<span class=\"n\">energy</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"o\">.</span><span class=\"n\">column</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"c1\"># &#39;1.1&#39;  (String output)</span>\n</code></pre>\n</div>\n\n<p>To extract coordinates,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s1\">&#39; He  0.10  0.20  0.30 &#39;</span>\n<span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"o\">.</span><span class=\"n\">coords</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n<span class=\"c1\"># [0.1, 0.2, 0.3]  (List of floats)</span>\n</code></pre>\n</div>\n\n<p>To extract chemical elements,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s1\">&#39; He4  0.10  Ag  0.20  Pb  0.30 &#39;</span>\n<span class=\"n\">first_element</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"c1\"># &#39;He4&#39;</span>\n<span class=\"n\">third_element</span> <span class=\"o\">=</span> <span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"c1\"># &#39;Pb&#39;</span>\n</code></pre>\n</div>\n\n<hr />\n"}, {"fullname": "aton.txt.extract.number", "modulename": "aton.txt.extract", "qualname": "number", "kind": "function", "doc": "<p>Extracts the float value of a given <code>name</code> variable from a raw <code>text</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.extract.string", "modulename": "aton.txt.extract", "qualname": "string", "kind": "function", "doc": "<p>Extracts the <code>text</code> value of a given <code>name</code> variable from a raw string. Stops before an optional <code>stop</code> string.</p>\n\n<p>Removes leading and trailing commas by default, change this with <code>strip = False</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">stop</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">strip</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.extract.column", "modulename": "aton.txt.extract", "qualname": "column", "kind": "function", "doc": "<p>Extracts the desired <code>column</code> index of a given <code>string</code> (0 by default).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">column</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.extract.coords", "modulename": "aton.txt.extract", "qualname": "coords", "kind": "function", "doc": "<p>Returns a list with the float coordinates expressed in a given <code>text</code> string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.extract.element", "modulename": "aton.txt.extract", "qualname": "element", "kind": "function", "doc": "<p>Extract a chemical element from a raw <code>text</code> string.</p>\n\n<p>If there are several elements, you can return a specific <code>index</code> match (positive, 0 by default).\nAllows for standard elements (H, He, Na...) and isotopes (H2, He4...).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.find", "modulename": "aton.txt.find", "kind": "module", "doc": "<h1 id=\"description\">Description</h1>\n\n<p>Functions to search for specific content inside text files.</p>\n\n<h1 id=\"index\">Index</h1>\n\n<p>Find and return specific text strings from a file<br />\n<code>lines()</code><br />\n<code>between()</code>  </p>\n\n<p>Find the <code>(start, end)</code> position of specific strings in a file<br />\n<code>pos()</code><br />\n<code>pos_regex()</code><br />\n<code>next_pos()</code><br />\n<code>next_pos_regex()</code><br />\n<code>line_pos()</code><br />\n<code>between_pos()</code>  </p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>To find the lines containing the word 'key', plus an additional line below,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">txt</span>\n<span class=\"c1\"># with split = False</span>\n<span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">&#39;key&#39;</span><span class=\"p\">,</span> <span class=\"n\">additional</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"c1\"># [&#39;line with key 1\\nline below first match&#39;,</span>\n    <span class=\"c1\">#  &#39;line with key 2\\nline below second match]</span>\n<span class=\"c1\"># with split = True</span>\n<span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">&#39;key&#39;</span><span class=\"p\">,</span> <span class=\"n\">additional</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">split</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"c1\"># [&#39;line with key 1&#39;,</span>\n    <span class=\"c1\"># &#39;line below first match&#39;,</span>\n    <span class=\"c1\"># &#39;line with key 2&#39;,</span>\n    <span class=\"c1\"># &#39;line below second match]</span>\n</code></pre>\n</div>\n\n<p>To find the text between the lines containing the words 'first' and 'second',</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">aton</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">txt</span>\n<span class=\"n\">txt</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"o\">.</span><span class=\"n\">between</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">key1</span><span class=\"o\">=</span><span class=\"s1\">&#39;first&#39;</span><span class=\"p\">,</span> <span class=\"n\">key2</span><span class=\"o\">=</span><span class=\"s1\">&#39;second&#39;</span><span class=\"p\">)</span>\n    <span class=\"c1\"># &#39;first line\\nadditional\\nlines\\nin\\nbetween\\nsecond line&#39;</span>\n</code></pre>\n</div>\n\n<hr />\n"}, {"fullname": "aton.txt.find.lines", "modulename": "aton.txt.find", "qualname": "lines", "kind": "function", "doc": "<p>Returns a list with the matches containing the <code>key</code> string in <code>filepath</code>.</p>\n\n<p>If no match is found, returns an empty list.</p>\n\n<p>To use regular expressions in the search, set <code>regex=True</code>\n(deactivated by default).</p>\n\n<p>The value <code>matches</code> specifies the max number of matches to be returned.\nDefaults to 0 to return all possible matches. Set it to 1 to return only one match,\nor to negative integers to start the search from the end of the file upwards.</p>\n\n<p>The value <code>additional</code> specifies the number of additional lines\nbelow the target line that are also returned;\n2 to return the found line plus two additional lines below, etc.\nNegative values return the specified number of lines before the target line.\nThe original ordering from the file is preserved.\nDefaults to <code>additional=0</code>, only returning the target line.\nBy default, the additional lines are returned\nin the same list item as the match separated by a <code>\\n</code>,\nunless <code>split=True</code>, in which case these additional lines\nare splitted and added as additional items in the list.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">matches</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">additional</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">split</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">regex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.find.between", "modulename": "aton.txt.find", "qualname": "between", "kind": "function", "doc": "<p>Returns the content between the lines with <code>key1</code> and <code>key2</code> in <code>filepath</code>.</p>\n\n<p>Keywords can be at any position within the line.\nRegular expressions can be used by setting <code>regex=True</code>.</p>\n\n<p>Key lines are omited by default, but can be returned with <code>include_keys=True</code>.</p>\n\n<p>If there is more than one match, only the first one is considered by default;\nset <code>match</code> (int) to specify a particular match (1, 2... 0 is considered as 1!).\nUse negative numbers to start from the end of the file.</p>\n\n<p>If no match is found, returns an empty string.</p>\n\n<p>If <code>key2</code> is not found, it returns all the text from <code>key1</code> to the end of the file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">key1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">key2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">include_keys</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">match</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">regex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.find.pos", "modulename": "aton.txt.find", "qualname": "pos", "kind": "function", "doc": "<p>Returns a list with the positions of the <code>key</code> in <code>filepath</code>.</p>\n\n<p>If no match is found, returns an empty list.</p>\n\n<p>The <code>filepath</code> can be a file or a memory mapped file.</p>\n\n<p>The value <code>matches</code> specifies the max number of matches to return.\nDefaults to 0 to return all possible matches.\nSet it to 1 to return only one match,\n2 to get the first two matches, etc.\nYou can also set it to negative integers to start\nsearching from the end of the file upwards.</p>\n\n<p>This method is faster than <code>pos_regex()</code>,\nbut does not search for regular expressions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">matches</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.find.pos_regex", "modulename": "aton.txt.find", "qualname": "pos_regex", "kind": "function", "doc": "<p>Returns a list of the positions of a <code>key</code> in a given <code>filepath</code> (actual file, not mmapped!).</p>\n\n<p>The value <code>matches</code> specifies the max number of matches to return.\nDefaults to 0 to return all possible matches. Set it to 1 to return only one match,\nor to negative integers to start searching from the end of the file upwards.</p>\n\n<p>For big files, this method is slower than <code>pos()</code>, but it can search for regular expressions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">matches</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.find.next_pos", "modulename": "aton.txt.find", "qualname": "next_pos", "kind": "function", "doc": "<p>Get the next position of the <code>key</code> in the <code>filepath</code> (file or mmapped file), starting from an initial <code>position</code> tuple.</p>\n\n<p>The <code>match</code> number specifies the nonzero index of the next match to return (1, 2... 0 is considered as 1!).\nIt can be negative to search backwards from the initial position.\nThe last known positions will be returned if no more matches are found.</p>\n\n<p>This method is specific for normal strings.\nTo use regular expressions, check <code>next_pos_regex()</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">match</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.find.next_pos_regex", "modulename": "aton.txt.find", "qualname": "next_pos_regex", "kind": "function", "doc": "<p>Get the next position of the <code>key</code> in the <code>filepath</code> (actual file, not mmapped!), starting from an initial <code>position</code> tuple.</p>\n\n<p>The <code>match</code> number specifies the next match to return (1, 2... 0 is considered as 1!).\nIt can be negative to search backwards from the initial position.\nThis method is specific for regular expressions.</p>\n\n<p>For normal strings, check the faster <code>next_pos()</code> method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">match</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.find.line_pos", "modulename": "aton.txt.find", "qualname": "line_pos", "kind": "function", "doc": "<p>Get the position of the full line containing the <code>position</code> tuple in <code>filepath</code> (whether file or memory mapped file).</p>\n\n<p>A specific line below can be returned with <code>skips</code> being a natural int,\nor previous lines with negative values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span>, </span><span class=\"param\"><span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span>, </span><span class=\"param\"><span class=\"n\">skips</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "aton.txt.find.between_pos", "modulename": "aton.txt.find", "qualname": "between_pos", "kind": "function", "doc": "<p>Returns the positions of the content between the lines containing <code>key1</code> and <code>key2</code> in the <code>filepath</code>.</p>\n\n<p>Keywords can be at any position within the line.\nRegular expressions can be used by setting <code>regex=True</code>.</p>\n\n<p>Key lines are omited by default, but can be returned with <code>include_keys=True</code>.</p>\n\n<p>If there is more than one match, only the first one is considered by default;\nset <code>match</code> number to specify a particular match (1, 2... 0 is considered as 1!).\nUse negative numbers to start from the end of the file.</p>\n\n<p>If <code>key2</code> is not found, it returns the text position from <code>key1</code> to the end of the file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filepath</span>,</span><span class=\"param\">\t<span class=\"n\">key1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">key2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">include_keys</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">match</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">regex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();